['options.ckptDir: valwithoptimiser', 'options.maxDepth: 6', 'options.cnnLR: 0.001', 'options.mlpLR: 0.001', 'options.cnnEpochs: 60', 'options.mlpEpochs: 60', 'options.cnnOut: 32', 'options.mlpFC1: 516', 'options.mlpFC2: 32']
==> Preparing data..
Files already downloaded and verified
Files already downloaded and verified
len(trainInputDict["data"]):  50000 ,  len(valInputDict["data"]):  0 ,  len(testInputDict["data"]):  10000
nodeId:  1 , imgTensorShape :  torch.Size([50000, 3, 32, 32])
nodeId: 1 ,  parentId: 0 ,  level: 0 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 10 ,  numData: 50000
Running nodeId:  1
0 Train Loss: 169.960 | Train Acc: 40.430 
1 Train Loss: 139.752 | Train Acc: 51.004 
2 Train Loss: 127.896 | Train Acc: 55.520 
3 Train Loss: 120.519 | Train Acc: 58.098 
4 Train Loss: 113.372 | Train Acc: 60.616 
5 Train Loss: 107.746 | Train Acc: 62.724 
6 Train Loss: 103.652 | Train Acc: 64.350 
7 Train Loss: 100.024 | Train Acc: 65.822 
8 Train Loss: 97.611 | Train Acc: 66.228 
9 Train Loss: 94.436 | Train Acc: 67.402 
10 Train Loss: 91.018 | Train Acc: 68.778 
11 Train Loss: 88.916 | Train Acc: 69.720 
12 Train Loss: 87.462 | Train Acc: 69.904 
13 Train Loss: 84.884 | Train Acc: 70.986 
14 Train Loss: 82.849 | Train Acc: 71.974 
15 Train Loss: 81.031 | Train Acc: 72.232 
16 Train Loss: 79.009 | Train Acc: 73.198 
17 Train Loss: 77.394 | Train Acc: 73.662 
18 Train Loss: 75.663 | Train Acc: 74.266 
19 Train Loss: 73.945 | Train Acc: 74.892 
20 Train Loss: 69.095 | Train Acc: 77.172 
21 Train Loss: 68.127 | Train Acc: 77.546 
22 Train Loss: 67.236 | Train Acc: 77.840 
23 Train Loss: 66.419 | Train Acc: 78.290 
24 Train Loss: 66.105 | Train Acc: 78.334 
25 Train Loss: 65.340 | Train Acc: 78.750 
26 Train Loss: 64.665 | Train Acc: 78.824 
27 Train Loss: 63.945 | Train Acc: 79.184 
28 Train Loss: 63.256 | Train Acc: 79.496 
29 Train Loss: 62.557 | Train Acc: 79.754 
30 Train Loss: 62.146 | Train Acc: 79.810 
31 Train Loss: 61.455 | Train Acc: 80.044 
32 Train Loss: 61.119 | Train Acc: 80.220 
33 Train Loss: 60.594 | Train Acc: 80.408 
34 Train Loss: 59.813 | Train Acc: 80.698 
35 Train Loss: 59.380 | Train Acc: 80.840 
36 Train Loss: 58.730 | Train Acc: 81.012 
37 Train Loss: 58.135 | Train Acc: 81.374 
38 Train Loss: 57.543 | Train Acc: 81.526 
39 Train Loss: 56.791 | Train Acc: 81.890 
40 Train Loss: 54.575 | Train Acc: 83.168 
41 Train Loss: 54.356 | Train Acc: 83.094 
42 Train Loss: 54.151 | Train Acc: 83.138 
43 Train Loss: 53.867 | Train Acc: 83.276 
44 Train Loss: 53.593 | Train Acc: 83.442 
45 Train Loss: 53.428 | Train Acc: 83.632 
46 Train Loss: 53.185 | Train Acc: 83.678 
47 Train Loss: 53.114 | Train Acc: 83.656 
48 Train Loss: 52.687 | Train Acc: 83.832 
49 Train Loss: 52.617 | Train Acc: 83.856 
50 Train Loss: 52.448 | Train Acc: 83.922 
51 Train Loss: 52.071 | Train Acc: 84.052 
52 Train Loss: 51.895 | Train Acc: 84.068 
53 Train Loss: 51.618 | Train Acc: 84.256 
54 Train Loss: 51.528 | Train Acc: 84.240 
55 Train Loss: 51.282 | Train Acc: 84.360 
56 Train Loss: 50.973 | Train Acc: 84.432 
57 Train Loss: 50.863 | Train Acc: 84.596 
58 Train Loss: 50.650 | Train Acc: 84.564 
59 Train Loss: 50.319 | Train Acc: 84.858 
CNN trained successfully...
image_next_flat.shape :  torch.Size([50000, 25088])
Kmeans trained successfully...
printing expected split from k means
{6: 0, 4: 0, 1: 1, 2: 0, 7: 0, 3: 0, 9: 1, 0: 1, 5: 0, 8: 1}
Printing final_dict items...
{6: 0, 4: 0, 5: 0, 7: 0, 3: 0, 2: 1, 1: 1, 9: 1, 0: 1, 8: 1}
Image Statistics before MLP : L R :  25000 25000
expectedMlpLabels.shape :  torch.Size([50000])
0 Loss: 81.395 | Acc: 81.928
1 Loss: 69.894 | Acc: 84.808
2 Loss: 63.723 | Acc: 86.080
3 Loss: 59.279 | Acc: 87.064
4 Loss: 55.607 | Acc: 88.086
5 Loss: 51.872 | Acc: 88.866
6 Loss: 48.969 | Acc: 89.514
7 Loss: 45.505 | Acc: 90.292
8 Loss: 42.905 | Acc: 90.950
9 Loss: 39.779 | Acc: 91.534
10 Loss: 31.987 | Acc: 93.368
11 Loss: 28.729 | Acc: 94.016
12 Loss: 26.913 | Acc: 94.482
13 Loss: 24.901 | Acc: 94.872
14 Loss: 22.969 | Acc: 95.248
15 Loss: 21.863 | Acc: 95.510
16 Loss: 20.141 | Acc: 95.906
17 Loss: 19.419 | Acc: 96.078
18 Loss: 18.544 | Acc: 96.250
19 Loss: 17.022 | Acc: 96.596
20 Loss: 13.669 | Acc: 97.402
21 Loss: 12.422 | Acc: 97.580
22 Loss: 12.117 | Acc: 97.634
23 Loss: 11.200 | Acc: 97.844
24 Loss: 10.553 | Acc: 98.068
25 Loss: 10.381 | Acc: 98.030
26 Loss: 10.299 | Acc: 98.012
27 Loss: 8.866 | Acc: 98.304
28 Loss: 9.028 | Acc: 98.284
29 Loss: 9.110 | Acc: 98.264
30 Loss: 7.551 | Acc: 98.598
31 Loss: 6.927 | Acc: 98.758
32 Loss: 7.079 | Acc: 98.748
33 Loss: 6.746 | Acc: 98.768
34 Loss: 6.956 | Acc: 98.728
35 Loss: 6.373 | Acc: 98.822
36 Loss: 6.506 | Acc: 98.798
37 Loss: 6.007 | Acc: 98.878
38 Loss: 6.275 | Acc: 98.912
39 Loss: 6.091 | Acc: 98.876
40 Loss: 5.465 | Acc: 99.028
41 Loss: 5.771 | Acc: 98.956
42 Loss: 5.440 | Acc: 99.002
43 Loss: 5.651 | Acc: 99.048
44 Loss: 5.538 | Acc: 99.010
45 Loss: 5.518 | Acc: 98.982
46 Loss: 5.627 | Acc: 99.046
47 Loss: 5.359 | Acc: 99.050
48 Loss: 5.186 | Acc: 99.112
49 Loss: 5.155 | Acc: 99.092
50 Loss: 4.925 | Acc: 99.160
51 Loss: 4.987 | Acc: 99.142
52 Loss: 4.843 | Acc: 99.162
53 Loss: 5.219 | Acc: 99.088
54 Loss: 4.839 | Acc: 99.156
55 Loss: 4.763 | Acc: 99.170
56 Loss: 5.100 | Acc: 99.090
57 Loss: 4.957 | Acc: 99.154
58 Loss: 4.863 | Acc: 99.154
59 Loss: 4.954 | Acc: 99.082
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([25000, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([25000])
rTrainDict[data].shape:  torch.Size([25000, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([25000])
lValDict[data].shape:  torch.Size([0])   lValDict[label].shape:  torch.Size([0])
rValDict[data].shape:  torch.Size([0])   rValDict[label].shape:  torch.Size([0])
# of Left images:  25000.0
# of Right images:  25000.0
giniRightRatio:  0.8000000000000002
giniLeftRatio:  0.8000000000000002
impurityDrop:  0.8000000000000002
giniGain:  0.09999999999999987
lclasses:  [0, 0, 0, 5000, 5000, 5000, 5000, 5000, 0, 0]
rclasses:  [5000, 5000, 5000, 0, 0, 0, 0, 0, 5000, 5000]
noOfLeftClasses:  5
noOfRightClasses:  5
RETURNING FROM WORK...
nodeId:  2 , imgTensorShape :  torch.Size([25000, 3, 32, 32])
nodeId: 2 ,  parentId: 1 ,  level: 1 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 25000
nodeId:  3 , imgTensorShape :  torch.Size([25000, 3, 32, 32])
nodeId: 3 ,  parentId: 1 ,  level: 1 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 25000
Running nodeId:  2
0 Train Loss: 141.815 | Train Acc: 41.916 
1 Train Loss: 115.679 | Train Acc: 54.076 
2 Train Loss: 106.259 | Train Acc: 58.288 
3 Train Loss: 100.830 | Train Acc: 60.768 
4 Train Loss: 95.334 | Train Acc: 63.416 
5 Train Loss: 91.668 | Train Acc: 64.920 
6 Train Loss: 87.374 | Train Acc: 66.872 
7 Train Loss: 85.259 | Train Acc: 67.492 
8 Train Loss: 83.332 | Train Acc: 68.236 
9 Train Loss: 80.059 | Train Acc: 69.300 
10 Train Loss: 78.578 | Train Acc: 70.252 
11 Train Loss: 75.753 | Train Acc: 71.432 
12 Train Loss: 73.975 | Train Acc: 72.508 
13 Train Loss: 72.876 | Train Acc: 72.824 
14 Train Loss: 70.903 | Train Acc: 73.504 
15 Train Loss: 68.751 | Train Acc: 74.352 
16 Train Loss: 67.403 | Train Acc: 75.120 
17 Train Loss: 65.436 | Train Acc: 75.908 
18 Train Loss: 63.977 | Train Acc: 76.408 
19 Train Loss: 62.313 | Train Acc: 77.304 
20 Train Loss: 57.662 | Train Acc: 79.660 
21 Train Loss: 57.379 | Train Acc: 79.916 
22 Train Loss: 56.056 | Train Acc: 80.252 
23 Train Loss: 55.363 | Train Acc: 80.728 
24 Train Loss: 54.798 | Train Acc: 80.892 
25 Train Loss: 54.335 | Train Acc: 81.164 
26 Train Loss: 53.487 | Train Acc: 81.604 
27 Train Loss: 52.632 | Train Acc: 81.916 
28 Train Loss: 52.361 | Train Acc: 81.764 
29 Train Loss: 51.706 | Train Acc: 82.144 
30 Train Loss: 51.800 | Train Acc: 82.148 
31 Train Loss: 50.417 | Train Acc: 82.776 
32 Train Loss: 49.858 | Train Acc: 82.976 
33 Train Loss: 49.462 | Train Acc: 83.316 
34 Train Loss: 48.484 | Train Acc: 83.632 
35 Train Loss: 47.979 | Train Acc: 83.856 
36 Train Loss: 47.555 | Train Acc: 84.060 
37 Train Loss: 46.772 | Train Acc: 84.420 
38 Train Loss: 46.343 | Train Acc: 84.532 
39 Train Loss: 45.576 | Train Acc: 84.988 
40 Train Loss: 43.541 | Train Acc: 86.164 
41 Train Loss: 43.454 | Train Acc: 86.244 
42 Train Loss: 43.030 | Train Acc: 86.252 
43 Train Loss: 42.787 | Train Acc: 86.460 
44 Train Loss: 42.621 | Train Acc: 86.536 
45 Train Loss: 42.336 | Train Acc: 86.664 
46 Train Loss: 42.154 | Train Acc: 86.704 
47 Train Loss: 41.846 | Train Acc: 86.896 
48 Train Loss: 41.788 | Train Acc: 87.000 
49 Train Loss: 41.475 | Train Acc: 86.928 
50 Train Loss: 41.325 | Train Acc: 86.972 
51 Train Loss: 40.985 | Train Acc: 87.232 
52 Train Loss: 40.844 | Train Acc: 87.192 
53 Train Loss: 40.627 | Train Acc: 87.180 
54 Train Loss: 40.342 | Train Acc: 87.476 
55 Train Loss: 40.103 | Train Acc: 87.600 
56 Train Loss: 40.208 | Train Acc: 87.396 
57 Train Loss: 39.710 | Train Acc: 87.792 
58 Train Loss: 39.415 | Train Acc: 88.052 
59 Train Loss: 39.281 | Train Acc: 87.796 
CNN trained successfully...
image_next_flat.shape :  torch.Size([25000, 25088])
Kmeans trained successfully...
printing expected split from k means
{3: 0, 1: 0, 4: 0, 0: 1, 2: 0}
Printing final_dict items...
{1: 0, 2: 0, 3: 1, 4: 1, 0: 1}
Image Statistics before MLP : L R :  10000 15000
expectedMlpLabels.shape :  torch.Size([25000])
0 Loss: 100.809 | Acc: 64.284
1 Loss: 90.931 | Acc: 69.240
2 Loss: 84.341 | Acc: 72.108
3 Loss: 78.370 | Acc: 74.480
4 Loss: 73.095 | Acc: 77.004
5 Loss: 67.777 | Acc: 79.012
6 Loss: 62.463 | Acc: 80.784
7 Loss: 58.836 | Acc: 82.616
8 Loss: 52.310 | Acc: 84.884
9 Loss: 49.169 | Acc: 85.856
10 Loss: 37.213 | Acc: 89.860
11 Loss: 31.767 | Acc: 91.476
12 Loss: 29.042 | Acc: 92.416
13 Loss: 26.156 | Acc: 92.960
14 Loss: 23.255 | Acc: 93.840
15 Loss: 21.429 | Acc: 94.384
16 Loss: 21.236 | Acc: 94.608
17 Loss: 19.648 | Acc: 95.096
18 Loss: 18.312 | Acc: 95.652
19 Loss: 16.301 | Acc: 96.020
20 Loss: 12.872 | Acc: 96.992
21 Loss: 11.271 | Acc: 97.328
22 Loss: 10.172 | Acc: 97.584
23 Loss: 9.552 | Acc: 97.732
24 Loss: 9.040 | Acc: 97.948
25 Loss: 9.201 | Acc: 97.912
26 Loss: 8.061 | Acc: 98.108
27 Loss: 8.317 | Acc: 98.120
28 Loss: 8.499 | Acc: 98.048
29 Loss: 7.323 | Acc: 98.248
30 Loss: 6.364 | Acc: 98.576
31 Loss: 5.998 | Acc: 98.652
32 Loss: 5.439 | Acc: 98.768
33 Loss: 5.462 | Acc: 98.848
34 Loss: 5.375 | Acc: 98.776
35 Loss: 5.627 | Acc: 98.800
36 Loss: 5.106 | Acc: 98.920
37 Loss: 5.895 | Acc: 98.796
38 Loss: 4.896 | Acc: 98.996
39 Loss: 4.973 | Acc: 98.924
40 Loss: 4.675 | Acc: 99.044
41 Loss: 4.440 | Acc: 99.040
42 Loss: 4.319 | Acc: 99.084
43 Loss: 3.880 | Acc: 99.176
44 Loss: 4.293 | Acc: 99.108
45 Loss: 4.198 | Acc: 99.164
46 Loss: 4.216 | Acc: 99.100
47 Loss: 4.165 | Acc: 99.184
48 Loss: 4.250 | Acc: 98.996
49 Loss: 4.035 | Acc: 99.140
50 Loss: 3.666 | Acc: 99.192
51 Loss: 3.985 | Acc: 99.140
52 Loss: 3.745 | Acc: 99.192
53 Loss: 3.412 | Acc: 99.316
54 Loss: 3.740 | Acc: 99.276
55 Loss: 3.419 | Acc: 99.304
56 Loss: 3.635 | Acc: 99.260
57 Loss: 3.442 | Acc: 99.276
58 Loss: 3.687 | Acc: 99.196
59 Loss: 3.482 | Acc: 99.276
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([10000, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([10000])
rTrainDict[data].shape:  torch.Size([15000, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([15000])
lValDict[data].shape:  torch.Size([0])   lValDict[label].shape:  torch.Size([0])
rValDict[data].shape:  torch.Size([0])   rValDict[label].shape:  torch.Size([0])
# of Left images:  10000.0
# of Right images:  15000.0
giniRightRatio:  0.6666666666666667
giniLeftRatio:  0.5
impurityDrop:  0.5555555555555556
giniGain:  0.24444444444444458
lclasses:  [0, 5000, 5000, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [5000, 0, 0, 5000, 5000, 0, 0, 0, 0, 0]
noOfLeftClasses:  2
noOfRightClasses:  3
RETURNING FROM WORK...
nodeId:  4 , imgTensorShape :  torch.Size([10000, 3, 32, 32])
nodeId: 4 ,  parentId: 2 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 10000
nodeId:  5 , imgTensorShape :  torch.Size([15000, 3, 32, 32])
nodeId: 5 ,  parentId: 2 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 15000
Running nodeId:  3
0 Train Loss: 108.920 | Train Acc: 57.504 
1 Train Loss: 84.113 | Train Acc: 68.508 
2 Train Loss: 77.299 | Train Acc: 71.212 
3 Train Loss: 72.909 | Train Acc: 73.180 
4 Train Loss: 69.133 | Train Acc: 74.696 
5 Train Loss: 65.529 | Train Acc: 75.820 
6 Train Loss: 63.221 | Train Acc: 76.996 
7 Train Loss: 59.711 | Train Acc: 78.576 
8 Train Loss: 57.072 | Train Acc: 79.460 
9 Train Loss: 54.044 | Train Acc: 80.684 
10 Train Loss: 52.106 | Train Acc: 81.364 
11 Train Loss: 51.089 | Train Acc: 81.776 
12 Train Loss: 48.580 | Train Acc: 82.604 
13 Train Loss: 46.905 | Train Acc: 83.356 
14 Train Loss: 44.540 | Train Acc: 84.508 
15 Train Loss: 43.190 | Train Acc: 84.884 
16 Train Loss: 41.864 | Train Acc: 85.324 
17 Train Loss: 40.979 | Train Acc: 85.616 
18 Train Loss: 39.852 | Train Acc: 86.156 
19 Train Loss: 38.088 | Train Acc: 86.816 
20 Train Loss: 34.298 | Train Acc: 88.672 
21 Train Loss: 33.610 | Train Acc: 89.004 
22 Train Loss: 32.935 | Train Acc: 89.220 
23 Train Loss: 32.514 | Train Acc: 89.460 
24 Train Loss: 31.993 | Train Acc: 89.480 
25 Train Loss: 31.570 | Train Acc: 89.748 
26 Train Loss: 31.057 | Train Acc: 90.256 
27 Train Loss: 30.890 | Train Acc: 90.236 
28 Train Loss: 30.213 | Train Acc: 90.264 
29 Train Loss: 29.669 | Train Acc: 90.696 
30 Train Loss: 29.301 | Train Acc: 90.972 
31 Train Loss: 28.811 | Train Acc: 90.912 
32 Train Loss: 28.510 | Train Acc: 91.000 
33 Train Loss: 28.358 | Train Acc: 91.100 
34 Train Loss: 27.842 | Train Acc: 91.356 
35 Train Loss: 27.144 | Train Acc: 91.620 
36 Train Loss: 26.939 | Train Acc: 91.812 
37 Train Loss: 26.577 | Train Acc: 91.748 
38 Train Loss: 25.915 | Train Acc: 92.216 
39 Train Loss: 25.905 | Train Acc: 92.016 
40 Train Loss: 24.195 | Train Acc: 92.948 
41 Train Loss: 23.819 | Train Acc: 93.296 
42 Train Loss: 23.779 | Train Acc: 93.208 
43 Train Loss: 23.667 | Train Acc: 93.308 
44 Train Loss: 23.381 | Train Acc: 93.492 
45 Train Loss: 23.120 | Train Acc: 93.680 
46 Train Loss: 22.958 | Train Acc: 93.724 
47 Train Loss: 22.786 | Train Acc: 93.824 
48 Train Loss: 22.715 | Train Acc: 93.748 
49 Train Loss: 22.479 | Train Acc: 93.984 
50 Train Loss: 22.309 | Train Acc: 94.072 
51 Train Loss: 22.284 | Train Acc: 93.984 
52 Train Loss: 22.077 | Train Acc: 94.096 
53 Train Loss: 21.957 | Train Acc: 94.136 
54 Train Loss: 21.709 | Train Acc: 94.208 
55 Train Loss: 21.595 | Train Acc: 94.300 
56 Train Loss: 21.413 | Train Acc: 94.364 
57 Train Loss: 21.355 | Train Acc: 94.228 
58 Train Loss: 21.166 | Train Acc: 94.456 
59 Train Loss: 21.120 | Train Acc: 94.484 
CNN trained successfully...
image_next_flat.shape :  torch.Size([25000, 25088])
Kmeans trained successfully...
printing expected split from k means
{4: 0, 1: 0, 2: 0, 0: 1, 3: 0}
Printing final_dict items...
{1: 0, 2: 0, 4: 1, 3: 1, 0: 1}
Image Statistics before MLP : L R :  10000 15000
expectedMlpLabels.shape :  torch.Size([25000])
0 Loss: 83.518 | Acc: 74.548
1 Loss: 68.239 | Acc: 80.596
2 Loss: 58.476 | Acc: 84.116
3 Loss: 52.027 | Acc: 86.176
4 Loss: 46.897 | Acc: 87.496
5 Loss: 43.850 | Acc: 88.416
6 Loss: 40.117 | Acc: 89.508
7 Loss: 35.774 | Acc: 90.784
8 Loss: 33.466 | Acc: 91.576
9 Loss: 29.935 | Acc: 92.524
10 Loss: 21.418 | Acc: 94.688
11 Loss: 18.840 | Acc: 95.428
12 Loss: 18.041 | Acc: 95.612
13 Loss: 15.174 | Acc: 96.304
14 Loss: 14.103 | Acc: 96.628
15 Loss: 13.491 | Acc: 96.748
16 Loss: 12.946 | Acc: 96.872
17 Loss: 11.879 | Acc: 97.200
18 Loss: 10.808 | Acc: 97.448
19 Loss: 10.646 | Acc: 97.492
20 Loss: 8.083 | Acc: 98.136
21 Loss: 6.782 | Acc: 98.548
22 Loss: 6.577 | Acc: 98.544
23 Loss: 5.896 | Acc: 98.748
24 Loss: 5.642 | Acc: 98.852
25 Loss: 5.576 | Acc: 98.812
26 Loss: 5.303 | Acc: 98.804
27 Loss: 5.077 | Acc: 98.956
28 Loss: 4.542 | Acc: 99.072
29 Loss: 4.206 | Acc: 99.132
30 Loss: 4.137 | Acc: 99.112
31 Loss: 3.532 | Acc: 99.248
32 Loss: 3.429 | Acc: 99.284
33 Loss: 3.592 | Acc: 99.228
34 Loss: 3.282 | Acc: 99.380
35 Loss: 3.196 | Acc: 99.292
36 Loss: 2.986 | Acc: 99.388
37 Loss: 3.057 | Acc: 99.332
38 Loss: 3.114 | Acc: 99.372
39 Loss: 3.136 | Acc: 99.348
40 Loss: 2.820 | Acc: 99.376
41 Loss: 2.850 | Acc: 99.388
42 Loss: 2.661 | Acc: 99.476
43 Loss: 2.490 | Acc: 99.468
44 Loss: 2.725 | Acc: 99.440
45 Loss: 2.456 | Acc: 99.496
46 Loss: 2.476 | Acc: 99.520
47 Loss: 2.593 | Acc: 99.496
48 Loss: 2.459 | Acc: 99.480
49 Loss: 2.474 | Acc: 99.444
50 Loss: 2.293 | Acc: 99.544
51 Loss: 2.418 | Acc: 99.524
52 Loss: 2.451 | Acc: 99.516
53 Loss: 1.961 | Acc: 99.588
54 Loss: 1.992 | Acc: 99.600
55 Loss: 2.085 | Acc: 99.564
56 Loss: 2.178 | Acc: 99.568
57 Loss: 2.265 | Acc: 99.552
58 Loss: 2.023 | Acc: 99.636
59 Loss: 2.172 | Acc: 99.588
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([10000, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([10000])
rTrainDict[data].shape:  torch.Size([15000, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([15000])
lValDict[data].shape:  torch.Size([0])   lValDict[label].shape:  torch.Size([0])
rValDict[data].shape:  torch.Size([0])   rValDict[label].shape:  torch.Size([0])
# of Left images:  10000.0
# of Right images:  15000.0
giniRightRatio:  0.6666666666666667
giniLeftRatio:  0.5
impurityDrop:  0.5555555555555556
giniGain:  0.24444444444444458
lclasses:  [0, 5000, 5000, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [5000, 0, 0, 5000, 5000, 0, 0, 0, 0, 0]
noOfLeftClasses:  2
noOfRightClasses:  3
RETURNING FROM WORK...
nodeId:  6 , imgTensorShape :  torch.Size([10000, 3, 32, 32])
nodeId: 6 ,  parentId: 3 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 10000
nodeId:  7 , imgTensorShape :  torch.Size([15000, 3, 32, 32])
nodeId: 7 ,  parentId: 3 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 15000
Running nodeId:  4
0 Train Loss: 58.729 | Train Acc: 68.450 
1 Train Loss: 44.647 | Train Acc: 78.810 
2 Train Loss: 39.853 | Train Acc: 81.830 
3 Train Loss: 36.666 | Train Acc: 83.460 
4 Train Loss: 34.724 | Train Acc: 84.710 
5 Train Loss: 33.500 | Train Acc: 85.030 
6 Train Loss: 31.957 | Train Acc: 85.860 
7 Train Loss: 30.714 | Train Acc: 86.860 
8 Train Loss: 29.284 | Train Acc: 87.460 
9 Train Loss: 28.408 | Train Acc: 87.790 
10 Train Loss: 27.128 | Train Acc: 88.170 
11 Train Loss: 26.738 | Train Acc: 88.970 
12 Train Loss: 25.172 | Train Acc: 89.600 
13 Train Loss: 23.762 | Train Acc: 90.390 
14 Train Loss: 22.675 | Train Acc: 91.030 
15 Train Loss: 21.980 | Train Acc: 91.140 
16 Train Loss: 21.475 | Train Acc: 91.480 
17 Train Loss: 20.720 | Train Acc: 91.270 
18 Train Loss: 20.624 | Train Acc: 91.740 
19 Train Loss: 19.486 | Train Acc: 92.340 
20 Train Loss: 16.714 | Train Acc: 93.940 
21 Train Loss: 15.918 | Train Acc: 94.550 
22 Train Loss: 15.624 | Train Acc: 94.620 
23 Train Loss: 15.203 | Train Acc: 94.820 
24 Train Loss: 15.310 | Train Acc: 94.410 
25 Train Loss: 14.795 | Train Acc: 94.980 
26 Train Loss: 14.419 | Train Acc: 95.150 
27 Train Loss: 14.210 | Train Acc: 95.300 
28 Train Loss: 14.890 | Train Acc: 94.580 
29 Train Loss: 13.552 | Train Acc: 95.690 
30 Train Loss: 13.490 | Train Acc: 95.550 
31 Train Loss: 13.199 | Train Acc: 95.740 
32 Train Loss: 12.804 | Train Acc: 95.980 
33 Train Loss: 12.700 | Train Acc: 96.060 
34 Train Loss: 12.366 | Train Acc: 96.130 
35 Train Loss: 12.219 | Train Acc: 96.250 
36 Train Loss: 12.697 | Train Acc: 95.940 
37 Train Loss: 11.970 | Train Acc: 96.350 
38 Train Loss: 11.597 | Train Acc: 96.430 
39 Train Loss: 11.139 | Train Acc: 96.840 
40 Train Loss: 10.429 | Train Acc: 97.180 
41 Train Loss: 10.184 | Train Acc: 97.440 
42 Train Loss: 10.184 | Train Acc: 97.370 
43 Train Loss: 10.149 | Train Acc: 97.270 
44 Train Loss: 10.013 | Train Acc: 97.480 
45 Train Loss: 9.801 | Train Acc: 97.650 
46 Train Loss: 9.709 | Train Acc: 97.630 
47 Train Loss: 9.656 | Train Acc: 97.560 
48 Train Loss: 9.580 | Train Acc: 97.710 
49 Train Loss: 9.508 | Train Acc: 97.740 
50 Train Loss: 9.431 | Train Acc: 97.710 
51 Train Loss: 9.386 | Train Acc: 97.700 
52 Train Loss: 9.311 | Train Acc: 97.690 
53 Train Loss: 9.290 | Train Acc: 97.710 
54 Train Loss: 9.045 | Train Acc: 97.860 
55 Train Loss: 9.072 | Train Acc: 97.800 
56 Train Loss: 8.895 | Train Acc: 97.950 
57 Train Loss: 8.903 | Train Acc: 98.060 
58 Train Loss: 8.706 | Train Acc: 98.090 
59 Train Loss: 8.677 | Train Acc: 98.060 
CNN trained successfully...
image_next_flat.shape :  torch.Size([10000, 25088])
Kmeans trained successfully...
printing expected split from k means
{0: 0, 1: 1}
Printing final_dict items...
{0: 0, 1: 1}
Image Statistics before MLP : L R :  5000 5000
expectedMlpLabels.shape :  torch.Size([10000])
0 Loss: 85.718 | Acc: 80.270
1 Loss: 66.438 | Acc: 85.870
2 Loss: 58.357 | Acc: 87.450
3 Loss: 50.327 | Acc: 89.330
4 Loss: 41.703 | Acc: 91.110
5 Loss: 36.123 | Acc: 92.370
6 Loss: 31.153 | Acc: 93.600
7 Loss: 26.710 | Acc: 94.470
8 Loss: 21.276 | Acc: 95.730
9 Loss: 19.157 | Acc: 96.420
10 Loss: 10.957 | Acc: 97.900
11 Loss: 7.260 | Acc: 98.670
12 Loss: 5.576 | Acc: 98.990
13 Loss: 5.287 | Acc: 99.110
14 Loss: 5.754 | Acc: 99.120
15 Loss: 5.198 | Acc: 99.090
16 Loss: 5.302 | Acc: 99.200
17 Loss: 3.254 | Acc: 99.410
18 Loss: 3.453 | Acc: 99.370
19 Loss: 3.410 | Acc: 99.360
20 Loss: 2.671 | Acc: 99.520
21 Loss: 2.146 | Acc: 99.730
22 Loss: 1.224 | Acc: 99.850
23 Loss: 0.945 | Acc: 99.880
24 Loss: 1.232 | Acc: 99.780
25 Loss: 1.256 | Acc: 99.780
26 Loss: 1.283 | Acc: 99.790
27 Loss: 1.299 | Acc: 99.800
28 Loss: 0.867 | Acc: 99.890
29 Loss: 1.088 | Acc: 99.810
30 Loss: 0.748 | Acc: 99.890
31 Loss: 0.395 | Acc: 99.960
32 Loss: 0.797 | Acc: 99.900
33 Loss: 0.468 | Acc: 99.960
34 Loss: 0.433 | Acc: 99.960
35 Loss: 0.515 | Acc: 99.930
36 Loss: 0.317 | Acc: 99.970
37 Loss: 0.888 | Acc: 99.870
38 Loss: 0.370 | Acc: 99.970
39 Loss: 0.619 | Acc: 99.910
40 Loss: 0.496 | Acc: 99.950
41 Loss: 0.425 | Acc: 99.950
42 Loss: 0.339 | Acc: 99.950
43 Loss: 0.275 | Acc: 99.960
44 Loss: 0.340 | Acc: 99.950
45 Loss: 0.382 | Acc: 99.940
46 Loss: 0.367 | Acc: 99.940
47 Loss: 0.325 | Acc: 99.950
48 Loss: 0.219 | Acc: 99.980
49 Loss: 0.357 | Acc: 99.960
50 Loss: 0.227 | Acc: 99.980
51 Loss: 0.201 | Acc: 99.990
52 Loss: 0.190 | Acc: 99.980
53 Loss: 0.246 | Acc: 99.970
54 Loss: 0.215 | Acc: 99.970
55 Loss: 0.232 | Acc: 99.970
56 Loss: 0.388 | Acc: 99.960
57 Loss: 0.246 | Acc: 99.980
58 Loss: 0.170 | Acc: 99.990
59 Loss: 0.348 | Acc: 99.930
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([5000, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([5000])
rTrainDict[data].shape:  torch.Size([5000, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([5000])
lValDict[data].shape:  torch.Size([0])   lValDict[label].shape:  torch.Size([0])
rValDict[data].shape:  torch.Size([0])   rValDict[label].shape:  torch.Size([0])
# of Left images:  5000.0
# of Right images:  5000.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [5000, 0, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [0, 5000, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 4
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 5
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 4
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 5
nodeId:  8 , imgTensorShape :  torch.Size([5000, 3, 32, 32])
nodeId: 8 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 4 ,  numClasses: 1 ,  numData: 5000
nodeId:  9 , imgTensorShape :  torch.Size([5000, 3, 32, 32])
nodeId: 9 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 5 ,  numClasses: 1 ,  numData: 5000
Running nodeId:  5
0 Train Loss: 87.631 | Train Acc: 61.007 
1 Train Loss: 67.475 | Train Acc: 71.953 
2 Train Loss: 61.230 | Train Acc: 74.887 
3 Train Loss: 57.789 | Train Acc: 76.573 
4 Train Loss: 54.649 | Train Acc: 78.267 
5 Train Loss: 51.837 | Train Acc: 79.613 
6 Train Loss: 48.729 | Train Acc: 80.727 
7 Train Loss: 47.566 | Train Acc: 81.073 
8 Train Loss: 44.617 | Train Acc: 82.707 
9 Train Loss: 43.309 | Train Acc: 83.173 
10 Train Loss: 41.790 | Train Acc: 83.660 
11 Train Loss: 40.664 | Train Acc: 84.307 
12 Train Loss: 37.997 | Train Acc: 85.473 
13 Train Loss: 36.199 | Train Acc: 86.213 
14 Train Loss: 36.525 | Train Acc: 85.780 
15 Train Loss: 33.865 | Train Acc: 87.113 
16 Train Loss: 32.540 | Train Acc: 87.893 
17 Train Loss: 32.070 | Train Acc: 88.020 
18 Train Loss: 30.897 | Train Acc: 88.560 
19 Train Loss: 29.918 | Train Acc: 88.833 
20 Train Loss: 26.543 | Train Acc: 90.860 
21 Train Loss: 25.952 | Train Acc: 91.033 
22 Train Loss: 25.308 | Train Acc: 91.367 
23 Train Loss: 25.034 | Train Acc: 91.573 
24 Train Loss: 24.500 | Train Acc: 91.647 
25 Train Loss: 24.406 | Train Acc: 91.627 
26 Train Loss: 23.655 | Train Acc: 92.200 
27 Train Loss: 23.685 | Train Acc: 92.187 
28 Train Loss: 23.172 | Train Acc: 92.200 
29 Train Loss: 23.127 | Train Acc: 92.460 
30 Train Loss: 22.508 | Train Acc: 92.440 
31 Train Loss: 21.821 | Train Acc: 92.953 
32 Train Loss: 21.741 | Train Acc: 92.933 
33 Train Loss: 20.995 | Train Acc: 93.353 
34 Train Loss: 20.799 | Train Acc: 93.453 
35 Train Loss: 20.189 | Train Acc: 93.733 
36 Train Loss: 19.974 | Train Acc: 93.727 
37 Train Loss: 19.629 | Train Acc: 93.893 
38 Train Loss: 19.534 | Train Acc: 93.700 
39 Train Loss: 18.981 | Train Acc: 94.160 
40 Train Loss: 17.691 | Train Acc: 95.087 
41 Train Loss: 17.476 | Train Acc: 94.953 
42 Train Loss: 17.333 | Train Acc: 95.100 
43 Train Loss: 17.210 | Train Acc: 95.200 
44 Train Loss: 17.271 | Train Acc: 95.147 
45 Train Loss: 16.769 | Train Acc: 95.400 
46 Train Loss: 16.706 | Train Acc: 95.433 
47 Train Loss: 16.740 | Train Acc: 95.400 
48 Train Loss: 16.569 | Train Acc: 95.487 
49 Train Loss: 16.415 | Train Acc: 95.593 
50 Train Loss: 16.326 | Train Acc: 95.607 
51 Train Loss: 16.108 | Train Acc: 95.700 
52 Train Loss: 16.054 | Train Acc: 95.627 
53 Train Loss: 15.810 | Train Acc: 95.807 
54 Train Loss: 15.918 | Train Acc: 95.667 
55 Train Loss: 15.427 | Train Acc: 96.027 
56 Train Loss: 15.592 | Train Acc: 95.860 
57 Train Loss: 15.175 | Train Acc: 96.000 
58 Train Loss: 15.225 | Train Acc: 96.013 
59 Train Loss: 14.997 | Train Acc: 96.247 
CNN trained successfully...
image_next_flat.shape :  torch.Size([15000, 25088])
Kmeans trained successfully...
printing expected split from k means
{1: 0, 2: 1, 0: 1}
Printing final_dict items...
{1: 0, 2: 1, 0: 1}
Image Statistics before MLP : L R :  5000 10000
expectedMlpLabels.shape :  torch.Size([15000])
0 Loss: 52.457 | Acc: 82.187
1 Loss: 39.137 | Acc: 87.687
2 Loss: 33.742 | Acc: 89.433
3 Loss: 29.310 | Acc: 90.753
4 Loss: 26.358 | Acc: 91.493
5 Loss: 22.266 | Acc: 92.920
6 Loss: 19.864 | Acc: 93.613
7 Loss: 16.593 | Acc: 94.693
8 Loss: 16.191 | Acc: 94.853
9 Loss: 14.120 | Acc: 95.627
10 Loss: 8.952 | Acc: 97.280
11 Loss: 6.507 | Acc: 98.073
12 Loss: 5.917 | Acc: 98.293
13 Loss: 5.612 | Acc: 98.333
14 Loss: 5.570 | Acc: 98.367
15 Loss: 4.741 | Acc: 98.733
16 Loss: 4.416 | Acc: 98.680
17 Loss: 3.963 | Acc: 98.880
18 Loss: 3.687 | Acc: 99.080
19 Loss: 4.326 | Acc: 98.793
20 Loss: 1.987 | Acc: 99.527
21 Loss: 2.035 | Acc: 99.507
22 Loss: 1.741 | Acc: 99.500
23 Loss: 1.349 | Acc: 99.660
24 Loss: 1.034 | Acc: 99.747
25 Loss: 1.526 | Acc: 99.620
26 Loss: 1.372 | Acc: 99.640
27 Loss: 1.260 | Acc: 99.673
28 Loss: 1.235 | Acc: 99.727
29 Loss: 1.254 | Acc: 99.627
30 Loss: 1.046 | Acc: 99.740
31 Loss: 0.781 | Acc: 99.827
32 Loss: 0.634 | Acc: 99.873
33 Loss: 0.635 | Acc: 99.840
34 Loss: 0.643 | Acc: 99.880
35 Loss: 0.481 | Acc: 99.887
36 Loss: 0.647 | Acc: 99.853
37 Loss: 0.513 | Acc: 99.880
38 Loss: 0.633 | Acc: 99.900
39 Loss: 0.532 | Acc: 99.860
40 Loss: 0.651 | Acc: 99.887
41 Loss: 0.520 | Acc: 99.887
42 Loss: 0.590 | Acc: 99.873
43 Loss: 0.285 | Acc: 99.953
44 Loss: 0.376 | Acc: 99.927
45 Loss: 0.314 | Acc: 99.933
46 Loss: 0.358 | Acc: 99.913
47 Loss: 0.348 | Acc: 99.927
48 Loss: 0.264 | Acc: 99.947
49 Loss: 0.366 | Acc: 99.940
50 Loss: 0.317 | Acc: 99.947
51 Loss: 0.327 | Acc: 99.960
52 Loss: 0.372 | Acc: 99.920
53 Loss: 0.444 | Acc: 99.880
54 Loss: 0.252 | Acc: 99.947
55 Loss: 0.291 | Acc: 99.940
56 Loss: 0.305 | Acc: 99.940
57 Loss: 0.281 | Acc: 99.960
58 Loss: 0.361 | Acc: 99.933
59 Loss: 0.197 | Acc: 99.980
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([5000, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([5000])
rTrainDict[data].shape:  torch.Size([10000, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([10000])
lValDict[data].shape:  torch.Size([0])   lValDict[label].shape:  torch.Size([0])
rValDict[data].shape:  torch.Size([0])   rValDict[label].shape:  torch.Size([0])
# of Left images:  5000.0
# of Right images:  10000.0
giniRightRatio:  0.5
giniLeftRatio:  0.0
impurityDrop:  0.25
giniGain:  0.41666666666666674
lclasses:  [0, 5000, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [5000, 0, 5000, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  2
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 6
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 6
nodeId:  10 , imgTensorShape :  torch.Size([5000, 3, 32, 32])
nodeId: 10 ,  parentId: 5 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 6 ,  numClasses: 1 ,  numData: 5000
nodeId:  11 , imgTensorShape :  torch.Size([10000, 3, 32, 32])
nodeId: 11 ,  parentId: 5 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 10000
Running nodeId:  6
0 Train Loss: 49.152 | Train Acc: 77.560 
1 Train Loss: 23.352 | Train Acc: 90.900 
2 Train Loss: 17.596 | Train Acc: 93.330 
3 Train Loss: 15.830 | Train Acc: 93.760 
4 Train Loss: 14.596 | Train Acc: 94.410 
5 Train Loss: 13.475 | Train Acc: 94.750 
6 Train Loss: 11.653 | Train Acc: 95.630 
7 Train Loss: 11.306 | Train Acc: 95.700 
8 Train Loss: 10.589 | Train Acc: 95.950 
9 Train Loss: 10.226 | Train Acc: 96.220 
10 Train Loss: 9.045 | Train Acc: 96.730 
11 Train Loss: 8.832 | Train Acc: 96.860 
12 Train Loss: 8.068 | Train Acc: 97.110 
13 Train Loss: 7.661 | Train Acc: 97.210 
14 Train Loss: 8.375 | Train Acc: 96.880 
15 Train Loss: 6.539 | Train Acc: 97.730 
16 Train Loss: 7.313 | Train Acc: 97.380 
17 Train Loss: 6.027 | Train Acc: 98.020 
18 Train Loss: 5.824 | Train Acc: 97.940 
19 Train Loss: 6.006 | Train Acc: 97.810 
20 Train Loss: 4.383 | Train Acc: 98.860 
21 Train Loss: 4.034 | Train Acc: 98.890 
22 Train Loss: 3.767 | Train Acc: 99.160 
23 Train Loss: 3.738 | Train Acc: 99.000 
24 Train Loss: 3.756 | Train Acc: 99.010 
25 Train Loss: 3.931 | Train Acc: 98.880 
26 Train Loss: 3.744 | Train Acc: 99.060 
27 Train Loss: 3.433 | Train Acc: 99.130 
28 Train Loss: 3.270 | Train Acc: 99.330 
29 Train Loss: 3.055 | Train Acc: 99.300 
30 Train Loss: 2.936 | Train Acc: 99.380 
31 Train Loss: 2.889 | Train Acc: 99.470 
32 Train Loss: 2.643 | Train Acc: 99.470 
33 Train Loss: 2.561 | Train Acc: 99.480 
34 Train Loss: 2.806 | Train Acc: 99.310 
35 Train Loss: 2.398 | Train Acc: 99.630 
36 Train Loss: 2.412 | Train Acc: 99.560 
37 Train Loss: 2.270 | Train Acc: 99.640 
38 Train Loss: 2.024 | Train Acc: 99.710 
39 Train Loss: 1.905 | Train Acc: 99.800 
40 Train Loss: 1.707 | Train Acc: 99.880 
41 Train Loss: 1.694 | Train Acc: 99.840 
42 Train Loss: 1.599 | Train Acc: 99.880 
43 Train Loss: 1.563 | Train Acc: 99.900 
44 Train Loss: 1.561 | Train Acc: 99.890 
45 Train Loss: 1.593 | Train Acc: 99.820 
46 Train Loss: 1.633 | Train Acc: 99.840 
47 Train Loss: 1.515 | Train Acc: 99.900 
48 Train Loss: 1.440 | Train Acc: 99.910 
49 Train Loss: 1.507 | Train Acc: 99.910 
50 Train Loss: 1.415 | Train Acc: 99.900 
51 Train Loss: 1.355 | Train Acc: 99.930 
52 Train Loss: 1.371 | Train Acc: 99.870 
53 Train Loss: 1.351 | Train Acc: 99.930 
54 Train Loss: 1.306 | Train Acc: 99.950 
55 Train Loss: 1.259 | Train Acc: 99.950 
56 Train Loss: 1.242 | Train Acc: 99.920 
57 Train Loss: 1.208 | Train Acc: 99.950 
58 Train Loss: 1.187 | Train Acc: 99.940 
59 Train Loss: 1.252 | Train Acc: 99.920 
CNN trained successfully...
image_next_flat.shape :  torch.Size([10000, 25088])
Kmeans trained successfully...
printing expected split from k means
{1: 0, 0: 1}
Printing final_dict items...
{1: 0, 0: 1}
Image Statistics before MLP : L R :  5000 5000
expectedMlpLabels.shape :  torch.Size([10000])
0 Loss: 42.026 | Acc: 91.820
1 Loss: 27.245 | Acc: 94.720
2 Loss: 21.248 | Acc: 95.920
3 Loss: 17.912 | Acc: 96.590
4 Loss: 14.724 | Acc: 97.060
5 Loss: 14.353 | Acc: 97.160
6 Loss: 10.593 | Acc: 98.110
7 Loss: 10.730 | Acc: 97.890
8 Loss: 7.146 | Acc: 98.650
9 Loss: 7.430 | Acc: 98.590
10 Loss: 3.413 | Acc: 99.430
11 Loss: 2.241 | Acc: 99.620
12 Loss: 1.588 | Acc: 99.770
13 Loss: 1.552 | Acc: 99.790
14 Loss: 1.157 | Acc: 99.830
15 Loss: 1.870 | Acc: 99.700
16 Loss: 1.252 | Acc: 99.780
17 Loss: 0.895 | Acc: 99.860
18 Loss: 2.101 | Acc: 99.670
19 Loss: 0.947 | Acc: 99.850
20 Loss: 0.370 | Acc: 99.930
21 Loss: 0.227 | Acc: 99.970
22 Loss: 0.232 | Acc: 99.950
23 Loss: 0.227 | Acc: 99.960
24 Loss: 0.189 | Acc: 99.980
25 Loss: 0.105 | Acc: 100.000
26 Loss: 0.140 | Acc: 99.990
27 Loss: 0.166 | Acc: 99.980
28 Loss: 0.502 | Acc: 99.930
29 Loss: 0.201 | Acc: 99.960
30 Loss: 0.089 | Acc: 99.980
31 Loss: 0.118 | Acc: 99.990
32 Loss: 0.134 | Acc: 99.990
33 Loss: 0.148 | Acc: 99.980
34 Loss: 0.061 | Acc: 100.000
35 Loss: 0.083 | Acc: 100.000
36 Loss: 0.065 | Acc: 99.990
37 Loss: 0.032 | Acc: 100.000
38 Loss: 0.042 | Acc: 100.000
39 Loss: 0.053 | Acc: 100.000
40 Loss: 0.020 | Acc: 100.000
41 Loss: 0.027 | Acc: 100.000
42 Loss: 0.075 | Acc: 99.980
43 Loss: 0.019 | Acc: 100.000
44 Loss: 0.031 | Acc: 100.000
45 Loss: 0.094 | Acc: 99.980
46 Loss: 0.065 | Acc: 99.980
47 Loss: 0.032 | Acc: 100.000
48 Loss: 0.014 | Acc: 100.000
49 Loss: 0.073 | Acc: 99.990
50 Loss: 0.056 | Acc: 99.980
51 Loss: 0.020 | Acc: 100.000
52 Loss: 0.019 | Acc: 100.000
53 Loss: 0.012 | Acc: 100.000
54 Loss: 0.020 | Acc: 100.000
55 Loss: 0.018 | Acc: 100.000
56 Loss: 0.032 | Acc: 100.000
57 Loss: 0.028 | Acc: 100.000
58 Loss: 0.015 | Acc: 100.000
59 Loss: 0.015 | Acc: 100.000
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([5000, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([5000])
rTrainDict[data].shape:  torch.Size([5000, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([5000])
lValDict[data].shape:  torch.Size([0])   lValDict[label].shape:  torch.Size([0])
rValDict[data].shape:  torch.Size([0])   rValDict[label].shape:  torch.Size([0])
# of Left images:  5000.0
# of Right images:  5000.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [0, 5000, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [5000, 0, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 2
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 1
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 2
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 1
nodeId:  12 , imgTensorShape :  torch.Size([5000, 3, 32, 32])
nodeId: 12 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 2 ,  numClasses: 1 ,  numData: 5000
nodeId:  13 , imgTensorShape :  torch.Size([5000, 3, 32, 32])
nodeId: 13 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 1 ,  numClasses: 1 ,  numData: 5000
Running nodeId:  7
0 Train Loss: 88.820 | Train Acc: 61.720 
1 Train Loss: 62.817 | Train Acc: 73.873 
2 Train Loss: 56.684 | Train Acc: 77.173 
3 Train Loss: 52.185 | Train Acc: 79.113 
4 Train Loss: 48.581 | Train Acc: 80.907 
5 Train Loss: 45.292 | Train Acc: 82.213 
6 Train Loss: 42.828 | Train Acc: 83.507 
7 Train Loss: 41.111 | Train Acc: 83.987 
8 Train Loss: 39.169 | Train Acc: 84.907 
9 Train Loss: 37.666 | Train Acc: 85.567 
10 Train Loss: 35.790 | Train Acc: 86.560 
11 Train Loss: 35.264 | Train Acc: 86.507 
12 Train Loss: 33.960 | Train Acc: 87.213 
13 Train Loss: 32.725 | Train Acc: 87.633 
14 Train Loss: 30.955 | Train Acc: 88.467 
15 Train Loss: 30.177 | Train Acc: 88.760 
16 Train Loss: 28.767 | Train Acc: 89.420 
17 Train Loss: 28.033 | Train Acc: 89.720 
18 Train Loss: 26.701 | Train Acc: 90.233 
19 Train Loss: 25.513 | Train Acc: 90.827 
20 Train Loss: 23.053 | Train Acc: 92.153 
21 Train Loss: 22.160 | Train Acc: 92.660 
22 Train Loss: 22.116 | Train Acc: 92.627 
23 Train Loss: 21.327 | Train Acc: 92.873 
24 Train Loss: 21.065 | Train Acc: 93.087 
25 Train Loss: 20.827 | Train Acc: 93.093 
26 Train Loss: 20.750 | Train Acc: 93.173 
27 Train Loss: 20.326 | Train Acc: 93.200 
28 Train Loss: 19.797 | Train Acc: 93.413 
29 Train Loss: 19.583 | Train Acc: 93.527 
30 Train Loss: 19.083 | Train Acc: 93.973 
31 Train Loss: 19.068 | Train Acc: 93.900 
32 Train Loss: 18.687 | Train Acc: 93.847 
33 Train Loss: 18.498 | Train Acc: 94.220 
34 Train Loss: 17.950 | Train Acc: 94.193 
35 Train Loss: 17.615 | Train Acc: 94.527 
36 Train Loss: 17.414 | Train Acc: 94.487 
37 Train Loss: 16.896 | Train Acc: 94.833 
38 Train Loss: 16.651 | Train Acc: 94.913 
39 Train Loss: 16.380 | Train Acc: 95.140 
40 Train Loss: 15.084 | Train Acc: 95.793 
41 Train Loss: 14.875 | Train Acc: 96.067 
42 Train Loss: 14.718 | Train Acc: 96.033 
43 Train Loss: 14.692 | Train Acc: 96.020 
44 Train Loss: 14.557 | Train Acc: 96.080 
45 Train Loss: 14.377 | Train Acc: 96.200 
46 Train Loss: 14.288 | Train Acc: 96.200 
47 Train Loss: 14.179 | Train Acc: 96.400 
48 Train Loss: 14.031 | Train Acc: 96.407 
49 Train Loss: 13.931 | Train Acc: 96.280 
50 Train Loss: 13.870 | Train Acc: 96.333 
51 Train Loss: 13.617 | Train Acc: 96.520 
52 Train Loss: 13.567 | Train Acc: 96.613 
53 Train Loss: 13.399 | Train Acc: 96.633 
54 Train Loss: 13.280 | Train Acc: 96.800 
55 Train Loss: 13.286 | Train Acc: 96.667 
56 Train Loss: 13.104 | Train Acc: 96.727 
57 Train Loss: 13.074 | Train Acc: 96.573 
58 Train Loss: 12.818 | Train Acc: 96.913 
59 Train Loss: 12.730 | Train Acc: 96.880 
CNN trained successfully...
image_next_flat.shape :  torch.Size([15000, 25088])
Kmeans trained successfully...
printing expected split from k means
{1: 0, 2: 1, 0: 1}
Printing final_dict items...
{1: 0, 0: 1, 2: 1}
Image Statistics before MLP : L R :  5000 10000
expectedMlpLabels.shape :  torch.Size([15000])
0 Loss: 62.529 | Acc: 77.720
1 Loss: 46.310 | Acc: 84.920
2 Loss: 40.044 | Acc: 87.307
3 Loss: 34.003 | Acc: 89.187
4 Loss: 29.904 | Acc: 90.613
5 Loss: 26.158 | Acc: 91.780
6 Loss: 23.461 | Acc: 92.680
7 Loss: 20.470 | Acc: 93.467
8 Loss: 18.825 | Acc: 94.193
9 Loss: 17.582 | Acc: 94.653
10 Loss: 10.183 | Acc: 97.033
11 Loss: 8.147 | Acc: 97.560
12 Loss: 7.595 | Acc: 97.793
13 Loss: 7.058 | Acc: 97.960
14 Loss: 6.814 | Acc: 97.933
15 Loss: 6.013 | Acc: 98.260
16 Loss: 5.211 | Acc: 98.427
17 Loss: 5.147 | Acc: 98.433
18 Loss: 5.250 | Acc: 98.480
19 Loss: 5.118 | Acc: 98.460
20 Loss: 3.443 | Acc: 99.127
21 Loss: 2.395 | Acc: 99.360
22 Loss: 2.432 | Acc: 99.347
23 Loss: 1.855 | Acc: 99.533
24 Loss: 2.348 | Acc: 99.360
25 Loss: 1.751 | Acc: 99.580
26 Loss: 1.918 | Acc: 99.507
27 Loss: 1.775 | Acc: 99.547
28 Loss: 1.645 | Acc: 99.487
29 Loss: 1.759 | Acc: 99.573
30 Loss: 1.250 | Acc: 99.720
31 Loss: 1.261 | Acc: 99.673
32 Loss: 1.265 | Acc: 99.673
33 Loss: 0.877 | Acc: 99.793
34 Loss: 1.130 | Acc: 99.727
35 Loss: 1.119 | Acc: 99.767
36 Loss: 0.809 | Acc: 99.807
37 Loss: 0.920 | Acc: 99.767
38 Loss: 1.111 | Acc: 99.720
39 Loss: 0.909 | Acc: 99.807
40 Loss: 0.727 | Acc: 99.853
41 Loss: 0.828 | Acc: 99.793
42 Loss: 0.685 | Acc: 99.853
43 Loss: 0.677 | Acc: 99.840
44 Loss: 0.585 | Acc: 99.867
45 Loss: 0.542 | Acc: 99.887
46 Loss: 0.544 | Acc: 99.880
47 Loss: 0.726 | Acc: 99.847
48 Loss: 0.550 | Acc: 99.887
49 Loss: 0.523 | Acc: 99.853
50 Loss: 0.577 | Acc: 99.867
51 Loss: 0.524 | Acc: 99.880
52 Loss: 0.623 | Acc: 99.840
53 Loss: 0.539 | Acc: 99.913
54 Loss: 0.585 | Acc: 99.860
55 Loss: 0.656 | Acc: 99.847
56 Loss: 0.605 | Acc: 99.860
57 Loss: 0.664 | Acc: 99.860
58 Loss: 0.459 | Acc: 99.893
59 Loss: 0.709 | Acc: 99.873
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([5000, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([5000])
rTrainDict[data].shape:  torch.Size([10000, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([10000])
lValDict[data].shape:  torch.Size([0])   lValDict[label].shape:  torch.Size([0])
rValDict[data].shape:  torch.Size([0])   rValDict[label].shape:  torch.Size([0])
# of Left images:  5000.0
# of Right images:  10000.0
giniRightRatio:  0.5
giniLeftRatio:  0.0
impurityDrop:  0.25
giniGain:  0.41666666666666674
lclasses:  [0, 5000, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [5000, 0, 5000, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  2
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 8
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 8
nodeId:  14 , imgTensorShape :  torch.Size([5000, 3, 32, 32])
nodeId: 14 ,  parentId: 7 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 8 ,  numClasses: 1 ,  numData: 5000
nodeId:  15 , imgTensorShape :  torch.Size([10000, 3, 32, 32])
nodeId: 15 ,  parentId: 7 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 10000
Running nodeId:  8
Running nodeId:  9
Running nodeId:  10
Running nodeId:  11
0 Train Loss: 55.553 | Train Acc: 72.100 
1 Train Loss: 41.600 | Train Acc: 81.830 
2 Train Loss: 36.692 | Train Acc: 84.330 
3 Train Loss: 34.417 | Train Acc: 85.520 
4 Train Loss: 32.236 | Train Acc: 86.540 
5 Train Loss: 30.016 | Train Acc: 87.650 
6 Train Loss: 30.190 | Train Acc: 87.500 
7 Train Loss: 26.848 | Train Acc: 89.210 
8 Train Loss: 26.331 | Train Acc: 89.160 
9 Train Loss: 24.723 | Train Acc: 90.020 
10 Train Loss: 24.053 | Train Acc: 90.300 
11 Train Loss: 21.953 | Train Acc: 91.370 
12 Train Loss: 21.646 | Train Acc: 91.470 
13 Train Loss: 20.186 | Train Acc: 92.220 
14 Train Loss: 19.607 | Train Acc: 92.140 
15 Train Loss: 19.162 | Train Acc: 92.560 
16 Train Loss: 18.043 | Train Acc: 93.290 
17 Train Loss: 17.036 | Train Acc: 93.700 
18 Train Loss: 15.909 | Train Acc: 94.130 
19 Train Loss: 16.155 | Train Acc: 93.720 
20 Train Loss: 13.252 | Train Acc: 95.610 
21 Train Loss: 12.529 | Train Acc: 95.900 
22 Train Loss: 12.180 | Train Acc: 96.080 
23 Train Loss: 12.826 | Train Acc: 95.840 
24 Train Loss: 11.801 | Train Acc: 96.150 
25 Train Loss: 11.599 | Train Acc: 96.330 
26 Train Loss: 11.549 | Train Acc: 96.200 
27 Train Loss: 10.943 | Train Acc: 96.550 
28 Train Loss: 10.663 | Train Acc: 96.760 
29 Train Loss: 10.304 | Train Acc: 97.010 
30 Train Loss: 10.179 | Train Acc: 97.060 
31 Train Loss: 10.134 | Train Acc: 96.990 
32 Train Loss: 9.964 | Train Acc: 97.090 
33 Train Loss: 9.523 | Train Acc: 97.300 
34 Train Loss: 9.567 | Train Acc: 97.230 
35 Train Loss: 9.013 | Train Acc: 97.540 
36 Train Loss: 8.640 | Train Acc: 97.860 
37 Train Loss: 8.572 | Train Acc: 97.800 
38 Train Loss: 8.406 | Train Acc: 97.810 
39 Train Loss: 8.124 | Train Acc: 97.780 
40 Train Loss: 7.389 | Train Acc: 98.380 
41 Train Loss: 7.197 | Train Acc: 98.430 
42 Train Loss: 7.078 | Train Acc: 98.570 
43 Train Loss: 7.026 | Train Acc: 98.520 
44 Train Loss: 6.893 | Train Acc: 98.630 
45 Train Loss: 6.813 | Train Acc: 98.730 
46 Train Loss: 6.788 | Train Acc: 98.670 
47 Train Loss: 6.742 | Train Acc: 98.740 
48 Train Loss: 6.541 | Train Acc: 98.790 
49 Train Loss: 6.570 | Train Acc: 98.670 
50 Train Loss: 6.437 | Train Acc: 98.850 
51 Train Loss: 6.380 | Train Acc: 98.900 
52 Train Loss: 6.235 | Train Acc: 98.940 
53 Train Loss: 6.175 | Train Acc: 98.930 
54 Train Loss: 6.126 | Train Acc: 98.930 
55 Train Loss: 6.070 | Train Acc: 99.080 
56 Train Loss: 5.913 | Train Acc: 99.010 
57 Train Loss: 5.833 | Train Acc: 99.060 
58 Train Loss: 5.797 | Train Acc: 98.960 
59 Train Loss: 5.740 | Train Acc: 99.120 
CNN trained successfully...
image_next_flat.shape :  torch.Size([10000, 25088])
Kmeans trained successfully...
printing expected split from k means
{0: 0, 1: 1}
Printing final_dict items...
{0: 0, 1: 1}
Image Statistics before MLP : L R :  5000 5000
expectedMlpLabels.shape :  torch.Size([10000])
0 Loss: 87.973 | Acc: 79.900
1 Loss: 63.882 | Acc: 86.240
2 Loss: 52.581 | Acc: 89.020
3 Loss: 46.495 | Acc: 90.090
4 Loss: 40.929 | Acc: 91.510
5 Loss: 35.278 | Acc: 92.820
6 Loss: 31.112 | Acc: 93.940
7 Loss: 26.862 | Acc: 94.500
8 Loss: 22.966 | Acc: 95.340
9 Loss: 21.171 | Acc: 95.790
10 Loss: 12.772 | Acc: 97.580
11 Loss: 8.553 | Acc: 98.380
12 Loss: 7.723 | Acc: 98.620
13 Loss: 7.502 | Acc: 98.590
14 Loss: 5.568 | Acc: 99.020
15 Loss: 4.919 | Acc: 99.040
16 Loss: 5.160 | Acc: 99.010
17 Loss: 6.195 | Acc: 98.810
18 Loss: 4.262 | Acc: 99.180
19 Loss: 4.251 | Acc: 99.340
20 Loss: 2.849 | Acc: 99.560
21 Loss: 1.853 | Acc: 99.660
22 Loss: 1.265 | Acc: 99.800
23 Loss: 1.414 | Acc: 99.780
24 Loss: 1.104 | Acc: 99.810
25 Loss: 1.216 | Acc: 99.780
26 Loss: 1.282 | Acc: 99.770
27 Loss: 0.868 | Acc: 99.880
28 Loss: 1.203 | Acc: 99.790
29 Loss: 0.989 | Acc: 99.820
30 Loss: 0.757 | Acc: 99.850
31 Loss: 0.951 | Acc: 99.830
32 Loss: 0.596 | Acc: 99.900
33 Loss: 0.392 | Acc: 99.940
34 Loss: 0.417 | Acc: 99.920
35 Loss: 0.360 | Acc: 99.980
36 Loss: 0.435 | Acc: 99.950
37 Loss: 0.651 | Acc: 99.870
38 Loss: 0.306 | Acc: 99.940
39 Loss: 0.437 | Acc: 99.970
40 Loss: 0.279 | Acc: 99.960
41 Loss: 0.291 | Acc: 99.970
42 Loss: 0.268 | Acc: 99.960
43 Loss: 0.588 | Acc: 99.930
44 Loss: 0.288 | Acc: 99.960
45 Loss: 0.346 | Acc: 99.950
46 Loss: 0.216 | Acc: 99.970
47 Loss: 0.226 | Acc: 99.970
48 Loss: 0.379 | Acc: 99.950
49 Loss: 0.148 | Acc: 99.990
50 Loss: 0.254 | Acc: 99.960
51 Loss: 0.254 | Acc: 99.960
52 Loss: 0.194 | Acc: 99.980
53 Loss: 0.284 | Acc: 99.960
54 Loss: 0.368 | Acc: 99.930
55 Loss: 0.184 | Acc: 99.970
56 Loss: 0.218 | Acc: 99.980
57 Loss: 0.189 | Acc: 99.980
58 Loss: 0.233 | Acc: 99.960
59 Loss: 0.457 | Acc: 99.940
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([5000, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([5000])
rTrainDict[data].shape:  torch.Size([5000, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([5000])
lValDict[data].shape:  torch.Size([0])   lValDict[label].shape:  torch.Size([0])
rValDict[data].shape:  torch.Size([0])   rValDict[label].shape:  torch.Size([0])
# of Left images:  5000.0
# of Right images:  5000.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [5000, 0, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [0, 5000, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 3
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 7
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 3
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 7
nodeId:  16 , imgTensorShape :  torch.Size([5000, 3, 32, 32])
nodeId: 16 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 3 ,  numClasses: 1 ,  numData: 5000
nodeId:  17 , imgTensorShape :  torch.Size([5000, 3, 32, 32])
nodeId: 17 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 7 ,  numClasses: 1 ,  numData: 5000
Running nodeId:  12
Running nodeId:  13
Running nodeId:  14
Running nodeId:  15
0 Train Loss: 44.495 | Train Acc: 79.230 
1 Train Loss: 32.159 | Train Acc: 86.350 
2 Train Loss: 30.119 | Train Acc: 87.320 
3 Train Loss: 26.565 | Train Acc: 88.670 
4 Train Loss: 24.179 | Train Acc: 90.030 
5 Train Loss: 22.807 | Train Acc: 90.510 
6 Train Loss: 21.783 | Train Acc: 91.110 
7 Train Loss: 19.767 | Train Acc: 91.970 
8 Train Loss: 19.171 | Train Acc: 92.360 
9 Train Loss: 17.447 | Train Acc: 93.170 
10 Train Loss: 16.687 | Train Acc: 93.760 
11 Train Loss: 15.167 | Train Acc: 94.050 
12 Train Loss: 14.946 | Train Acc: 94.240 
13 Train Loss: 13.912 | Train Acc: 94.720 
14 Train Loss: 13.940 | Train Acc: 94.870 
15 Train Loss: 13.219 | Train Acc: 94.900 
16 Train Loss: 12.356 | Train Acc: 95.410 
17 Train Loss: 11.109 | Train Acc: 95.920 
18 Train Loss: 10.839 | Train Acc: 95.980 
19 Train Loss: 10.239 | Train Acc: 96.310 
20 Train Loss: 8.450 | Train Acc: 97.440 
21 Train Loss: 7.955 | Train Acc: 97.760 
22 Train Loss: 7.676 | Train Acc: 97.860 
23 Train Loss: 7.597 | Train Acc: 97.810 
24 Train Loss: 7.273 | Train Acc: 97.980 
25 Train Loss: 7.311 | Train Acc: 98.010 
26 Train Loss: 6.911 | Train Acc: 98.230 
27 Train Loss: 6.820 | Train Acc: 98.210 
28 Train Loss: 6.519 | Train Acc: 98.440 
29 Train Loss: 6.229 | Train Acc: 98.550 
30 Train Loss: 6.362 | Train Acc: 98.530 
31 Train Loss: 6.317 | Train Acc: 98.440 
32 Train Loss: 5.866 | Train Acc: 98.720 
33 Train Loss: 5.770 | Train Acc: 98.820 
34 Train Loss: 5.601 | Train Acc: 98.740 
35 Train Loss: 5.751 | Train Acc: 98.580 
36 Train Loss: 5.195 | Train Acc: 99.110 
37 Train Loss: 5.080 | Train Acc: 98.900 
38 Train Loss: 4.873 | Train Acc: 99.110 
39 Train Loss: 4.912 | Train Acc: 99.060 
40 Train Loss: 4.304 | Train Acc: 99.320 
41 Train Loss: 4.122 | Train Acc: 99.410 
42 Train Loss: 4.028 | Train Acc: 99.490 
43 Train Loss: 4.013 | Train Acc: 99.440 
44 Train Loss: 3.987 | Train Acc: 99.450 
45 Train Loss: 3.866 | Train Acc: 99.530 
46 Train Loss: 3.853 | Train Acc: 99.560 
47 Train Loss: 3.922 | Train Acc: 99.470 
48 Train Loss: 3.729 | Train Acc: 99.530 
49 Train Loss: 3.732 | Train Acc: 99.480 
50 Train Loss: 3.635 | Train Acc: 99.560 
51 Train Loss: 3.582 | Train Acc: 99.550 
52 Train Loss: 3.495 | Train Acc: 99.630 
53 Train Loss: 3.636 | Train Acc: 99.530 
54 Train Loss: 3.436 | Train Acc: 99.600 
55 Train Loss: 3.340 | Train Acc: 99.660 
56 Train Loss: 3.365 | Train Acc: 99.700 
57 Train Loss: 3.236 | Train Acc: 99.660 
58 Train Loss: 3.180 | Train Acc: 99.670 
59 Train Loss: 3.177 | Train Acc: 99.670 
CNN trained successfully...
image_next_flat.shape :  torch.Size([10000, 25088])
Kmeans trained successfully...
printing expected split from k means
{1: 0, 0: 1}
Printing final_dict items...
{1: 0, 0: 1}
Image Statistics before MLP : L R :  5000 5000
expectedMlpLabels.shape :  torch.Size([10000])
0 Loss: 64.123 | Acc: 86.150
1 Loss: 47.343 | Acc: 90.120
2 Loss: 39.756 | Acc: 92.040
3 Loss: 35.089 | Acc: 92.880
4 Loss: 29.327 | Acc: 94.150
5 Loss: 25.678 | Acc: 94.880
6 Loss: 22.552 | Acc: 95.700
7 Loss: 19.907 | Acc: 96.180
8 Loss: 15.316 | Acc: 97.040
9 Loss: 13.112 | Acc: 97.680
10 Loss: 8.112 | Acc: 98.640
11 Loss: 3.954 | Acc: 99.370
12 Loss: 4.350 | Acc: 99.120
13 Loss: 3.946 | Acc: 99.380
14 Loss: 3.980 | Acc: 99.310
15 Loss: 3.103 | Acc: 99.540
16 Loss: 4.001 | Acc: 99.260
17 Loss: 2.727 | Acc: 99.490
18 Loss: 2.942 | Acc: 99.520
19 Loss: 2.629 | Acc: 99.560
20 Loss: 1.896 | Acc: 99.690
21 Loss: 1.123 | Acc: 99.860
22 Loss: 0.708 | Acc: 99.940
23 Loss: 0.648 | Acc: 99.920
24 Loss: 0.579 | Acc: 99.920
25 Loss: 0.598 | Acc: 99.910
26 Loss: 0.769 | Acc: 99.900
27 Loss: 0.884 | Acc: 99.890
28 Loss: 0.776 | Acc: 99.860
29 Loss: 1.149 | Acc: 99.780
30 Loss: 0.450 | Acc: 99.960
31 Loss: 0.446 | Acc: 99.930
32 Loss: 0.436 | Acc: 99.940
33 Loss: 0.367 | Acc: 99.930
34 Loss: 0.350 | Acc: 99.960
35 Loss: 0.262 | Acc: 99.970
36 Loss: 0.283 | Acc: 99.960
37 Loss: 0.178 | Acc: 100.000
38 Loss: 0.203 | Acc: 99.980
39 Loss: 0.169 | Acc: 99.990
40 Loss: 0.111 | Acc: 99.980
41 Loss: 0.248 | Acc: 99.950
42 Loss: 0.189 | Acc: 99.980
43 Loss: 0.167 | Acc: 99.980
44 Loss: 0.126 | Acc: 99.990
45 Loss: 0.455 | Acc: 99.940
46 Loss: 0.323 | Acc: 99.930
47 Loss: 0.150 | Acc: 99.970
48 Loss: 0.186 | Acc: 99.970
49 Loss: 0.141 | Acc: 99.980
50 Loss: 0.278 | Acc: 99.970
51 Loss: 0.139 | Acc: 99.980
52 Loss: 0.218 | Acc: 99.970
53 Loss: 0.346 | Acc: 99.940
54 Loss: 0.203 | Acc: 99.970
55 Loss: 0.142 | Acc: 99.990
56 Loss: 0.099 | Acc: 99.990
57 Loss: 0.177 | Acc: 99.960
58 Loss: 0.113 | Acc: 99.990
59 Loss: 0.131 | Acc: 99.990
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([5000, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([5000])
rTrainDict[data].shape:  torch.Size([5000, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([5000])
lValDict[data].shape:  torch.Size([0])   lValDict[label].shape:  torch.Size([0])
rValDict[data].shape:  torch.Size([0])   rValDict[label].shape:  torch.Size([0])
# of Left images:  5000.0
# of Right images:  5000.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [0, 5000, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [5000, 0, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 9
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 0
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 9
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 0
nodeId:  18 , imgTensorShape :  torch.Size([5000, 3, 32, 32])
nodeId: 18 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 9 ,  numClasses: 1 ,  numData: 5000
nodeId:  19 , imgTensorShape :  torch.Size([5000, 3, 32, 32])
nodeId: 19 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 0 ,  numClasses: 1 ,  numData: 5000
Running nodeId:  16
Running nodeId:  17
Running nodeId:  18
Running nodeId:  19
TESTING STARTS
nodeId:  1 , imgTensorShape :  torch.Size([10000, 3, 32, 32])
nodeId: 1 ,  parentId: 0 ,  level: 0 ,  lchildId: 2 ,  rchildId: 3 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 10 ,  numData: 10000
Node 1 Acc: 61.600
Split Acc: 87.670
lTrainDict[data].shape:  torch.Size([5069, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([5069])
rTrainDict[data].shape:  torch.Size([4931, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([4931])
# of Left images:  5069.0
# of Right images:  4931.0
giniRightRatio:  0.8380801275406324
giniLeftRatio:  0.8414056857738432
impurityDrop:  0.8414987555439067
giniGain:  0.05850124445609328
lclasses:  [87, 37, 388, 860, 859, 893, 905, 901, 61, 78]
rclasses:  [913, 963, 612, 140, 141, 107, 95, 99, 939, 922]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  2 , imgTensorShape :  torch.Size([5069, 3, 32, 32])
nodeId: 2 ,  parentId: 1 ,  level: 1 ,  lchildId: 4 ,  rchildId: 5 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 5069
nodeId:  3 , imgTensorShape :  torch.Size([4931, 3, 32, 32])
nodeId: 3 ,  parentId: 1 ,  level: 1 ,  lchildId: 6 ,  rchildId: 7 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 4931
Nodes sizes =  5 5
Node 2 Acc: 56.185
Split Acc: 65.240
lTrainDict[data].shape:  torch.Size([2006, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([2006])
rTrainDict[data].shape:  torch.Size([3063, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([3063])
# of Left images:  2006.0
# of Right images:  3063.0
giniRightRatio:  0.8144718875110332
giniLeftRatio:  0.7850034144823754
impurityDrop:  0.7951725871860291
giniGain:  0.0462330985878141
lclasses:  [38, 6, 179, 297, 592, 597, 81, 170, 19, 27]
rclasses:  [49, 31, 209, 563, 267, 296, 824, 731, 42, 51]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  4 , imgTensorShape :  torch.Size([2006, 3, 32, 32])
nodeId: 4 ,  parentId: 2 ,  level: 2 ,  lchildId: 8 ,  rchildId: 9 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 2006
nodeId:  5 , imgTensorShape :  torch.Size([3063, 3, 32, 32])
nodeId: 5 ,  parentId: 2 ,  level: 2 ,  lchildId: 10 ,  rchildId: 11 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 3063
Nodes sizes =  2 3
Node 3 Acc: 66.741
Split Acc: 77.043
lTrainDict[data].shape:  torch.Size([1856, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([1856])
rTrainDict[data].shape:  torch.Size([3075, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([3075])
# of Left images:  1856.0
# of Right images:  3075.0
giniRightRatio:  0.769757260889682
giniLeftRatio:  0.7389332593266946
impurityDrop:  0.7511525952308513
giniGain:  0.08692753230978112
lclasses:  [78, 769, 513, 71, 77, 70, 54, 45, 59, 120]
rclasses:  [835, 194, 99, 69, 64, 37, 41, 54, 880, 802]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  6 , imgTensorShape :  torch.Size([1856, 3, 32, 32])
nodeId: 6 ,  parentId: 3 ,  level: 2 ,  lchildId: 12 ,  rchildId: 13 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 1856
nodeId:  7 , imgTensorShape :  torch.Size([3075, 3, 32, 32])
nodeId: 7 ,  parentId: 3 ,  level: 2 ,  lchildId: 14 ,  rchildId: 15 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 3075
Nodes sizes =  2 3
Node 4 Acc: 53.091
Split Acc: 54.038
lTrainDict[data].shape:  torch.Size([989, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([989])
rTrainDict[data].shape:  torch.Size([1017, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([1017])
# of Left images:  989.0
# of Right images:  1017.0
giniRightRatio:  0.6664056177722089
giniLeftRatio:  0.6556060037561814
impurityDrop:  0.6559033382620307
giniGain:  0.1291000762203447
lclasses:  [26, 3, 100, 83, 551, 64, 49, 95, 9, 9]
rclasses:  [12, 3, 79, 214, 41, 533, 32, 75, 10, 18]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  8 , imgTensorShape :  torch.Size([989, 3, 32, 32])
nodeId: 8 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 4 ,  numClasses: 1 ,  numData: 989
nodeId:  9 , imgTensorShape :  torch.Size([1017, 3, 32, 32])
nodeId: 9 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 5 ,  numClasses: 1 ,  numData: 1017
Nodes sizes =  1 1
Node 5 Acc: 58.080
Split Acc: 62.684
lTrainDict[data].shape:  torch.Size([1052, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([1052])
rTrainDict[data].shape:  torch.Size([2011, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([2011])
# of Left images:  1052.0
# of Right images:  2011.0
giniRightRatio:  0.7825027985067706
giniLeftRatio:  0.49990964160245194
impurityDrop:  0.6346718680923782
giniGain:  0.17980001941865498
lclasses:  [18, 6, 73, 91, 74, 27, 730, 13, 12, 8]
rclasses:  [31, 25, 136, 472, 193, 269, 94, 718, 30, 43]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  10 , imgTensorShape :  torch.Size([1052, 3, 32, 32])
nodeId: 10 ,  parentId: 5 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 6 ,  numClasses: 1 ,  numData: 1052
nodeId:  11 , imgTensorShape :  torch.Size([2011, 3, 32, 32])
nodeId: 11 ,  parentId: 5 ,  level: 3 ,  lchildId: 16 ,  rchildId: 17 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 2011
Nodes sizes =  1 2
Node 6 Acc: 66.379
Split Acc: 66.703
lTrainDict[data].shape:  torch.Size([862, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([862])
rTrainDict[data].shape:  torch.Size([994, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([994])
# of Left images:  862.0
# of Right images:  994.0
giniRightRatio:  0.4262192875563239
giniLeftRatio:  0.6454934028132924
impurityDrop:  0.6163745062198116
giniGain:  0.12255875310688302
lclasses:  [51, 26, 495, 54, 73, 60, 39, 37, 11, 16]
rclasses:  [27, 743, 18, 17, 4, 10, 15, 8, 48, 104]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  12 , imgTensorShape :  torch.Size([862, 3, 32, 32])
nodeId: 12 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 2 ,  numClasses: 1 ,  numData: 862
nodeId:  13 , imgTensorShape :  torch.Size([994, 3, 32, 32])
nodeId: 13 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 1 ,  numClasses: 1 ,  numData: 994
Nodes sizes =  1 1
Node 7 Acc: 68.846
Split Acc: 73.984
lTrainDict[data].shape:  torch.Size([978, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([978])
rTrainDict[data].shape:  torch.Size([2097, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([2097])
# of Left images:  978.0
# of Right images:  2097.0
giniRightRatio:  0.7234823961109826
giniLeftRatio:  0.39669665148606775
impurityDrop:  0.5710758828810509
giniGain:  0.19868137800863106
lclasses:  [81, 33, 18, 21, 16, 13, 6, 3, 753, 34]
rclasses:  [754, 161, 81, 48, 48, 24, 35, 51, 127, 768]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  14 , imgTensorShape :  torch.Size([978, 3, 32, 32])
nodeId: 14 ,  parentId: 7 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 8 ,  numClasses: 1 ,  numData: 978
nodeId:  15 , imgTensorShape :  torch.Size([2097, 3, 32, 32])
nodeId: 15 ,  parentId: 7 ,  level: 3 ,  lchildId: 18 ,  rchildId: 19 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 2097
Nodes sizes =  1 2
Node 8 Acc: 55.713
Node 9 Acc: 52.409
Node 10 Acc: 69.392
Node 11 Acc: 53.357
Split Acc: 53.804
lTrainDict[data].shape:  torch.Size([1025, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([1025])
rTrainDict[data].shape:  torch.Size([986, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([986])
# of Left images:  1025.0
# of Right images:  986.0
giniRightRatio:  0.5321128661298751
giniLeftRatio:  0.7658032123735872
impurityDrop:  0.7750465424988455
giniGain:  0.0074562560079250995
lclasses:  [21, 19, 93, 422, 101, 196, 76, 58, 20, 19]
rclasses:  [10, 6, 43, 50, 92, 73, 18, 660, 10, 24]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  16 , imgTensorShape :  torch.Size([1025, 3, 32, 32])
nodeId: 16 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 3 ,  numClasses: 1 ,  numData: 1025
nodeId:  17 , imgTensorShape :  torch.Size([986, 3, 32, 32])
nodeId: 17 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 7 ,  numClasses: 1 ,  numData: 986
Nodes sizes =  1 1
Node 12 Acc: 57.425
Node 13 Acc: 74.748
Node 14 Acc: 76.994
Node 15 Acc: 66.190
Split Acc: 67.573
lTrainDict[data].shape:  torch.Size([1036, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([1036])
rTrainDict[data].shape:  torch.Size([1061, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([1061])
# of Left images:  1036.0
# of Right images:  1061.0
giniRightRatio:  0.540666825971977
giniLeftRatio:  0.5074667193393062
impurityDrop:  0.5082490027189639
giniGain:  0.21523339339201875
lclasses:  [48, 130, 15, 22, 9, 13, 21, 22, 45, 711]
rclasses:  [706, 31, 66, 26, 39, 11, 14, 29, 82, 57]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  18 , imgTensorShape :  torch.Size([1036, 3, 32, 32])
nodeId: 18 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 9 ,  numClasses: 1 ,  numData: 1036
nodeId:  19 , imgTensorShape :  torch.Size([1061, 3, 32, 32])
nodeId: 19 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 0 ,  numClasses: 1 ,  numData: 1061
Nodes sizes =  1 1
Node 16 Acc: 41.171
Node 17 Acc: 66.937
Node 18 Acc: 68.629
Node 19 Acc: 66.541
[[706  27  51  21  26  12  18  10  81  48]
 [ 31 743  26  19   3   3   6   6  33 130]
 [ 66  18 495  93 100  79  73  43  18  15]
 [ 26  17  54 422  83 214  91  50  21  22]
 [ 39   4  73 101 551  41  74  92  16   9]
 [ 11  10  60 196  64 533  27  73  13  13]
 [ 14  15  39  76  49  32 730  18   6  21]
 [ 29   8  37  58  95  75  13 660   3  22]
 [ 82  48  11  20   9  10  12  10 753  45]
 [ 57 104  16  19   9  18   8  24  34 711]]

Acc: 63.040

                                                             1                                                                 
                   ┌─────────────────────────────────────────┴───────────────────────────┐                                     
                   2                                                                     3                                     
       ┌───────────┴─────────────┐                                         ┌─────────────┴─────────────┐                       
       4                         5                                         6                           7                       
 ┌─────┴─────┐            ┌──────┴─────────────┐                    ┌──────┴──────┐             ┌──────┴─────────────┐         
 8           9            10                   11                   12            13            14                   15        
                                        ┌──────┴──────┐                                                       ┌──────┴──────┐  
                                        16            17                                                      18            19 

                                                       -1                                                      
                   ┌───────────────────────────────────┴───────────────────────┐                               
                   -1                                                          -1                              
       ┌───────────┴───────────┐                                   ┌───────────┴───────────┐                   
       -1                      -1                                  -1                      -1                  
 ┌─────┴─────┐           ┌─────┴───────────┐                 ┌─────┴─────┐           ┌─────┴───────────┐       
 4           5           6                 -1                2           1           8                 -1      
                                     ┌─────┴─────┐                                               ┌─────┴─────┐ 
                                     3           7                                               9           0 

                                                                         50000                                                                         
                           ┌───────────────────────────────────────────────┴───────────────────────────────┐                                           
                         25000                                                                           25000                                         
           ┌───────────────┴───────────────┐                                               ┌───────────────┴───────────────┐                           
         10000                           15000                                           10000                           15000                         
   ┌───────┴───────┐               ┌───────┴───────────────┐                       ┌───────┴───────┐               ┌───────┴───────────────┐           
  5000            5000            5000                   10000                    5000            5000            5000                   10000         
                                                   ┌───────┴───────┐                                                               ┌───────┴───────┐   
                                                  5000            5000                                                            5000            5000 

                                                   {0: 5000, 1: 5000, 2: 5000, 3: 5000, 4: 5000, 5: 5000, 6: 5000, 7: 5000, 8: 5000, 9: 5000}                                                  
                                   ┌───────────────────────────────────────────────────────────┴───────────────────────────────────────┐                                                       
             {3: 5000, 4: 5000, 5: 5000, 6: 5000, 7: 5000}                                                       {0: 5000, 1: 5000, 2: 5000, 8: 5000, 9: 5000}                                 
               ┌───────────────────┴───────────────────┐                                                           ┌───────────────────┴───────────────────┐                                   
       {4: 5000, 5: 5000}                 {3: 5000, 6: 5000, 7: 5000}                                      {1: 5000, 2: 5000}                 {0: 5000, 8: 5000, 9: 5000}                      
     ┌─────────┴─────────┐                   ┌─────────┴───────────────────┐                             ┌─────────┴─────────┐                   ┌─────────┴───────────────────┐               
 {4: 5000}           {5: 5000}           {6: 5000}                 {3: 5000, 7: 5000}                {2: 5000}           {1: 5000}           {8: 5000}                 {0: 5000, 9: 5000}      
                                                                 ┌─────────┴─────────┐                                                                               ┌─────────┴─────────┐     
                                                             {3: 5000}           {7: 5000}                                                                       {9: 5000}           {0: 5000} 

                                                                 87.67                                                               
                       ┌───────────────────────────────────────────┴───────────────────────────┐                                     
               65.23969224699152                                                       77.04319610626648                             
         ┌─────────────┴─────────────┐                                           ┌─────────────┴─────────────┐                       
 54.03788634097707           62.68364348677767                           66.70258620689656           73.98373983739837               
  ┌──────┴──────┐             ┌──────┴──────────────┐                     ┌──────┴──────┐             ┌──────┴─────────────┐         
 0.0           0.0           0.0            53.804077573346596           0.0           0.0           0.0            67.5727229375298 
                                             ┌──────┴──────┐                                                        ┌──────┴──────┐  
                                            0.0           0.0                                                      0.0           0.0 

                                                         0.09999999999999987                                                         
                       ┌──────────────────────────────────────────┴───────────────────────────┐                                      
              0.24444444444444458                                                    0.24444444444444458                             
         ┌─────────────┴──────────────┐                                         ┌─────────────┴──────────────┐                       
        0.5                  0.41666666666666674                               0.5                  0.41666666666666674              
  ┌──────┴──────┐             ┌──────┴─────────────┐                     ┌──────┴──────┐             ┌──────┴─────────────┐          
 0.0           0.0           0.0                  0.5                   0.0           0.0           0.0                  0.5         
                                            ┌──────┴──────┐                                                        ┌──────┴──────┐   
                                           0.0           0.0                                                      0.0           0.0  

