['options.ckptDir: valDir_cOut16_mFC2_16', 'options.maxDepth: 6', 'options.cnnLR: 0.001', 'options.mlpLR: 0.001', 'options.cnnEpochs: 100', 'options.mlpEpochs: 60', 'options.cnnOut: 16', 'options.mlpFC1: 516', 'options.mlpFC2: 16']
==> Preparing data..
Files already downloaded and verified
Files already downloaded and verified
len(trainInputDict["data"]):  49000 ,  len(valInputDict["data"]):  1000 ,  len(testInputDict["data"]):  10000
nodeId:  1 , imgTensorShape :  torch.Size([49000, 3, 32, 32])
nodeId: 1 ,  parentId: 0 ,  level: 0 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 10 ,  numData: 49000
Running nodeId:  1
0 Train Loss: 177.956 | Train Acc: 37.506 | Val Loss: 1.554 | Val Accuracy: 45.300
10 Train Loss: 110.440 | Train Acc: 61.871 | Val Loss: 1.218 | Val Accuracy: 58.300
20 Train Loss: 95.641 | Train Acc: 66.978 | Val Loss: 1.156 | Val Accuracy: 60.100
30 Train Loss: 86.108 | Train Acc: 70.427 | Val Loss: 1.148 | Val Accuracy: 62.400
40 Train Loss: 77.209 | Train Acc: 73.724 | Val Loss: 1.152 | Val Accuracy: 61.300
Epoch     6: reducing learning rate of group 0 to 2.0000e-04.
50 Train Loss: 71.861 | Train Acc: 75.508 | Val Loss: 1.186 | Val Accuracy: 62.100
60 Train Loss: 65.164 | Train Acc: 78.429 | Val Loss: 1.173 | Val Accuracy: 61.500
Epoch     8: reducing learning rate of group 0 to 4.0000e-05.
70 Train Loss: 63.992 | Train Acc: 78.869 | Val Loss: 1.183 | Val Accuracy: 61.100
80 Train Loss: 62.439 | Train Acc: 79.669 | Val Loss: 1.183 | Val Accuracy: 61.100
Epoch    10: reducing learning rate of group 0 to 8.0000e-06.
90 Train Loss: 62.157 | Train Acc: 79.829 | Val Loss: 1.187 | Val Accuracy: 61.100
CNN trained successfully...
image_next_flat.shape :  torch.Size([49000, 12544])
Kmeans trained successfully...
printing expected split from k means
{8: 0, 5: 1, 9: 0, 2: 1, 4: 1, 0: 0, 1: 0, 7: 1, 6: 1, 3: 1}
Printing final_dict items...
{8: 0, 0: 0, 9: 0, 1: 0, 2: 0, 3: 1, 7: 1, 5: 1, 4: 1, 6: 1}
Image Statistics before MLP : L R :  24500 24500
expectedMlpLabels.shape :  torch.Size([49000])
0 Loss: 82.054 | Acc: 81.818
1 Loss: 70.578 | Acc: 84.508
2 Loss: 65.339 | Acc: 85.790
3 Loss: 62.070 | Acc: 86.649
4 Loss: 58.084 | Acc: 87.545
5 Loss: 56.236 | Acc: 87.700
6 Loss: 53.618 | Acc: 88.280
7 Loss: 50.933 | Acc: 89.004
8 Loss: 48.863 | Acc: 89.196
9 Loss: 46.156 | Acc: 90.022
10 Loss: 39.726 | Acc: 91.404
11 Loss: 37.444 | Acc: 91.894
12 Loss: 35.204 | Acc: 92.373
13 Loss: 33.902 | Acc: 92.722
14 Loss: 32.830 | Acc: 92.973
15 Loss: 31.588 | Acc: 93.276
16 Loss: 29.681 | Acc: 93.824
17 Loss: 28.566 | Acc: 94.016
18 Loss: 27.857 | Acc: 94.143
19 Loss: 26.335 | Acc: 94.484
20 Loss: 22.825 | Acc: 95.253
21 Loss: 21.813 | Acc: 95.500
22 Loss: 21.100 | Acc: 95.576
23 Loss: 20.047 | Acc: 95.898
24 Loss: 19.476 | Acc: 96.047
25 Loss: 18.938 | Acc: 96.249
26 Loss: 18.491 | Acc: 96.286
27 Loss: 18.005 | Acc: 96.361
28 Loss: 17.336 | Acc: 96.400
29 Loss: 17.153 | Acc: 96.671
30 Loss: 15.430 | Acc: 96.945
31 Loss: 14.741 | Acc: 97.090
32 Loss: 14.869 | Acc: 97.133
33 Loss: 14.381 | Acc: 97.224
34 Loss: 14.240 | Acc: 97.104
35 Loss: 14.075 | Acc: 97.280
36 Loss: 13.816 | Acc: 97.302
37 Loss: 13.905 | Acc: 97.282
38 Loss: 13.050 | Acc: 97.551
39 Loss: 13.432 | Acc: 97.408
40 Loss: 12.995 | Acc: 97.463
41 Loss: 12.476 | Acc: 97.527
42 Loss: 12.093 | Acc: 97.747
43 Loss: 12.311 | Acc: 97.604
44 Loss: 12.633 | Acc: 97.567
45 Loss: 12.251 | Acc: 97.761
46 Loss: 11.965 | Acc: 97.676
47 Loss: 11.704 | Acc: 97.712
48 Loss: 11.663 | Acc: 97.676
49 Loss: 12.142 | Acc: 97.598
50 Loss: 11.747 | Acc: 97.714
51 Loss: 11.621 | Acc: 97.798
52 Loss: 11.233 | Acc: 97.790
53 Loss: 11.317 | Acc: 97.829
54 Loss: 11.718 | Acc: 97.722
55 Loss: 11.679 | Acc: 97.780
56 Loss: 10.987 | Acc: 97.908
57 Loss: 11.776 | Acc: 97.712
58 Loss: 11.143 | Acc: 97.876
59 Loss: 11.082 | Acc: 97.855
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([24500, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([24500])
rTrainDict[data].shape:  torch.Size([24500, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([24500])
lValDict[data].shape:  torch.Size([500, 3, 32, 32])   lValDict[label].shape:  torch.Size([500])
rValDict[data].shape:  torch.Size([500, 3, 32, 32])   rValDict[label].shape:  torch.Size([500])
# of Left images:  24500.0
# of Right images:  24500.0
giniRightRatio:  0.8000000000000002
giniLeftRatio:  0.8000000000000002
impurityDrop:  0.8000000000000002
giniGain:  0.09999999999999987
lclasses:  [4900, 4900, 4900, 0, 0, 0, 0, 0, 4900, 4900]
rclasses:  [0, 0, 0, 4900, 4900, 4900, 4900, 4900, 0, 0]
noOfLeftClasses:  5
noOfRightClasses:  5
RETURNING FROM WORK...
nodeId:  2 , imgTensorShape :  torch.Size([24500, 3, 32, 32])
nodeId: 2 ,  parentId: 1 ,  level: 1 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 24500
nodeId:  3 , imgTensorShape :  torch.Size([24500, 3, 32, 32])
nodeId: 3 ,  parentId: 1 ,  level: 1 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 24500
Running nodeId:  2
0 Train Loss: 131.676 | Train Acc: 48.131 | Val Loss: 1.087 | Val Accuracy: 58.600
10 Train Loss: 71.734 | Train Acc: 73.371 | Val Loss: 0.775 | Val Accuracy: 71.000
20 Train Loss: 55.963 | Train Acc: 79.812 | Val Loss: 0.692 | Val Accuracy: 75.600
30 Train Loss: 46.091 | Train Acc: 83.584 | Val Loss: 0.726 | Val Accuracy: 74.200
Epoch     5: reducing learning rate of group 0 to 2.0000e-04.
40 Train Loss: 39.289 | Train Acc: 86.078 | Val Loss: 0.762 | Val Accuracy: 75.200
50 Train Loss: 33.897 | Train Acc: 88.906 | Val Loss: 0.768 | Val Accuracy: 76.000
60 Train Loss: 32.738 | Train Acc: 89.314 | Val Loss: 0.805 | Val Accuracy: 75.000
Epoch     8: reducing learning rate of group 0 to 4.0000e-05.
70 Train Loss: 31.573 | Train Acc: 89.771 | Val Loss: 0.808 | Val Accuracy: 76.000
80 Train Loss: 30.315 | Train Acc: 90.506 | Val Loss: 0.805 | Val Accuracy: 75.400
Epoch    10: reducing learning rate of group 0 to 8.0000e-06.
90 Train Loss: 30.012 | Train Acc: 90.580 | Val Loss: 0.801 | Val Accuracy: 74.800
CNN trained successfully...
image_next_flat.shape :  torch.Size([24500, 12544])
Kmeans trained successfully...
printing expected split from k means
{3: 0, 0: 0, 2: 1, 4: 1, 1: 1}
Printing final_dict items...
{3: 0, 0: 0, 4: 1, 1: 1, 2: 1}
Image Statistics before MLP : L R :  9800 14700
expectedMlpLabels.shape :  torch.Size([24500])
0 Loss: 71.085 | Acc: 80.588
1 Loss: 59.788 | Acc: 84.033
2 Loss: 53.623 | Acc: 85.857
3 Loss: 48.737 | Acc: 87.184
4 Loss: 45.642 | Acc: 88.012
5 Loss: 41.835 | Acc: 89.057
6 Loss: 40.292 | Acc: 89.547
7 Loss: 37.850 | Acc: 90.090
8 Loss: 35.577 | Acc: 90.722
9 Loss: 32.272 | Acc: 91.596
10 Loss: 25.985 | Acc: 93.347
11 Loss: 23.449 | Acc: 94.016
12 Loss: 21.998 | Acc: 94.253
13 Loss: 20.885 | Acc: 94.624
14 Loss: 19.384 | Acc: 95.098
15 Loss: 18.790 | Acc: 95.351
16 Loss: 17.616 | Acc: 95.612
17 Loss: 16.769 | Acc: 95.837
18 Loss: 16.112 | Acc: 96.086
19 Loss: 15.053 | Acc: 96.376
20 Loss: 12.110 | Acc: 97.037
21 Loss: 11.087 | Acc: 97.302
22 Loss: 10.185 | Acc: 97.576
23 Loss: 10.518 | Acc: 97.535
24 Loss: 10.175 | Acc: 97.612
25 Loss: 9.647 | Acc: 97.682
26 Loss: 9.044 | Acc: 97.829
27 Loss: 8.731 | Acc: 97.910
28 Loss: 8.551 | Acc: 97.906
29 Loss: 7.959 | Acc: 98.143
30 Loss: 6.941 | Acc: 98.396
31 Loss: 7.120 | Acc: 98.347
32 Loss: 6.683 | Acc: 98.290
33 Loss: 6.544 | Acc: 98.502
34 Loss: 6.563 | Acc: 98.506
35 Loss: 6.637 | Acc: 98.555
36 Loss: 6.447 | Acc: 98.514
37 Loss: 6.142 | Acc: 98.571
38 Loss: 6.066 | Acc: 98.559
39 Loss: 5.685 | Acc: 98.682
40 Loss: 5.515 | Acc: 98.800
41 Loss: 5.549 | Acc: 98.612
42 Loss: 4.920 | Acc: 98.910
43 Loss: 5.100 | Acc: 98.853
44 Loss: 4.664 | Acc: 98.918
45 Loss: 4.927 | Acc: 98.800
46 Loss: 5.147 | Acc: 98.776
47 Loss: 5.048 | Acc: 98.857
48 Loss: 4.916 | Acc: 98.873
49 Loss: 5.283 | Acc: 98.878
50 Loss: 4.718 | Acc: 98.882
51 Loss: 4.822 | Acc: 98.886
52 Loss: 4.885 | Acc: 98.988
53 Loss: 4.447 | Acc: 98.992
54 Loss: 4.712 | Acc: 98.906
55 Loss: 4.360 | Acc: 99.037
56 Loss: 4.673 | Acc: 98.914
57 Loss: 4.500 | Acc: 99.069
58 Loss: 4.655 | Acc: 98.927
59 Loss: 4.528 | Acc: 98.992
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([9800, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([9800])
rTrainDict[data].shape:  torch.Size([14700, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([14700])
lValDict[data].shape:  torch.Size([200, 3, 32, 32])   lValDict[label].shape:  torch.Size([200])
rValDict[data].shape:  torch.Size([300, 3, 32, 32])   rValDict[label].shape:  torch.Size([300])
# of Left images:  9800.0
# of Right images:  14700.0
giniRightRatio:  0.6666666666666667
giniLeftRatio:  0.5
impurityDrop:  0.5555555555555556
giniGain:  0.24444444444444458
lclasses:  [4900, 0, 0, 4900, 0, 0, 0, 0, 0, 0]
rclasses:  [0, 4900, 4900, 0, 4900, 0, 0, 0, 0, 0]
noOfLeftClasses:  2
noOfRightClasses:  3
RETURNING FROM WORK...
nodeId:  4 , imgTensorShape :  torch.Size([9800, 3, 32, 32])
nodeId: 4 ,  parentId: 2 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 9800
nodeId:  5 , imgTensorShape :  torch.Size([14700, 3, 32, 32])
nodeId: 5 ,  parentId: 2 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 14700
Running nodeId:  3
0 Train Loss: 141.127 | Train Acc: 39.898 | Val Loss: 1.244 | Val Accuracy: 50.200
10 Train Loss: 88.214 | Train Acc: 66.273 | Val Loss: 0.997 | Val Accuracy: 61.800
20 Train Loss: 74.018 | Train Acc: 71.849 | Val Loss: 0.981 | Val Accuracy: 64.600
30 Train Loss: 66.984 | Train Acc: 74.780 | Val Loss: 1.049 | Val Accuracy: 64.600
Epoch     5: reducing learning rate of group 0 to 2.0000e-04.
40 Train Loss: 60.073 | Train Acc: 77.971 | Val Loss: 1.043 | Val Accuracy: 63.200
50 Train Loss: 53.908 | Train Acc: 81.020 | Val Loss: 1.044 | Val Accuracy: 64.800
60 Train Loss: 52.756 | Train Acc: 81.424 | Val Loss: 1.067 | Val Accuracy: 63.800
Epoch     8: reducing learning rate of group 0 to 4.0000e-05.
70 Train Loss: 51.501 | Train Acc: 81.967 | Val Loss: 1.066 | Val Accuracy: 64.600
80 Train Loss: 50.043 | Train Acc: 82.759 | Val Loss: 1.071 | Val Accuracy: 64.600
Epoch    10: reducing learning rate of group 0 to 8.0000e-06.
90 Train Loss: 49.754 | Train Acc: 82.951 | Val Loss: 1.071 | Val Accuracy: 63.400
CNN trained successfully...
image_next_flat.shape :  torch.Size([24500, 12544])
Kmeans trained successfully...
printing expected split from k means
{2: 1, 4: 0, 1: 1, 3: 1, 0: 1}
Printing final_dict items...
{4: 0, 0: 0, 2: 1, 3: 1, 1: 1}
Image Statistics before MLP : L R :  9800 14700
expectedMlpLabels.shape :  torch.Size([24500])
0 Loss: 96.377 | Acc: 65.812
1 Loss: 88.362 | Acc: 69.886
2 Loss: 83.408 | Acc: 72.339
3 Loss: 79.420 | Acc: 73.963
4 Loss: 76.092 | Acc: 75.735
5 Loss: 71.837 | Acc: 77.433
6 Loss: 69.782 | Acc: 78.310
7 Loss: 65.974 | Acc: 79.943
8 Loss: 63.746 | Acc: 80.600
9 Loss: 60.270 | Acc: 81.645
10 Loss: 50.762 | Acc: 85.098
11 Loss: 47.654 | Acc: 86.224
12 Loss: 45.957 | Acc: 86.502
13 Loss: 42.936 | Acc: 87.437
14 Loss: 40.251 | Acc: 88.420
15 Loss: 38.360 | Acc: 89.220
16 Loss: 36.625 | Acc: 89.959
17 Loss: 35.442 | Acc: 89.996
18 Loss: 32.373 | Acc: 90.955
19 Loss: 31.615 | Acc: 91.143
20 Loss: 26.526 | Acc: 92.673
21 Loss: 24.501 | Acc: 93.559
22 Loss: 24.838 | Acc: 93.376
23 Loss: 23.246 | Acc: 93.788
24 Loss: 22.123 | Acc: 94.122
25 Loss: 21.498 | Acc: 94.367
26 Loss: 20.647 | Acc: 94.527
27 Loss: 20.201 | Acc: 94.804
28 Loss: 19.775 | Acc: 94.829
29 Loss: 19.056 | Acc: 95.208
30 Loss: 17.376 | Acc: 95.751
31 Loss: 17.002 | Acc: 95.824
32 Loss: 16.599 | Acc: 95.784
33 Loss: 15.624 | Acc: 96.061
34 Loss: 15.535 | Acc: 95.971
35 Loss: 15.376 | Acc: 96.139
36 Loss: 15.080 | Acc: 96.331
37 Loss: 14.583 | Acc: 96.449
38 Loss: 15.057 | Acc: 96.233
39 Loss: 14.353 | Acc: 96.547
40 Loss: 13.644 | Acc: 96.629
41 Loss: 13.469 | Acc: 96.637
42 Loss: 13.336 | Acc: 96.588
43 Loss: 13.285 | Acc: 96.759
44 Loss: 13.566 | Acc: 96.739
45 Loss: 12.577 | Acc: 96.931
46 Loss: 12.709 | Acc: 96.890
47 Loss: 12.977 | Acc: 96.886
48 Loss: 12.893 | Acc: 96.873
49 Loss: 12.361 | Acc: 97.012
50 Loss: 12.895 | Acc: 96.947
51 Loss: 12.322 | Acc: 97.004
52 Loss: 12.559 | Acc: 96.890
53 Loss: 12.004 | Acc: 97.024
54 Loss: 12.437 | Acc: 96.967
55 Loss: 11.907 | Acc: 97.061
56 Loss: 12.149 | Acc: 97.078
57 Loss: 12.169 | Acc: 97.143
58 Loss: 12.102 | Acc: 97.122
59 Loss: 11.651 | Acc: 97.245
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([9800, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([9800])
rTrainDict[data].shape:  torch.Size([14700, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([14700])
lValDict[data].shape:  torch.Size([200, 3, 32, 32])   lValDict[label].shape:  torch.Size([200])
rValDict[data].shape:  torch.Size([300, 3, 32, 32])   rValDict[label].shape:  torch.Size([300])
# of Left images:  9800.0
# of Right images:  14700.0
giniRightRatio:  0.6666666666666667
giniLeftRatio:  0.5
impurityDrop:  0.5555555555555556
giniGain:  0.24444444444444458
lclasses:  [4900, 0, 0, 0, 4900, 0, 0, 0, 0, 0]
rclasses:  [0, 4900, 4900, 4900, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  2
noOfRightClasses:  3
RETURNING FROM WORK...
nodeId:  6 , imgTensorShape :  torch.Size([9800, 3, 32, 32])
nodeId: 6 ,  parentId: 3 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 9800
nodeId:  7 , imgTensorShape :  torch.Size([14700, 3, 32, 32])
nodeId: 7 ,  parentId: 3 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 14700
Running nodeId:  4
0 Train Loss: 64.086 | Train Acc: 65.276 | Val Loss: 0.591 | Val Accuracy: 69.000
10 Train Loss: 32.383 | Train Acc: 86.327 | Val Loss: 0.373 | Val Accuracy: 82.500
20 Train Loss: 26.461 | Train Acc: 89.214 | Val Loss: 0.358 | Val Accuracy: 85.500
30 Train Loss: 21.511 | Train Acc: 91.459 | Val Loss: 0.374 | Val Accuracy: 82.500
Epoch     5: reducing learning rate of group 0 to 2.0000e-04.
40 Train Loss: 17.302 | Train Acc: 93.561 | Val Loss: 0.376 | Val Accuracy: 83.500
50 Train Loss: 14.288 | Train Acc: 95.122 | Val Loss: 0.381 | Val Accuracy: 84.000
Epoch     7: reducing learning rate of group 0 to 4.0000e-05.
60 Train Loss: 13.470 | Train Acc: 95.653 | Val Loss: 0.377 | Val Accuracy: 83.500
70 Train Loss: 12.775 | Train Acc: 96.112 | Val Loss: 0.388 | Val Accuracy: 84.000
Epoch     9: reducing learning rate of group 0 to 8.0000e-06.
80 Train Loss: 12.658 | Train Acc: 96.051 | Val Loss: 0.382 | Val Accuracy: 84.000
90 Train Loss: 12.484 | Train Acc: 96.337 | Val Loss: 0.382 | Val Accuracy: 83.000
CNN trained successfully...
image_next_flat.shape :  torch.Size([9800, 12544])
Kmeans trained successfully...
printing expected split from k means
{1: 0, 0: 1}
Printing final_dict items...
{1: 0, 0: 1}
Image Statistics before MLP : L R :  4900 4900
expectedMlpLabels.shape :  torch.Size([9800])
0 Loss: 92.402 | Acc: 78.592
1 Loss: 69.986 | Acc: 84.806
2 Loss: 62.297 | Acc: 86.949
3 Loss: 53.927 | Acc: 88.786
4 Loss: 47.664 | Acc: 89.847
5 Loss: 43.721 | Acc: 90.867
6 Loss: 39.607 | Acc: 91.867
7 Loss: 34.973 | Acc: 93.010
8 Loss: 31.761 | Acc: 93.418
9 Loss: 27.362 | Acc: 94.531
10 Loss: 19.435 | Acc: 96.133
11 Loss: 15.196 | Acc: 97.296
12 Loss: 12.701 | Acc: 97.694
13 Loss: 11.545 | Acc: 97.847
14 Loss: 11.011 | Acc: 97.827
15 Loss: 10.737 | Acc: 98.082
16 Loss: 9.894 | Acc: 98.092
17 Loss: 9.253 | Acc: 98.296
18 Loss: 8.440 | Acc: 98.480
19 Loss: 7.168 | Acc: 98.735
20 Loss: 5.429 | Acc: 99.061
21 Loss: 4.750 | Acc: 99.296
22 Loss: 3.977 | Acc: 99.327
23 Loss: 3.740 | Acc: 99.367
24 Loss: 3.530 | Acc: 99.469
25 Loss: 4.016 | Acc: 99.388
26 Loss: 3.301 | Acc: 99.480
27 Loss: 3.848 | Acc: 99.347
28 Loss: 2.669 | Acc: 99.582
29 Loss: 3.196 | Acc: 99.480
30 Loss: 2.603 | Acc: 99.592
31 Loss: 2.108 | Acc: 99.602
32 Loss: 2.011 | Acc: 99.612
33 Loss: 1.864 | Acc: 99.724
34 Loss: 1.902 | Acc: 99.704
35 Loss: 1.622 | Acc: 99.735
36 Loss: 2.267 | Acc: 99.735
37 Loss: 1.771 | Acc: 99.673
38 Loss: 1.704 | Acc: 99.724
39 Loss: 1.669 | Acc: 99.694
40 Loss: 1.148 | Acc: 99.806
41 Loss: 1.173 | Acc: 99.806
42 Loss: 1.438 | Acc: 99.786
43 Loss: 1.175 | Acc: 99.806
44 Loss: 1.282 | Acc: 99.847
45 Loss: 1.064 | Acc: 99.806
46 Loss: 1.106 | Acc: 99.837
47 Loss: 1.260 | Acc: 99.837
48 Loss: 1.004 | Acc: 99.867
49 Loss: 1.372 | Acc: 99.776
50 Loss: 1.363 | Acc: 99.786
51 Loss: 0.862 | Acc: 99.888
52 Loss: 1.023 | Acc: 99.837
53 Loss: 0.952 | Acc: 99.867
54 Loss: 1.162 | Acc: 99.827
55 Loss: 0.873 | Acc: 99.878
56 Loss: 0.966 | Acc: 99.888
57 Loss: 0.973 | Acc: 99.867
58 Loss: 0.908 | Acc: 99.918
59 Loss: 1.037 | Acc: 99.867
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([4900])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([100, 3, 32, 32])   rValDict[label].shape:  torch.Size([100])
# of Left images:  4900.0
# of Right images:  4900.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [0, 4900, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [4900, 0, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 8
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 0
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 8
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 0
nodeId:  8 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 8 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 8 ,  numClasses: 1 ,  numData: 4900
nodeId:  9 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 9 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 0 ,  numClasses: 1 ,  numData: 4900
Running nodeId:  5
0 Train Loss: 77.910 | Train Acc: 65.306 | Val Loss: 0.642 | Val Accuracy: 75.000
10 Train Loss: 35.598 | Train Acc: 86.082 | Val Loss: 0.400 | Val Accuracy: 86.000
20 Train Loss: 26.766 | Train Acc: 89.891 | Val Loss: 0.393 | Val Accuracy: 85.333
Epoch     4: reducing learning rate of group 0 to 2.0000e-04.
30 Train Loss: 22.605 | Train Acc: 91.830 | Val Loss: 0.394 | Val Accuracy: 85.333
40 Train Loss: 18.368 | Train Acc: 93.925 | Val Loss: 0.411 | Val Accuracy: 85.667
Epoch     6: reducing learning rate of group 0 to 4.0000e-05.
50 Train Loss: 17.246 | Train Acc: 94.265 | Val Loss: 0.408 | Val Accuracy: 84.667
60 Train Loss: 16.429 | Train Acc: 94.952 | Val Loss: 0.411 | Val Accuracy: 84.667
Epoch     8: reducing learning rate of group 0 to 8.0000e-06.
70 Train Loss: 16.213 | Train Acc: 95.061 | Val Loss: 0.411 | Val Accuracy: 85.667
80 Train Loss: 16.012 | Train Acc: 95.136 | Val Loss: 0.410 | Val Accuracy: 85.000
Epoch    10: reducing learning rate of group 0 to 1.6000e-06.
90 Train Loss: 15.980 | Train Acc: 95.170 | Val Loss: 0.411 | Val Accuracy: 85.000
CNN trained successfully...
image_next_flat.shape :  torch.Size([14700, 12544])
Kmeans trained successfully...
printing expected split from k means
{2: 1, 1: 0, 0: 1}
Printing final_dict items...
{1: 0, 2: 1, 0: 1}
Image Statistics before MLP : L R :  4900 9800
expectedMlpLabels.shape :  torch.Size([14700])
0 Loss: 33.743 | Acc: 90.096
1 Loss: 23.605 | Acc: 93.253
2 Loss: 21.020 | Acc: 93.808
3 Loss: 18.154 | Acc: 94.568
4 Loss: 16.682 | Acc: 94.945
5 Loss: 14.876 | Acc: 95.356
6 Loss: 13.025 | Acc: 96.034
7 Loss: 11.746 | Acc: 96.370
8 Loss: 10.572 | Acc: 96.699
9 Loss: 10.440 | Acc: 96.884
10 Loss: 6.221 | Acc: 98.151
11 Loss: 5.144 | Acc: 98.500
12 Loss: 4.194 | Acc: 98.781
13 Loss: 3.906 | Acc: 98.870
14 Loss: 3.940 | Acc: 98.870
15 Loss: 3.365 | Acc: 99.123
16 Loss: 3.427 | Acc: 98.973
17 Loss: 2.609 | Acc: 99.199
18 Loss: 2.495 | Acc: 99.247
19 Loss: 2.557 | Acc: 99.329
20 Loss: 1.547 | Acc: 99.603
21 Loss: 1.021 | Acc: 99.774
22 Loss: 0.930 | Acc: 99.767
23 Loss: 1.043 | Acc: 99.733
24 Loss: 0.792 | Acc: 99.815
25 Loss: 0.839 | Acc: 99.795
26 Loss: 0.801 | Acc: 99.808
27 Loss: 0.880 | Acc: 99.808
28 Loss: 0.548 | Acc: 99.877
29 Loss: 0.630 | Acc: 99.815
30 Loss: 0.565 | Acc: 99.870
31 Loss: 0.405 | Acc: 99.925
32 Loss: 0.411 | Acc: 99.884
33 Loss: 0.336 | Acc: 99.932
34 Loss: 0.363 | Acc: 99.918
35 Loss: 0.373 | Acc: 99.932
36 Loss: 0.240 | Acc: 99.966
37 Loss: 0.258 | Acc: 99.952
38 Loss: 0.394 | Acc: 99.925
39 Loss: 0.482 | Acc: 99.870
40 Loss: 0.329 | Acc: 99.932
41 Loss: 0.272 | Acc: 99.932
42 Loss: 0.315 | Acc: 99.938
43 Loss: 0.250 | Acc: 99.952
44 Loss: 0.195 | Acc: 99.966
45 Loss: 0.267 | Acc: 99.938
46 Loss: 0.264 | Acc: 99.932
47 Loss: 0.314 | Acc: 99.945
48 Loss: 0.176 | Acc: 99.979
49 Loss: 0.278 | Acc: 99.952
50 Loss: 0.130 | Acc: 99.993
51 Loss: 0.200 | Acc: 99.966
52 Loss: 0.229 | Acc: 99.966
53 Loss: 0.210 | Acc: 99.973
54 Loss: 0.165 | Acc: 99.973
55 Loss: 0.154 | Acc: 99.979
56 Loss: 0.168 | Acc: 99.979
57 Loss: 0.211 | Acc: 99.945
58 Loss: 0.157 | Acc: 99.973
59 Loss: 0.139 | Acc: 99.979
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([9800, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([9800])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([200, 3, 32, 32])   rValDict[label].shape:  torch.Size([200])
# of Left images:  4900.0
# of Right images:  9800.0
giniRightRatio:  0.5
giniLeftRatio:  0.0
impurityDrop:  0.25
giniGain:  0.41666666666666674
lclasses:  [0, 4900, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [4900, 0, 4900, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  2
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 2
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 2
nodeId:  10 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 10 ,  parentId: 5 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 2 ,  numClasses: 1 ,  numData: 4900
nodeId:  11 , imgTensorShape :  torch.Size([9800, 3, 32, 32])
nodeId: 11 ,  parentId: 5 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 9800
Running nodeId:  6
0 Train Loss: 59.942 | Train Acc: 67.306 | Val Loss: 0.513 | Val Accuracy: 76.500
10 Train Loss: 30.995 | Train Acc: 87.316 | Val Loss: 0.355 | Val Accuracy: 81.500
20 Train Loss: 24.279 | Train Acc: 90.469 | Val Loss: 0.336 | Val Accuracy: 86.000
30 Train Loss: 20.022 | Train Acc: 92.255 | Val Loss: 0.318 | Val Accuracy: 87.000
40 Train Loss: 14.848 | Train Acc: 94.745 | Val Loss: 0.307 | Val Accuracy: 89.500
50 Train Loss: 12.888 | Train Acc: 95.367 | Val Loss: 0.327 | Val Accuracy: 90.000
60 Train Loss: 9.436 | Train Acc: 97.204 | Val Loss: 0.341 | Val Accuracy: 90.000
Epoch     8: reducing learning rate of group 0 to 2.0000e-04.
70 Train Loss: 7.540 | Train Acc: 97.643 | Val Loss: 0.393 | Val Accuracy: 87.000
80 Train Loss: 4.817 | Train Acc: 99.224 | Val Loss: 0.372 | Val Accuracy: 88.000
Epoch    10: reducing learning rate of group 0 to 4.0000e-05.
90 Train Loss: 4.391 | Train Acc: 99.418 | Val Loss: 0.378 | Val Accuracy: 87.500
CNN trained successfully...
image_next_flat.shape :  torch.Size([9800, 12544])
Kmeans trained successfully...
printing expected split from k means
{0: 0, 1: 1}
Printing final_dict items...
{0: 0, 1: 1}
Image Statistics before MLP : L R :  4900 4900
expectedMlpLabels.shape :  torch.Size([9800])
0 Loss: 85.892 | Acc: 80.449
1 Loss: 64.898 | Acc: 86.398
2 Loss: 55.610 | Acc: 88.276
3 Loss: 47.406 | Acc: 90.031
4 Loss: 43.029 | Acc: 91.020
5 Loss: 36.242 | Acc: 92.378
6 Loss: 33.534 | Acc: 93.194
7 Loss: 31.116 | Acc: 93.786
8 Loss: 27.604 | Acc: 94.520
9 Loss: 23.146 | Acc: 95.327
10 Loss: 14.764 | Acc: 97.122
11 Loss: 10.822 | Acc: 97.990
12 Loss: 10.117 | Acc: 98.102
13 Loss: 8.595 | Acc: 98.459
14 Loss: 7.994 | Acc: 98.490
15 Loss: 6.035 | Acc: 98.847
16 Loss: 6.117 | Acc: 98.959
17 Loss: 6.492 | Acc: 98.847
18 Loss: 6.615 | Acc: 98.776
19 Loss: 5.276 | Acc: 99.000
20 Loss: 2.992 | Acc: 99.469
21 Loss: 2.602 | Acc: 99.510
22 Loss: 2.872 | Acc: 99.551
23 Loss: 2.343 | Acc: 99.653
24 Loss: 2.088 | Acc: 99.714
25 Loss: 2.353 | Acc: 99.622
26 Loss: 1.794 | Acc: 99.745
27 Loss: 1.888 | Acc: 99.684
28 Loss: 1.799 | Acc: 99.694
29 Loss: 1.736 | Acc: 99.765
30 Loss: 1.743 | Acc: 99.735
31 Loss: 1.165 | Acc: 99.806
32 Loss: 0.925 | Acc: 99.878
33 Loss: 1.010 | Acc: 99.918
34 Loss: 1.032 | Acc: 99.878
35 Loss: 0.827 | Acc: 99.898
36 Loss: 0.914 | Acc: 99.867
37 Loss: 0.734 | Acc: 99.857
38 Loss: 0.875 | Acc: 99.898
39 Loss: 0.844 | Acc: 99.898
40 Loss: 0.746 | Acc: 99.918
41 Loss: 0.589 | Acc: 99.969
42 Loss: 0.934 | Acc: 99.878
43 Loss: 0.599 | Acc: 99.878
44 Loss: 0.616 | Acc: 99.929
45 Loss: 0.426 | Acc: 99.959
46 Loss: 0.588 | Acc: 99.918
47 Loss: 0.717 | Acc: 99.888
48 Loss: 0.513 | Acc: 99.949
49 Loss: 0.477 | Acc: 99.949
50 Loss: 0.440 | Acc: 99.939
51 Loss: 0.735 | Acc: 99.878
52 Loss: 0.397 | Acc: 99.939
53 Loss: 0.555 | Acc: 99.898
54 Loss: 0.745 | Acc: 99.929
55 Loss: 0.518 | Acc: 99.929
56 Loss: 0.357 | Acc: 99.969
57 Loss: 0.616 | Acc: 99.908
58 Loss: 0.423 | Acc: 99.949
59 Loss: 0.426 | Acc: 99.939
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([4900])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([100, 3, 32, 32])   rValDict[label].shape:  torch.Size([100])
# of Left images:  4900.0
# of Right images:  4900.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [4900, 0, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [0, 4900, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 3
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 7
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 3
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 7
nodeId:  12 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 12 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 3 ,  numClasses: 1 ,  numData: 4900
nodeId:  13 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 13 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 7 ,  numClasses: 1 ,  numData: 4900
Running nodeId:  7
0 Train Loss: 98.174 | Train Acc: 51.864 | Val Loss: 0.870 | Val Accuracy: 59.667
10 Train Loss: 53.890 | Train Acc: 78.456 | Val Loss: 0.667 | Val Accuracy: 73.000
20 Train Loss: 41.316 | Train Acc: 84.068 | Val Loss: 0.615 | Val Accuracy: 75.000
30 Train Loss: 33.128 | Train Acc: 87.653 | Val Loss: 0.674 | Val Accuracy: 74.000
40 Train Loss: 28.937 | Train Acc: 88.986 | Val Loss: 0.722 | Val Accuracy: 75.333
50 Train Loss: 23.528 | Train Acc: 91.789 | Val Loss: 0.777 | Val Accuracy: 76.667
60 Train Loss: 19.985 | Train Acc: 93.429 | Val Loss: 0.843 | Val Accuracy: 76.000
Epoch     8: reducing learning rate of group 0 to 2.0000e-04.
70 Train Loss: 16.232 | Train Acc: 94.980 | Val Loss: 0.941 | Val Accuracy: 75.333
80 Train Loss: 13.380 | Train Acc: 96.701 | Val Loss: 0.954 | Val Accuracy: 75.000
Epoch    10: reducing learning rate of group 0 to 4.0000e-05.
90 Train Loss: 12.747 | Train Acc: 97.041 | Val Loss: 0.968 | Val Accuracy: 74.667
CNN trained successfully...
image_next_flat.shape :  torch.Size([14700, 12544])
Kmeans trained successfully...
printing expected split from k means
{1: 1, 0: 0, 2: 0}
Printing final_dict items...
{0: 0, 2: 1, 1: 1}
Image Statistics before MLP : L R :  4900 9800
expectedMlpLabels.shape :  torch.Size([14700])
0 Loss: 68.699 | Acc: 75.082
1 Loss: 51.970 | Acc: 83.130
2 Loss: 46.264 | Acc: 84.938
3 Loss: 42.514 | Acc: 86.260
4 Loss: 37.047 | Acc: 88.233
5 Loss: 33.064 | Acc: 88.870
6 Loss: 30.506 | Acc: 90.137
7 Loss: 26.389 | Acc: 91.349
8 Loss: 24.916 | Acc: 91.733
9 Loss: 21.627 | Acc: 93.068
10 Loss: 15.370 | Acc: 95.295
11 Loss: 12.236 | Acc: 96.377
12 Loss: 10.986 | Acc: 96.767
13 Loss: 10.319 | Acc: 97.034
14 Loss: 9.798 | Acc: 97.301
15 Loss: 7.763 | Acc: 97.795
16 Loss: 8.226 | Acc: 97.582
17 Loss: 7.119 | Acc: 98.027
18 Loss: 7.780 | Acc: 97.747
19 Loss: 6.078 | Acc: 98.178
20 Loss: 4.658 | Acc: 98.692
21 Loss: 3.977 | Acc: 98.842
22 Loss: 3.680 | Acc: 99.103
23 Loss: 2.987 | Acc: 99.260
24 Loss: 3.104 | Acc: 99.205
25 Loss: 2.728 | Acc: 99.274
26 Loss: 2.555 | Acc: 99.384
27 Loss: 2.554 | Acc: 99.342
28 Loss: 2.711 | Acc: 99.349
29 Loss: 2.430 | Acc: 99.322
30 Loss: 1.877 | Acc: 99.514
31 Loss: 1.489 | Acc: 99.678
32 Loss: 1.753 | Acc: 99.623
33 Loss: 1.448 | Acc: 99.658
34 Loss: 1.673 | Acc: 99.582
35 Loss: 1.365 | Acc: 99.589
36 Loss: 1.329 | Acc: 99.726
37 Loss: 1.373 | Acc: 99.651
38 Loss: 1.419 | Acc: 99.637
39 Loss: 1.389 | Acc: 99.644
40 Loss: 1.265 | Acc: 99.705
41 Loss: 1.028 | Acc: 99.753
42 Loss: 1.014 | Acc: 99.740
43 Loss: 1.091 | Acc: 99.760
44 Loss: 1.076 | Acc: 99.781
45 Loss: 0.965 | Acc: 99.822
46 Loss: 1.328 | Acc: 99.678
47 Loss: 1.209 | Acc: 99.747
48 Loss: 0.933 | Acc: 99.760
49 Loss: 1.025 | Acc: 99.733
50 Loss: 1.066 | Acc: 99.747
51 Loss: 0.913 | Acc: 99.815
52 Loss: 0.824 | Acc: 99.836
53 Loss: 0.892 | Acc: 99.822
54 Loss: 0.774 | Acc: 99.822
55 Loss: 0.934 | Acc: 99.795
56 Loss: 0.789 | Acc: 99.815
57 Loss: 0.871 | Acc: 99.801
58 Loss: 0.853 | Acc: 99.781
59 Loss: 0.924 | Acc: 99.753
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([9800, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([9800])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([200, 3, 32, 32])   rValDict[label].shape:  torch.Size([200])
# of Left images:  4900.0
# of Right images:  9800.0
giniRightRatio:  0.5
giniLeftRatio:  0.0
impurityDrop:  0.25
giniGain:  0.41666666666666674
lclasses:  [4900, 0, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [0, 4900, 4900, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  2
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 4
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 4
nodeId:  14 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 14 ,  parentId: 7 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 4 ,  numClasses: 1 ,  numData: 4900
nodeId:  15 , imgTensorShape :  torch.Size([9800, 3, 32, 32])
nodeId: 15 ,  parentId: 7 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 9800
Running nodeId:  8
Running nodeId:  9
Running nodeId:  10
Running nodeId:  11
0 Train Loss: 60.034 | Train Acc: 67.643 | Val Loss: 0.527 | Val Accuracy: 75.500
10 Train Loss: 27.411 | Train Acc: 89.163 | Val Loss: 0.347 | Val Accuracy: 87.500
20 Train Loss: 20.556 | Train Acc: 92.184 | Val Loss: 0.392 | Val Accuracy: 85.500
30 Train Loss: 17.332 | Train Acc: 93.367 | Val Loss: 0.362 | Val Accuracy: 88.000
40 Train Loss: 11.902 | Train Acc: 96.214 | Val Loss: 0.459 | Val Accuracy: 83.000
Epoch     6: reducing learning rate of group 0 to 2.0000e-04.
50 Train Loss: 10.087 | Train Acc: 96.827 | Val Loss: 0.452 | Val Accuracy: 85.500
60 Train Loss: 6.686 | Train Acc: 98.888 | Val Loss: 0.467 | Val Accuracy: 86.000
Epoch     8: reducing learning rate of group 0 to 4.0000e-05.
70 Train Loss: 6.209 | Train Acc: 99.020 | Val Loss: 0.503 | Val Accuracy: 83.500
80 Train Loss: 5.706 | Train Acc: 99.306 | Val Loss: 0.489 | Val Accuracy: 85.000
Epoch    10: reducing learning rate of group 0 to 8.0000e-06.
90 Train Loss: 5.587 | Train Acc: 99.296 | Val Loss: 0.489 | Val Accuracy: 86.000
CNN trained successfully...
image_next_flat.shape :  torch.Size([9800, 12544])
Kmeans trained successfully...
printing expected split from k means
{1: 1, 0: 0}
Printing final_dict items...
{0: 0, 1: 1}
Image Statistics before MLP : L R :  4900 4900
expectedMlpLabels.shape :  torch.Size([9800])
0 Loss: 97.858 | Acc: 75.724
1 Loss: 70.057 | Acc: 84.959
2 Loss: 58.907 | Acc: 87.592
3 Loss: 52.217 | Acc: 88.898
4 Loss: 46.868 | Acc: 90.204
5 Loss: 39.539 | Acc: 91.724
6 Loss: 36.319 | Acc: 92.827
7 Loss: 29.863 | Acc: 93.969
8 Loss: 25.575 | Acc: 95.204
9 Loss: 22.721 | Acc: 95.490
10 Loss: 11.384 | Acc: 97.908
11 Loss: 9.593 | Acc: 98.235
12 Loss: 8.826 | Acc: 98.418
13 Loss: 6.468 | Acc: 98.867
14 Loss: 6.446 | Acc: 98.867
15 Loss: 6.134 | Acc: 99.092
16 Loss: 4.624 | Acc: 99.184
17 Loss: 4.844 | Acc: 99.051
18 Loss: 5.251 | Acc: 99.061
19 Loss: 4.835 | Acc: 99.194
20 Loss: 2.611 | Acc: 99.571
21 Loss: 1.782 | Acc: 99.776
22 Loss: 1.883 | Acc: 99.694
23 Loss: 1.379 | Acc: 99.806
24 Loss: 1.553 | Acc: 99.765
25 Loss: 1.981 | Acc: 99.653
26 Loss: 2.372 | Acc: 99.663
27 Loss: 1.621 | Acc: 99.806
28 Loss: 0.989 | Acc: 99.867
29 Loss: 1.279 | Acc: 99.857
30 Loss: 1.495 | Acc: 99.827
31 Loss: 1.083 | Acc: 99.857
32 Loss: 0.951 | Acc: 99.908
33 Loss: 0.707 | Acc: 99.918
34 Loss: 0.705 | Acc: 99.929
35 Loss: 0.874 | Acc: 99.857
36 Loss: 0.690 | Acc: 99.908
37 Loss: 0.563 | Acc: 99.939
38 Loss: 0.517 | Acc: 99.949
39 Loss: 0.548 | Acc: 99.939
40 Loss: 0.444 | Acc: 99.959
41 Loss: 0.438 | Acc: 99.949
42 Loss: 0.375 | Acc: 99.969
43 Loss: 0.613 | Acc: 99.939
44 Loss: 0.424 | Acc: 99.929
45 Loss: 0.420 | Acc: 99.959
46 Loss: 0.303 | Acc: 99.980
47 Loss: 0.363 | Acc: 99.929
48 Loss: 0.397 | Acc: 99.969
49 Loss: 0.481 | Acc: 99.929
50 Loss: 0.468 | Acc: 99.929
51 Loss: 0.410 | Acc: 99.929
52 Loss: 0.466 | Acc: 99.949
53 Loss: 0.317 | Acc: 99.980
54 Loss: 0.297 | Acc: 99.969
55 Loss: 0.335 | Acc: 99.980
56 Loss: 0.408 | Acc: 99.949
57 Loss: 0.265 | Acc: 99.980
58 Loss: 0.450 | Acc: 99.959
59 Loss: 0.278 | Acc: 99.969
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([4900])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([100, 3, 32, 32])   rValDict[label].shape:  torch.Size([100])
# of Left images:  4900.0
# of Right images:  4900.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [4900, 0, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [0, 4900, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 1
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 9
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 1
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 9
nodeId:  16 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 16 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 1 ,  numClasses: 1 ,  numData: 4900
nodeId:  17 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 17 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 9 ,  numClasses: 1 ,  numData: 4900
Running nodeId:  12
Running nodeId:  13
Running nodeId:  14
Running nodeId:  15
0 Train Loss: 51.238 | Train Acc: 73.898 | Val Loss: 0.530 | Val Accuracy: 73.000
10 Train Loss: 23.666 | Train Acc: 90.602 | Val Loss: 0.341 | Val Accuracy: 84.500
20 Train Loss: 17.769 | Train Acc: 92.929 | Val Loss: 0.345 | Val Accuracy: 86.000
30 Train Loss: 13.483 | Train Acc: 95.082 | Val Loss: 0.369 | Val Accuracy: 86.500
40 Train Loss: 10.052 | Train Acc: 96.724 | Val Loss: 0.429 | Val Accuracy: 86.500
50 Train Loss: 8.354 | Train Acc: 97.347 | Val Loss: 0.461 | Val Accuracy: 87.500
60 Train Loss: 5.311 | Train Acc: 98.735 | Val Loss: 0.514 | Val Accuracy: 85.500
Epoch     8: reducing learning rate of group 0 to 2.0000e-04.
70 Train Loss: 4.080 | Train Acc: 99.255 | Val Loss: 0.536 | Val Accuracy: 85.500
80 Train Loss: 2.751 | Train Acc: 99.735 | Val Loss: 0.583 | Val Accuracy: 87.000
Epoch    10: reducing learning rate of group 0 to 4.0000e-05.
90 Train Loss: 2.585 | Train Acc: 99.837 | Val Loss: 0.573 | Val Accuracy: 86.000
CNN trained successfully...
image_next_flat.shape :  torch.Size([9800, 12544])
Kmeans trained successfully...
printing expected split from k means
{0: 0, 1: 1}
Printing final_dict items...
{0: 0, 1: 1}
Image Statistics before MLP : L R :  4900 4900
expectedMlpLabels.shape :  torch.Size([9800])
0 Loss: 70.017 | Acc: 84.816
1 Loss: 50.047 | Acc: 89.653
2 Loss: 43.164 | Acc: 90.969
3 Loss: 36.630 | Acc: 92.265
4 Loss: 31.555 | Acc: 93.480
5 Loss: 26.418 | Acc: 94.622
6 Loss: 22.271 | Acc: 95.347
7 Loss: 19.059 | Acc: 96.173
8 Loss: 17.137 | Acc: 96.429
9 Loss: 14.446 | Acc: 97.143
10 Loss: 7.125 | Acc: 98.745
11 Loss: 5.899 | Acc: 98.755
12 Loss: 4.027 | Acc: 99.286
13 Loss: 4.175 | Acc: 99.235
14 Loss: 3.564 | Acc: 99.439
15 Loss: 3.841 | Acc: 99.316
16 Loss: 2.585 | Acc: 99.571
17 Loss: 4.007 | Acc: 99.357
18 Loss: 3.457 | Acc: 99.378
19 Loss: 2.535 | Acc: 99.633
20 Loss: 1.454 | Acc: 99.765
21 Loss: 1.112 | Acc: 99.888
22 Loss: 0.921 | Acc: 99.867
23 Loss: 0.948 | Acc: 99.898
24 Loss: 0.869 | Acc: 99.878
25 Loss: 0.659 | Acc: 99.918
26 Loss: 1.047 | Acc: 99.847
27 Loss: 0.977 | Acc: 99.857
28 Loss: 0.932 | Acc: 99.816
29 Loss: 0.808 | Acc: 99.918
30 Loss: 0.657 | Acc: 99.929
31 Loss: 0.622 | Acc: 99.949
32 Loss: 0.564 | Acc: 99.939
33 Loss: 0.461 | Acc: 99.949
34 Loss: 0.428 | Acc: 99.939
35 Loss: 0.216 | Acc: 100.000
36 Loss: 0.418 | Acc: 99.939
37 Loss: 0.540 | Acc: 99.918
38 Loss: 0.197 | Acc: 100.000
39 Loss: 0.241 | Acc: 99.980
40 Loss: 0.327 | Acc: 99.969
41 Loss: 0.240 | Acc: 99.969
42 Loss: 0.127 | Acc: 100.000
43 Loss: 0.354 | Acc: 99.929
44 Loss: 0.338 | Acc: 99.959
45 Loss: 0.238 | Acc: 99.980
46 Loss: 0.125 | Acc: 100.000
47 Loss: 0.352 | Acc: 99.949
48 Loss: 0.293 | Acc: 99.949
49 Loss: 0.304 | Acc: 99.939
50 Loss: 0.160 | Acc: 99.990
51 Loss: 0.135 | Acc: 99.990
52 Loss: 0.220 | Acc: 99.969
53 Loss: 0.240 | Acc: 99.969
54 Loss: 0.266 | Acc: 99.959
55 Loss: 0.212 | Acc: 99.980
56 Loss: 0.321 | Acc: 99.959
57 Loss: 0.180 | Acc: 99.990
58 Loss: 0.242 | Acc: 99.980
59 Loss: 0.217 | Acc: 99.949
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([4900])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([100, 3, 32, 32])   rValDict[label].shape:  torch.Size([100])
# of Left images:  4900.0
# of Right images:  4900.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [4900, 0, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [0, 4900, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 5
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 6
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 5
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 6
nodeId:  18 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 18 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 5 ,  numClasses: 1 ,  numData: 4900
nodeId:  19 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 19 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 6 ,  numClasses: 1 ,  numData: 4900
Running nodeId:  16
Running nodeId:  17
Running nodeId:  18
Running nodeId:  19
TESTING STARTS
nodeId:  1 , imgTensorShape :  torch.Size([10000, 3, 32, 32])
nodeId: 1 ,  parentId: 0 ,  level: 0 ,  lchildId: 2 ,  rchildId: 3 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 10 ,  numData: 10000
Node 1 Acc: 60.490
Split Acc: 87.270
lTrainDict[data].shape:  torch.Size([4917, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4917])
rTrainDict[data].shape:  torch.Size([5083, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([5083])
# of Left images:  4917.0
# of Right images:  5083.0
giniRightRatio:  0.8425755902732716
giniLeftRatio:  0.8386327951458105
impurityDrop:  0.8387615584728139
giniGain:  0.06123844152718616
lclasses:  [912, 952, 595, 141, 151, 94, 110, 99, 947, 916]
rclasses:  [88, 48, 405, 859, 849, 906, 890, 901, 53, 84]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  2 , imgTensorShape :  torch.Size([4917, 3, 32, 32])
nodeId: 2 ,  parentId: 1 ,  level: 1 ,  lchildId: 4 ,  rchildId: 5 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 4917
nodeId:  3 , imgTensorShape :  torch.Size([5083, 3, 32, 32])
nodeId: 3 ,  parentId: 1 ,  level: 1 ,  lchildId: 6 ,  rchildId: 7 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 5083
Nodes sizes =  5 5
Node 2 Acc: 65.833
Split Acc: 77.771
lTrainDict[data].shape:  torch.Size([2023, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([2023])
rTrainDict[data].shape:  torch.Size([2894, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([2894])
# of Left images:  2023.0
# of Right images:  2894.0
giniRightRatio:  0.7877447274321583
giniLeftRatio:  0.6726080621542327
impurityDrop:  0.7072604586494204
giniGain:  0.13137233649639002
lclasses:  [781, 71, 99, 42, 47, 16, 20, 21, 838, 88]
rclasses:  [131, 881, 496, 99, 104, 78, 90, 78, 109, 828]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  4 , imgTensorShape :  torch.Size([2023, 3, 32, 32])
nodeId: 4 ,  parentId: 2 ,  level: 2 ,  lchildId: 8 ,  rchildId: 9 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 2023
nodeId:  5 , imgTensorShape :  torch.Size([2894, 3, 32, 32])
nodeId: 5 ,  parentId: 2 ,  level: 2 ,  lchildId: 10 ,  rchildId: 11 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 2894
Nodes sizes =  2 3
Node 3 Acc: 56.187
Split Acc: 66.260
lTrainDict[data].shape:  torch.Size([2024, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([2024])
rTrainDict[data].shape:  torch.Size([3059, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([3059])
# of Left images:  2024.0
# of Right images:  3059.0
giniRightRatio:  0.811862508724303
giniLeftRatio:  0.7675878587386149
impurityDrop:  0.7825680034706146
giniGain:  0.06000758680265694
lclasses:  [31, 21, 128, 499, 168, 300, 57, 749, 23, 48]
rclasses:  [57, 27, 277, 360, 681, 606, 833, 152, 30, 36]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  6 , imgTensorShape :  torch.Size([2024, 3, 32, 32])
nodeId: 6 ,  parentId: 3 ,  level: 2 ,  lchildId: 12 ,  rchildId: 13 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 2024
nodeId:  7 , imgTensorShape :  torch.Size([3059, 3, 32, 32])
nodeId: 7 ,  parentId: 3 ,  level: 2 ,  lchildId: 14 ,  rchildId: 15 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 3059
Nodes sizes =  2 3
Node 4 Acc: 69.352
Split Acc: 71.923
lTrainDict[data].shape:  torch.Size([968, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([968])
rTrainDict[data].shape:  torch.Size([1055, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([1055])
# of Left images:  968.0
# of Right images:  1055.0
giniRightRatio:  0.5338730037510389
giniLeftRatio:  0.3906602178812923
impurityDrop:  0.402470182213679
giniGain:  0.27013787994055377
lclasses:  [75, 44, 15, 16, 15, 4, 9, 1, 749, 40]
rclasses:  [706, 27, 84, 26, 32, 12, 11, 20, 89, 48]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  8 , imgTensorShape :  torch.Size([968, 3, 32, 32])
nodeId: 8 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 8 ,  numClasses: 1 ,  numData: 968
nodeId:  9 , imgTensorShape :  torch.Size([1055, 3, 32, 32])
nodeId: 9 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 0 ,  numClasses: 1 ,  numData: 1055
Nodes sizes =  1 1
Node 5 Acc: 64.064
Split Acc: 74.015
lTrainDict[data].shape:  torch.Size([848, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([848])
rTrainDict[data].shape:  torch.Size([2046, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([2046])
# of Left images:  848.0
# of Right images:  2046.0
giniRightRatio:  0.6574012760277068
giniLeftRatio:  0.6715968761124955
impurityDrop:  0.6632848874020474
giniGain:  0.1244598400301109
lclasses:  [51, 9, 463, 58, 89, 56, 51, 39, 11, 21]
rclasses:  [80, 872, 33, 41, 15, 22, 39, 39, 98, 807]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  10 , imgTensorShape :  torch.Size([848, 3, 32, 32])
nodeId: 10 ,  parentId: 5 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 2 ,  numClasses: 1 ,  numData: 848
nodeId:  11 , imgTensorShape :  torch.Size([2046, 3, 32, 32])
nodeId: 11 ,  parentId: 5 ,  level: 3 ,  lchildId: 16 ,  rchildId: 17 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 2046
Nodes sizes =  1 2
Node 6 Acc: 53.557
Split Acc: 55.287
lTrainDict[data].shape:  torch.Size([1020, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([1020])
rTrainDict[data].shape:  torch.Size([1004, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([1004])
# of Left images:  1020.0
# of Right images:  1004.0
giniRightRatio:  0.5154283265344995
giniLeftRatio:  0.7472549019607844
impurityDrop:  0.7509493493779363
giniGain:  0.016638509360678566
lclasses:  [21, 18, 83, 435, 74, 230, 50, 65, 20, 24]
rclasses:  [10, 3, 45, 64, 94, 70, 7, 684, 3, 24]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  12 , imgTensorShape :  torch.Size([1020, 3, 32, 32])
nodeId: 12 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 3 ,  numClasses: 1 ,  numData: 1020
nodeId:  13 , imgTensorShape :  torch.Size([1004, 3, 32, 32])
nodeId: 13 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 7 ,  numClasses: 1 ,  numData: 1004
Nodes sizes =  1 1
Node 7 Acc: 56.031
Split Acc: 60.281
lTrainDict[data].shape:  torch.Size([937, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([937])
rTrainDict[data].shape:  torch.Size([2122, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([2122])
# of Left images:  937.0
# of Right images:  2122.0
giniRightRatio:  0.7675765131857717
giniLeftRatio:  0.6501619077666753
impurityDrop:  0.7157303844026928
giniGain:  0.09613212432161022
lclasses:  [18, 6, 103, 68, 528, 74, 49, 68, 10, 13]
rclasses:  [39, 21, 174, 292, 153, 532, 784, 84, 20, 23]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  14 , imgTensorShape :  torch.Size([937, 3, 32, 32])
nodeId: 14 ,  parentId: 7 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 4 ,  numClasses: 1 ,  numData: 937
nodeId:  15 , imgTensorShape :  torch.Size([2122, 3, 32, 32])
nodeId: 15 ,  parentId: 7 ,  level: 3 ,  lchildId: 18 ,  rchildId: 19 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 2122
Nodes sizes =  1 2
Node 8 Acc: 77.376
Node 9 Acc: 66.919
Node 10 Acc: 54.599
Node 11 Acc: 68.426
Split Acc: 71.310
lTrainDict[data].shape:  torch.Size([1025, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([1025])
rTrainDict[data].shape:  torch.Size([1021, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([1021])
# of Left images:  1025.0
# of Right images:  1021.0
giniRightRatio:  0.515461306683064
giniLeftRatio:  0.4312537775133849
impurityDrop:  0.430923875342299
giniGain:  0.22647740068540784
lclasses:  [30, 762, 15, 18, 4, 10, 17, 5, 54, 110]
rclasses:  [50, 110, 18, 23, 11, 12, 22, 34, 44, 697]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  16 , imgTensorShape :  torch.Size([1025, 3, 32, 32])
nodeId: 16 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 1 ,  numClasses: 1 ,  numData: 1025
nodeId:  17 , imgTensorShape :  torch.Size([1021, 3, 32, 32])
nodeId: 17 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 9 ,  numClasses: 1 ,  numData: 1021
Nodes sizes =  1 1
Node 12 Acc: 42.647
Node 13 Acc: 68.127
Node 14 Acc: 56.350
Node 15 Acc: 56.598
Split Acc: 57.823
lTrainDict[data].shape:  torch.Size([1017, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([1017])
rTrainDict[data].shape:  torch.Size([1105, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([1105])
# of Left images:  1017.0
# of Right images:  1105.0
giniRightRatio:  0.5363870518621651
giniLeftRatio:  0.7058298019218999
impurityDrop:  0.6923357186592242
giniGain:  0.07524079452654753
lclasses:  [13, 7, 84, 206, 76, 491, 48, 72, 9, 11]
rclasses:  [26, 14, 90, 86, 77, 41, 736, 12, 11, 12]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  18 , imgTensorShape :  torch.Size([1017, 3, 32, 32])
nodeId: 18 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 5 ,  numClasses: 1 ,  numData: 1017
nodeId:  19 , imgTensorShape :  torch.Size([1105, 3, 32, 32])
nodeId: 19 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 6 ,  numClasses: 1 ,  numData: 1105
Nodes sizes =  1 1
Node 16 Acc: 74.341
Node 17 Acc: 68.266
Node 18 Acc: 48.279
Node 19 Acc: 66.606
[[706  30  51  21  18  13  26  10  75  50]
 [ 27 762   9  18   6   7  14   3  44 110]
 [ 84  15 463  83 103  84  90  45  15  18]
 [ 26  18  58 435  68 206  86  64  16  23]
 [ 32   4  89  74 528  76  77  94  15  11]
 [ 12  10  56 230  74 491  41  70   4  12]
 [ 11  17  51  50  49  48 736   7   9  22]
 [ 20   5  39  65  68  72  12 684   1  34]
 [ 89  54  11  20  10   9  11   3 749  44]
 [ 48 110  21  24  13  11  12  24  40 697]]

Acc: 62.510

                                                             1                                                                 
                   ┌─────────────────────────────────────────┴───────────────────────────┐                                     
                   2                                                                     3                                     
       ┌───────────┴─────────────┐                                         ┌─────────────┴─────────────┐                       
       4                         5                                         6                           7                       
 ┌─────┴─────┐            ┌──────┴─────────────┐                    ┌──────┴──────┐             ┌──────┴─────────────┐         
 8           9            10                   11                   12            13            14                   15        
                                        ┌──────┴──────┐                                                       ┌──────┴──────┐  
                                        16            17                                                      18            19 

                                                       -1                                                      
                   ┌───────────────────────────────────┴───────────────────────┐                               
                   -1                                                          -1                              
       ┌───────────┴───────────┐                                   ┌───────────┴───────────┐                   
       -1                      -1                                  -1                      -1                  
 ┌─────┴─────┐           ┌─────┴───────────┐                 ┌─────┴─────┐           ┌─────┴───────────┐       
 8           0           2                 -1                3           7           4                 -1      
                                     ┌─────┴─────┐                                               ┌─────┴─────┐ 
                                     1           9                                               5           6 

                                                                         49000                                                                         
                           ┌───────────────────────────────────────────────┴───────────────────────────────┐                                           
                         24500                                                                           24500                                         
           ┌───────────────┴───────────────┐                                               ┌───────────────┴───────────────┐                           
          9800                           14700                                            9800                           14700                         
   ┌───────┴───────┐               ┌───────┴───────────────┐                       ┌───────┴───────┐               ┌───────┴───────────────┐           
  4900            4900            4900                    9800                    4900            4900            4900                    9800         
                                                   ┌───────┴───────┐                                                               ┌───────┴───────┐   
                                                  4900            4900                                                            4900            4900 

                                                   {0: 4900, 1: 4900, 2: 4900, 3: 4900, 4: 4900, 5: 4900, 6: 4900, 7: 4900, 8: 4900, 9: 4900}                                                  
                                   ┌───────────────────────────────────────────────────────────┴───────────────────────────────────────┐                                                       
             {0: 4900, 1: 4900, 2: 4900, 8: 4900, 9: 4900}                                                       {3: 4900, 4: 4900, 5: 4900, 6: 4900, 7: 4900}                                 
               ┌───────────────────┴───────────────────┐                                                           ┌───────────────────┴───────────────────┐                                   
       {0: 4900, 8: 4900}                 {1: 4900, 2: 4900, 9: 4900}                                      {3: 4900, 7: 4900}                 {4: 4900, 5: 4900, 6: 4900}                      
     ┌─────────┴─────────┐                   ┌─────────┴───────────────────┐                             ┌─────────┴─────────┐                   ┌─────────┴───────────────────┐               
 {8: 4900}           {0: 4900}           {2: 4900}                 {1: 4900, 9: 4900}                {3: 4900}           {7: 4900}           {4: 4900}                 {5: 4900, 6: 4900}      
                                                                 ┌─────────┴─────────┐                                                                               ┌─────────┴─────────┐     
                                                             {1: 4900}           {9: 4900}                                                                       {5: 4900}           {6: 4900} 

                                                               87.27                                                               
                       ┌─────────────────────────────────────────┴───────────────────────────┐                                     
                77.7709985763677                                                     66.26008262836908                             
         ┌─────────────┴─────────────┐                                         ┌─────────────┴─────────────┐                       
 71.92288680177954           74.01520387007602                         55.28656126482213           60.28113762667538               
  ┌──────┴──────┐             ┌──────┴─────────────┐                    ┌──────┴──────┐             ┌──────┴─────────────┐         
 0.0           0.0           0.0           71.30987292277615           0.0           0.0           0.0           57.82280867106503 
                                            ┌──────┴──────┐                                                       ┌──────┴──────┐  
                                           0.0           0.0                                                     0.0           0.0 

                                                         0.09999999999999987                                                         
                       ┌──────────────────────────────────────────┴───────────────────────────┐                                      
              0.24444444444444458                                                    0.24444444444444458                             
         ┌─────────────┴──────────────┐                                         ┌─────────────┴──────────────┐                       
        0.5                  0.41666666666666674                               0.5                  0.41666666666666674              
  ┌──────┴──────┐             ┌──────┴─────────────┐                     ┌──────┴──────┐             ┌──────┴─────────────┐          
 0.0           0.0           0.0                  0.5                   0.0           0.0           0.0                  0.5         
                                            ┌──────┴──────┐                                                        ┌──────┴──────┐   
                                           0.0           0.0                                                      0.0           0.0  

