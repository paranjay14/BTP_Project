['options.ckptDir: valDir_cOut16_mFC2_32', 'options.maxDepth: 6', 'options.cnnLR: 0.001', 'options.mlpLR: 0.001', 'options.cnnEpochs: 100', 'options.mlpEpochs: 60', 'options.cnnOut: 16', 'options.mlpFC1: 516', 'options.mlpFC2: 32']
==> Preparing data..
Files already downloaded and verified
Files already downloaded and verified
len(trainInputDict["data"]):  49000 ,  len(valInputDict["data"]):  1000 ,  len(testInputDict["data"]):  10000
nodeId:  1 , imgTensorShape :  torch.Size([49000, 3, 32, 32])
nodeId: 1 ,  parentId: 0 ,  level: 0 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 10 ,  numData: 49000
Running nodeId:  1
0 Train Loss: 177.956 | Train Acc: 37.506 | Val Loss: 1.554 | Val Accuracy: 45.300
10 Train Loss: 110.440 | Train Acc: 61.871 | Val Loss: 1.218 | Val Accuracy: 58.300
20 Train Loss: 95.641 | Train Acc: 66.978 | Val Loss: 1.156 | Val Accuracy: 60.100
30 Train Loss: 86.108 | Train Acc: 70.427 | Val Loss: 1.148 | Val Accuracy: 62.400
40 Train Loss: 77.209 | Train Acc: 73.724 | Val Loss: 1.152 | Val Accuracy: 61.300
Epoch     6: reducing learning rate of group 0 to 2.0000e-04.
50 Train Loss: 71.861 | Train Acc: 75.508 | Val Loss: 1.186 | Val Accuracy: 62.100
60 Train Loss: 65.164 | Train Acc: 78.429 | Val Loss: 1.173 | Val Accuracy: 61.500
Epoch     8: reducing learning rate of group 0 to 4.0000e-05.
70 Train Loss: 63.992 | Train Acc: 78.869 | Val Loss: 1.183 | Val Accuracy: 61.100
80 Train Loss: 62.439 | Train Acc: 79.669 | Val Loss: 1.183 | Val Accuracy: 61.100
Epoch    10: reducing learning rate of group 0 to 8.0000e-06.
90 Train Loss: 62.157 | Train Acc: 79.829 | Val Loss: 1.187 | Val Accuracy: 61.100
CNN trained successfully...
image_next_flat.shape :  torch.Size([49000, 12544])
Kmeans trained successfully...
printing expected split from k means
{8: 0, 5: 1, 9: 0, 2: 1, 4: 1, 0: 0, 1: 0, 7: 1, 6: 1, 3: 1}
Printing final_dict items...
{8: 0, 0: 0, 9: 0, 1: 0, 2: 0, 3: 1, 7: 1, 5: 1, 4: 1, 6: 1}
Image Statistics before MLP : L R :  24500 24500
expectedMlpLabels.shape :  torch.Size([49000])
0 Loss: 80.463 | Acc: 82.169
1 Loss: 69.310 | Acc: 84.863
2 Loss: 64.876 | Acc: 85.843
3 Loss: 60.973 | Acc: 86.878
4 Loss: 57.474 | Acc: 87.571
5 Loss: 55.132 | Acc: 88.033
6 Loss: 52.249 | Acc: 88.712
7 Loss: 49.302 | Acc: 89.382
8 Loss: 47.556 | Acc: 89.706
9 Loss: 44.642 | Acc: 90.404
10 Loss: 37.899 | Acc: 91.853
11 Loss: 35.132 | Acc: 92.655
12 Loss: 33.193 | Acc: 92.994
13 Loss: 31.033 | Acc: 93.365
14 Loss: 30.538 | Acc: 93.531
15 Loss: 28.736 | Acc: 93.920
16 Loss: 27.718 | Acc: 94.271
17 Loss: 26.586 | Acc: 94.427
18 Loss: 25.133 | Acc: 94.763
19 Loss: 23.822 | Acc: 95.055
20 Loss: 20.106 | Acc: 95.865
21 Loss: 18.925 | Acc: 96.110
22 Loss: 18.269 | Acc: 96.398
23 Loss: 17.222 | Acc: 96.543
24 Loss: 17.039 | Acc: 96.588
25 Loss: 16.168 | Acc: 96.720
26 Loss: 15.796 | Acc: 96.861
27 Loss: 15.429 | Acc: 96.955
28 Loss: 15.021 | Acc: 97.082
29 Loss: 14.010 | Acc: 97.247
30 Loss: 13.398 | Acc: 97.361
31 Loss: 12.649 | Acc: 97.612
32 Loss: 12.361 | Acc: 97.576
33 Loss: 12.485 | Acc: 97.622
34 Loss: 11.835 | Acc: 97.671
35 Loss: 11.670 | Acc: 97.753
36 Loss: 11.389 | Acc: 97.859
37 Loss: 11.201 | Acc: 97.837
38 Loss: 11.274 | Acc: 97.796
39 Loss: 11.499 | Acc: 97.804
40 Loss: 10.512 | Acc: 98.055
41 Loss: 10.209 | Acc: 98.131
42 Loss: 9.967 | Acc: 98.165
43 Loss: 9.814 | Acc: 98.127
44 Loss: 10.260 | Acc: 97.988
45 Loss: 9.683 | Acc: 98.192
46 Loss: 9.708 | Acc: 98.061
47 Loss: 9.803 | Acc: 98.149
48 Loss: 9.822 | Acc: 98.143
49 Loss: 9.780 | Acc: 98.120
50 Loss: 9.335 | Acc: 98.245
51 Loss: 9.222 | Acc: 98.284
52 Loss: 9.438 | Acc: 98.182
53 Loss: 8.995 | Acc: 98.316
54 Loss: 9.488 | Acc: 98.231
55 Loss: 9.089 | Acc: 98.310
56 Loss: 9.326 | Acc: 98.227
57 Loss: 9.308 | Acc: 98.263
58 Loss: 9.196 | Acc: 98.278
59 Loss: 8.867 | Acc: 98.345
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([24500, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([24500])
rTrainDict[data].shape:  torch.Size([24500, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([24500])
lValDict[data].shape:  torch.Size([500, 3, 32, 32])   lValDict[label].shape:  torch.Size([500])
rValDict[data].shape:  torch.Size([500, 3, 32, 32])   rValDict[label].shape:  torch.Size([500])
# of Left images:  24500.0
# of Right images:  24500.0
giniRightRatio:  0.8000000000000002
giniLeftRatio:  0.8000000000000002
impurityDrop:  0.8000000000000002
giniGain:  0.09999999999999987
lclasses:  [4900, 4900, 4900, 0, 0, 0, 0, 0, 4900, 4900]
rclasses:  [0, 0, 0, 4900, 4900, 4900, 4900, 4900, 0, 0]
noOfLeftClasses:  5
noOfRightClasses:  5
RETURNING FROM WORK...
nodeId:  2 , imgTensorShape :  torch.Size([24500, 3, 32, 32])
nodeId: 2 ,  parentId: 1 ,  level: 1 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 24500
nodeId:  3 , imgTensorShape :  torch.Size([24500, 3, 32, 32])
nodeId: 3 ,  parentId: 1 ,  level: 1 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 24500
Running nodeId:  2
0 Train Loss: 117.656 | Train Acc: 53.159 | Val Loss: 1.032 | Val Accuracy: 63.600
10 Train Loss: 65.195 | Train Acc: 75.682 | Val Loss: 0.723 | Val Accuracy: 75.000
20 Train Loss: 53.508 | Train Acc: 80.743 | Val Loss: 0.682 | Val Accuracy: 75.600
30 Train Loss: 46.324 | Train Acc: 83.563 | Val Loss: 0.713 | Val Accuracy: 74.000
40 Train Loss: 41.504 | Train Acc: 85.082 | Val Loss: 0.732 | Val Accuracy: 76.200
50 Train Loss: 35.858 | Train Acc: 87.498 | Val Loss: 0.742 | Val Accuracy: 75.600
Epoch     7: reducing learning rate of group 0 to 2.0000e-04.
60 Train Loss: 32.037 | Train Acc: 88.894 | Val Loss: 0.799 | Val Accuracy: 75.000
70 Train Loss: 27.075 | Train Acc: 91.853 | Val Loss: 0.778 | Val Accuracy: 74.400
Epoch     9: reducing learning rate of group 0 to 4.0000e-05.
80 Train Loss: 26.214 | Train Acc: 92.065 | Val Loss: 0.789 | Val Accuracy: 75.000
90 Train Loss: 25.138 | Train Acc: 92.767 | Val Loss: 0.789 | Val Accuracy: 73.800
CNN trained successfully...
image_next_flat.shape :  torch.Size([24500, 12544])
Kmeans trained successfully...
printing expected split from k means
{3: 0, 0: 1, 4: 1, 2: 1, 1: 1}
Printing final_dict items...
{3: 0, 0: 0, 2: 1, 4: 1, 1: 1}
Image Statistics before MLP : L R :  9800 14700
expectedMlpLabels.shape :  torch.Size([24500])
0 Loss: 70.738 | Acc: 80.102
1 Loss: 59.229 | Acc: 83.898
2 Loss: 53.308 | Acc: 85.600
3 Loss: 48.523 | Acc: 87.065
4 Loss: 44.777 | Acc: 88.057
5 Loss: 40.884 | Acc: 89.237
6 Loss: 38.978 | Acc: 89.624
7 Loss: 36.016 | Acc: 90.376
8 Loss: 33.677 | Acc: 90.992
9 Loss: 30.322 | Acc: 92.188
10 Loss: 24.114 | Acc: 93.853
11 Loss: 21.922 | Acc: 94.380
12 Loss: 19.165 | Acc: 95.273
13 Loss: 18.867 | Acc: 95.314
14 Loss: 17.217 | Acc: 95.682
15 Loss: 16.806 | Acc: 95.784
16 Loss: 14.728 | Acc: 96.310
17 Loss: 14.523 | Acc: 96.359
18 Loss: 13.409 | Acc: 96.767
19 Loss: 12.929 | Acc: 96.886
20 Loss: 10.171 | Acc: 97.531
21 Loss: 9.159 | Acc: 97.804
22 Loss: 8.440 | Acc: 98.106
23 Loss: 8.815 | Acc: 97.849
24 Loss: 7.700 | Acc: 98.306
25 Loss: 7.609 | Acc: 98.127
26 Loss: 7.827 | Acc: 98.167
27 Loss: 6.839 | Acc: 98.437
28 Loss: 6.601 | Acc: 98.429
29 Loss: 6.808 | Acc: 98.327
30 Loss: 5.731 | Acc: 98.710
31 Loss: 5.289 | Acc: 98.796
32 Loss: 5.208 | Acc: 98.833
33 Loss: 4.894 | Acc: 98.882
34 Loss: 4.935 | Acc: 98.808
35 Loss: 4.901 | Acc: 98.812
36 Loss: 5.204 | Acc: 98.788
37 Loss: 4.657 | Acc: 98.980
38 Loss: 4.837 | Acc: 98.894
39 Loss: 4.420 | Acc: 98.984
40 Loss: 4.121 | Acc: 99.082
41 Loss: 4.393 | Acc: 98.988
42 Loss: 4.356 | Acc: 99.118
43 Loss: 4.190 | Acc: 99.053
44 Loss: 3.968 | Acc: 99.135
45 Loss: 4.036 | Acc: 99.102
46 Loss: 3.582 | Acc: 99.159
47 Loss: 3.512 | Acc: 99.184
48 Loss: 4.227 | Acc: 99.033
49 Loss: 3.787 | Acc: 99.204
50 Loss: 3.560 | Acc: 99.233
51 Loss: 3.433 | Acc: 99.241
52 Loss: 3.548 | Acc: 99.208
53 Loss: 3.522 | Acc: 99.278
54 Loss: 3.468 | Acc: 99.233
55 Loss: 3.473 | Acc: 99.151
56 Loss: 3.786 | Acc: 99.106
57 Loss: 3.214 | Acc: 99.204
58 Loss: 3.319 | Acc: 99.273
59 Loss: 3.309 | Acc: 99.249
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([9800, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([9800])
rTrainDict[data].shape:  torch.Size([14700, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([14700])
lValDict[data].shape:  torch.Size([200, 3, 32, 32])   lValDict[label].shape:  torch.Size([200])
rValDict[data].shape:  torch.Size([300, 3, 32, 32])   rValDict[label].shape:  torch.Size([300])
# of Left images:  9800.0
# of Right images:  14700.0
giniRightRatio:  0.6666666666666667
giniLeftRatio:  0.5
impurityDrop:  0.5555555555555556
giniGain:  0.24444444444444458
lclasses:  [4900, 0, 0, 4900, 0, 0, 0, 0, 0, 0]
rclasses:  [0, 4900, 4900, 0, 4900, 0, 0, 0, 0, 0]
noOfLeftClasses:  2
noOfRightClasses:  3
RETURNING FROM WORK...
nodeId:  4 , imgTensorShape :  torch.Size([9800, 3, 32, 32])
nodeId: 4 ,  parentId: 2 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 9800
nodeId:  5 , imgTensorShape :  torch.Size([14700, 3, 32, 32])
nodeId: 5 ,  parentId: 2 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 14700
Running nodeId:  3
0 Train Loss: 137.560 | Train Acc: 42.094 | Val Loss: 1.266 | Val Accuracy: 48.800
10 Train Loss: 87.795 | Train Acc: 66.445 | Val Loss: 0.987 | Val Accuracy: 64.000
20 Train Loss: 75.568 | Train Acc: 71.392 | Val Loss: 0.964 | Val Accuracy: 66.000
30 Train Loss: 66.499 | Train Acc: 75.355 | Val Loss: 0.987 | Val Accuracy: 62.400
Epoch     5: reducing learning rate of group 0 to 2.0000e-04.
40 Train Loss: 59.486 | Train Acc: 78.163 | Val Loss: 0.995 | Val Accuracy: 64.000
50 Train Loss: 53.430 | Train Acc: 81.302 | Val Loss: 1.011 | Val Accuracy: 63.400
Epoch     7: reducing learning rate of group 0 to 4.0000e-05.
60 Train Loss: 52.246 | Train Acc: 81.510 | Val Loss: 1.032 | Val Accuracy: 64.000
70 Train Loss: 50.714 | Train Acc: 82.465 | Val Loss: 1.025 | Val Accuracy: 63.200
Epoch     9: reducing learning rate of group 0 to 8.0000e-06.
80 Train Loss: 50.384 | Train Acc: 82.551 | Val Loss: 1.031 | Val Accuracy: 64.000
90 Train Loss: 50.097 | Train Acc: 82.743 | Val Loss: 1.031 | Val Accuracy: 63.400
CNN trained successfully...
image_next_flat.shape :  torch.Size([24500, 12544])
Kmeans trained successfully...
printing expected split from k means
{2: 1, 1: 0, 4: 0, 0: 0, 3: 0}
Printing final_dict items...
{1: 0, 3: 0, 2: 1, 4: 1, 0: 1}
Image Statistics before MLP : L R :  9800 14700
expectedMlpLabels.shape :  torch.Size([24500])
0 Loss: 79.283 | Acc: 76.127
1 Loss: 68.454 | Acc: 80.531
2 Loss: 63.421 | Acc: 82.306
3 Loss: 59.604 | Acc: 83.257
4 Loss: 55.691 | Acc: 84.604
5 Loss: 50.793 | Acc: 86.049
6 Loss: 49.029 | Acc: 86.433
7 Loss: 44.900 | Acc: 87.637
8 Loss: 42.387 | Acc: 88.429
9 Loss: 40.295 | Acc: 88.861
10 Loss: 31.514 | Acc: 91.498
11 Loss: 28.278 | Acc: 92.637
12 Loss: 25.782 | Acc: 93.241
13 Loss: 24.421 | Acc: 93.702
14 Loss: 22.550 | Acc: 93.935
15 Loss: 20.685 | Acc: 94.694
16 Loss: 19.859 | Acc: 94.971
17 Loss: 18.884 | Acc: 95.159
18 Loss: 17.666 | Acc: 95.620
19 Loss: 15.398 | Acc: 96.220
20 Loss: 12.208 | Acc: 96.996
21 Loss: 11.371 | Acc: 97.139
22 Loss: 10.828 | Acc: 97.424
23 Loss: 10.492 | Acc: 97.469
24 Loss: 9.534 | Acc: 97.743
25 Loss: 9.371 | Acc: 97.743
26 Loss: 9.063 | Acc: 97.898
27 Loss: 8.545 | Acc: 97.955
28 Loss: 8.075 | Acc: 98.208
29 Loss: 8.142 | Acc: 98.057
30 Loss: 6.817 | Acc: 98.388
31 Loss: 6.344 | Acc: 98.490
32 Loss: 6.208 | Acc: 98.682
33 Loss: 6.124 | Acc: 98.641
34 Loss: 5.932 | Acc: 98.743
35 Loss: 5.512 | Acc: 98.759
36 Loss: 5.564 | Acc: 98.641
37 Loss: 6.048 | Acc: 98.596
38 Loss: 5.343 | Acc: 98.837
39 Loss: 5.190 | Acc: 98.784
40 Loss: 5.007 | Acc: 98.882
41 Loss: 4.823 | Acc: 98.918
42 Loss: 4.745 | Acc: 98.967
43 Loss: 4.602 | Acc: 98.996
44 Loss: 4.848 | Acc: 98.910
45 Loss: 4.805 | Acc: 98.922
46 Loss: 4.553 | Acc: 98.992
47 Loss: 4.553 | Acc: 99.016
48 Loss: 4.520 | Acc: 99.008
49 Loss: 4.401 | Acc: 99.049
50 Loss: 4.106 | Acc: 99.045
51 Loss: 4.162 | Acc: 99.090
52 Loss: 4.104 | Acc: 99.090
53 Loss: 3.965 | Acc: 99.118
54 Loss: 3.801 | Acc: 99.241
55 Loss: 4.077 | Acc: 99.114
56 Loss: 3.906 | Acc: 99.143
57 Loss: 4.140 | Acc: 99.057
58 Loss: 4.246 | Acc: 99.037
59 Loss: 4.135 | Acc: 99.020
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([9800, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([9800])
rTrainDict[data].shape:  torch.Size([14700, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([14700])
lValDict[data].shape:  torch.Size([200, 3, 32, 32])   lValDict[label].shape:  torch.Size([200])
rValDict[data].shape:  torch.Size([300, 3, 32, 32])   rValDict[label].shape:  torch.Size([300])
# of Left images:  9800.0
# of Right images:  14700.0
giniRightRatio:  0.6666666666666667
giniLeftRatio:  0.5
impurityDrop:  0.5555555555555556
giniGain:  0.24444444444444458
lclasses:  [0, 4900, 0, 4900, 0, 0, 0, 0, 0, 0]
rclasses:  [4900, 0, 4900, 0, 4900, 0, 0, 0, 0, 0]
noOfLeftClasses:  2
noOfRightClasses:  3
RETURNING FROM WORK...
nodeId:  6 , imgTensorShape :  torch.Size([9800, 3, 32, 32])
nodeId: 6 ,  parentId: 3 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 9800
nodeId:  7 , imgTensorShape :  torch.Size([14700, 3, 32, 32])
nodeId: 7 ,  parentId: 3 ,  level: 2 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 14700
Running nodeId:  4
0 Train Loss: 56.557 | Train Acc: 70.041 | Val Loss: 0.511 | Val Accuracy: 72.000
10 Train Loss: 30.875 | Train Acc: 87.286 | Val Loss: 0.377 | Val Accuracy: 84.000
20 Train Loss: 22.956 | Train Acc: 90.908 | Val Loss: 0.398 | Val Accuracy: 80.500
Epoch     4: reducing learning rate of group 0 to 2.0000e-04.
30 Train Loss: 17.574 | Train Acc: 93.337 | Val Loss: 0.393 | Val Accuracy: 82.500
40 Train Loss: 14.246 | Train Acc: 95.388 | Val Loss: 0.389 | Val Accuracy: 85.000
50 Train Loss: 13.447 | Train Acc: 95.735 | Val Loss: 0.421 | Val Accuracy: 83.000
Epoch     7: reducing learning rate of group 0 to 4.0000e-05.
60 Train Loss: 12.430 | Train Acc: 96.184 | Val Loss: 0.413 | Val Accuracy: 83.000
70 Train Loss: 11.836 | Train Acc: 96.561 | Val Loss: 0.417 | Val Accuracy: 82.500
Epoch     9: reducing learning rate of group 0 to 8.0000e-06.
80 Train Loss: 11.673 | Train Acc: 96.612 | Val Loss: 0.419 | Val Accuracy: 83.000
90 Train Loss: 11.518 | Train Acc: 96.755 | Val Loss: 0.416 | Val Accuracy: 83.500
CNN trained successfully...
image_next_flat.shape :  torch.Size([9800, 12544])
Kmeans trained successfully...
printing expected split from k means
{1: 1, 0: 0}
Printing final_dict items...
{0: 0, 1: 1}
Image Statistics before MLP : L R :  4900 4900
expectedMlpLabels.shape :  torch.Size([9800])
0 Loss: 88.974 | Acc: 79.306
1 Loss: 68.129 | Acc: 85.245
2 Loss: 60.178 | Acc: 87.561
3 Loss: 50.561 | Acc: 89.469
4 Loss: 43.442 | Acc: 91.020
5 Loss: 37.353 | Acc: 92.327
6 Loss: 31.722 | Acc: 93.480
7 Loss: 28.307 | Acc: 94.276
8 Loss: 26.108 | Acc: 94.969
9 Loss: 22.861 | Acc: 95.378
10 Loss: 13.114 | Acc: 97.612
11 Loss: 9.976 | Acc: 98.184
12 Loss: 8.565 | Acc: 98.408
13 Loss: 6.936 | Acc: 98.776
14 Loss: 8.565 | Acc: 98.469
15 Loss: 5.467 | Acc: 99.041
16 Loss: 5.889 | Acc: 98.959
17 Loss: 6.630 | Acc: 98.827
18 Loss: 5.928 | Acc: 98.908
19 Loss: 4.989 | Acc: 99.010
20 Loss: 3.159 | Acc: 99.439
21 Loss: 2.645 | Acc: 99.653
22 Loss: 2.307 | Acc: 99.643
23 Loss: 2.400 | Acc: 99.582
24 Loss: 2.262 | Acc: 99.561
25 Loss: 1.828 | Acc: 99.714
26 Loss: 1.494 | Acc: 99.786
27 Loss: 2.567 | Acc: 99.551
28 Loss: 1.838 | Acc: 99.745
29 Loss: 1.859 | Acc: 99.643
30 Loss: 1.658 | Acc: 99.765
31 Loss: 1.413 | Acc: 99.765
32 Loss: 1.193 | Acc: 99.837
33 Loss: 1.061 | Acc: 99.888
34 Loss: 0.714 | Acc: 99.888
35 Loss: 1.253 | Acc: 99.745
36 Loss: 0.871 | Acc: 99.837
37 Loss: 0.865 | Acc: 99.847
38 Loss: 0.778 | Acc: 99.908
39 Loss: 0.712 | Acc: 99.888
40 Loss: 0.580 | Acc: 99.929
41 Loss: 0.564 | Acc: 99.929
42 Loss: 0.524 | Acc: 99.939
43 Loss: 0.616 | Acc: 99.908
44 Loss: 0.501 | Acc: 99.949
45 Loss: 0.590 | Acc: 99.908
46 Loss: 0.543 | Acc: 99.918
47 Loss: 0.622 | Acc: 99.939
48 Loss: 0.436 | Acc: 99.949
49 Loss: 0.628 | Acc: 99.898
50 Loss: 0.378 | Acc: 99.969
51 Loss: 0.535 | Acc: 99.939
52 Loss: 0.421 | Acc: 99.949
53 Loss: 0.574 | Acc: 99.918
54 Loss: 0.481 | Acc: 99.939
55 Loss: 0.335 | Acc: 99.980
56 Loss: 0.543 | Acc: 99.939
57 Loss: 0.362 | Acc: 99.980
58 Loss: 0.355 | Acc: 99.949
59 Loss: 0.424 | Acc: 99.969
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([4900])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([100, 3, 32, 32])   rValDict[label].shape:  torch.Size([100])
# of Left images:  4900.0
# of Right images:  4900.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [4900, 0, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [0, 4900, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 0
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 8
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 0
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 8
nodeId:  8 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 8 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 0 ,  numClasses: 1 ,  numData: 4900
nodeId:  9 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 9 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 8 ,  numClasses: 1 ,  numData: 4900
Running nodeId:  5
0 Train Loss: 86.043 | Train Acc: 60.878 | Val Loss: 0.673 | Val Accuracy: 76.000
10 Train Loss: 38.035 | Train Acc: 85.041 | Val Loss: 0.437 | Val Accuracy: 84.000
20 Train Loss: 30.555 | Train Acc: 88.361 | Val Loss: 0.400 | Val Accuracy: 84.333
30 Train Loss: 25.848 | Train Acc: 90.218 | Val Loss: 0.411 | Val Accuracy: 84.000
40 Train Loss: 21.207 | Train Acc: 92.238 | Val Loss: 0.419 | Val Accuracy: 85.667
50 Train Loss: 17.408 | Train Acc: 93.986 | Val Loss: 0.466 | Val Accuracy: 83.000
Epoch     7: reducing learning rate of group 0 to 2.0000e-04.
60 Train Loss: 13.419 | Train Acc: 95.653 | Val Loss: 0.502 | Val Accuracy: 82.333
70 Train Loss: 10.949 | Train Acc: 97.150 | Val Loss: 0.493 | Val Accuracy: 85.000
Epoch     9: reducing learning rate of group 0 to 4.0000e-05.
80 Train Loss: 10.333 | Train Acc: 97.422 | Val Loss: 0.470 | Val Accuracy: 85.000
90 Train Loss: 9.675 | Train Acc: 97.816 | Val Loss: 0.477 | Val Accuracy: 84.333
CNN trained successfully...
image_next_flat.shape :  torch.Size([14700, 12544])
Kmeans trained successfully...
printing expected split from k means
{2: 1, 1: 0, 0: 0}
Printing final_dict items...
{1: 0, 0: 1, 2: 1}
Image Statistics before MLP : L R :  4900 9800
expectedMlpLabels.shape :  torch.Size([14700])
0 Loss: 35.617 | Acc: 89.062
1 Loss: 24.317 | Acc: 92.856
2 Loss: 20.210 | Acc: 93.925
3 Loss: 17.605 | Acc: 94.658
4 Loss: 15.755 | Acc: 95.171
5 Loss: 15.019 | Acc: 95.260
6 Loss: 12.380 | Acc: 96.151
7 Loss: 11.272 | Acc: 96.493
8 Loss: 9.953 | Acc: 96.952
9 Loss: 9.046 | Acc: 97.171
10 Loss: 5.564 | Acc: 98.425
11 Loss: 4.567 | Acc: 98.705
12 Loss: 3.185 | Acc: 99.123
13 Loss: 3.362 | Acc: 99.007
14 Loss: 3.143 | Acc: 99.082
15 Loss: 2.632 | Acc: 99.260
16 Loss: 2.979 | Acc: 99.205
17 Loss: 2.607 | Acc: 99.219
18 Loss: 2.280 | Acc: 99.308
19 Loss: 2.284 | Acc: 99.452
20 Loss: 1.256 | Acc: 99.719
21 Loss: 0.842 | Acc: 99.781
22 Loss: 0.639 | Acc: 99.849
23 Loss: 0.566 | Acc: 99.842
24 Loss: 0.808 | Acc: 99.815
25 Loss: 0.702 | Acc: 99.788
26 Loss: 0.945 | Acc: 99.753
27 Loss: 0.887 | Acc: 99.808
28 Loss: 0.675 | Acc: 99.808
29 Loss: 0.764 | Acc: 99.842
30 Loss: 0.453 | Acc: 99.849
31 Loss: 0.565 | Acc: 99.870
32 Loss: 0.307 | Acc: 99.918
33 Loss: 0.346 | Acc: 99.911
34 Loss: 0.411 | Acc: 99.877
35 Loss: 0.507 | Acc: 99.925
36 Loss: 0.282 | Acc: 99.938
37 Loss: 0.292 | Acc: 99.932
38 Loss: 0.274 | Acc: 99.925
39 Loss: 0.197 | Acc: 99.959
40 Loss: 0.201 | Acc: 99.952
41 Loss: 0.218 | Acc: 99.966
42 Loss: 0.148 | Acc: 99.986
43 Loss: 0.236 | Acc: 99.959
44 Loss: 0.302 | Acc: 99.938
45 Loss: 0.116 | Acc: 99.993
46 Loss: 0.163 | Acc: 99.973
47 Loss: 0.212 | Acc: 99.952
48 Loss: 0.236 | Acc: 99.938
49 Loss: 0.178 | Acc: 99.986
50 Loss: 0.123 | Acc: 99.966
51 Loss: 0.192 | Acc: 99.952
52 Loss: 0.139 | Acc: 99.979
53 Loss: 0.169 | Acc: 99.973
54 Loss: 0.179 | Acc: 99.966
55 Loss: 0.152 | Acc: 99.952
56 Loss: 0.107 | Acc: 99.986
57 Loss: 0.186 | Acc: 99.959
58 Loss: 0.132 | Acc: 99.973
59 Loss: 0.172 | Acc: 99.959
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([9800, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([9800])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([200, 3, 32, 32])   rValDict[label].shape:  torch.Size([200])
# of Left images:  4900.0
# of Right images:  9800.0
giniRightRatio:  0.5
giniLeftRatio:  0.0
impurityDrop:  0.25
giniGain:  0.41666666666666674
lclasses:  [0, 4900, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [4900, 0, 4900, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  2
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 2
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 2
nodeId:  10 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 10 ,  parentId: 5 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 2 ,  numClasses: 1 ,  numData: 4900
nodeId:  11 , imgTensorShape :  torch.Size([9800, 3, 32, 32])
nodeId: 11 ,  parentId: 5 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 9800
Running nodeId:  6
0 Train Loss: 57.295 | Train Acc: 70.071 | Val Loss: 0.552 | Val Accuracy: 70.500
10 Train Loss: 28.647 | Train Acc: 88.071 | Val Loss: 0.339 | Val Accuracy: 88.500
20 Train Loss: 22.469 | Train Acc: 90.714 | Val Loss: 0.421 | Val Accuracy: 82.500
Epoch     4: reducing learning rate of group 0 to 2.0000e-04.
30 Train Loss: 17.636 | Train Acc: 93.102 | Val Loss: 0.400 | Val Accuracy: 88.000
40 Train Loss: 13.642 | Train Acc: 95.582 | Val Loss: 0.411 | Val Accuracy: 88.000
Epoch     6: reducing learning rate of group 0 to 4.0000e-05.
50 Train Loss: 12.640 | Train Acc: 96.031 | Val Loss: 0.414 | Val Accuracy: 87.000
60 Train Loss: 11.953 | Train Acc: 96.378 | Val Loss: 0.416 | Val Accuracy: 87.500
Epoch     8: reducing learning rate of group 0 to 8.0000e-06.
70 Train Loss: 11.711 | Train Acc: 96.592 | Val Loss: 0.413 | Val Accuracy: 86.500
80 Train Loss: 11.538 | Train Acc: 96.663 | Val Loss: 0.414 | Val Accuracy: 87.000
Epoch    10: reducing learning rate of group 0 to 1.6000e-06.
90 Train Loss: 11.529 | Train Acc: 96.684 | Val Loss: 0.414 | Val Accuracy: 87.000
CNN trained successfully...
image_next_flat.shape :  torch.Size([9800, 12544])
Kmeans trained successfully...
printing expected split from k means
{0: 0, 1: 1}
Printing final_dict items...
{0: 0, 1: 1}
Image Statistics before MLP : L R :  4900 4900
expectedMlpLabels.shape :  torch.Size([9800])
0 Loss: 86.225 | Acc: 80.031
1 Loss: 61.724 | Acc: 87.347
2 Loss: 52.417 | Acc: 89.071
3 Loss: 46.328 | Acc: 90.357
4 Loss: 41.580 | Acc: 91.643
5 Loss: 37.011 | Acc: 92.735
6 Loss: 32.094 | Acc: 93.449
7 Loss: 29.208 | Acc: 94.276
8 Loss: 24.396 | Acc: 95.245
9 Loss: 21.776 | Acc: 95.571
10 Loss: 13.195 | Acc: 97.622
11 Loss: 9.961 | Acc: 98.143
12 Loss: 9.647 | Acc: 98.316
13 Loss: 7.524 | Acc: 98.612
14 Loss: 6.631 | Acc: 98.806
15 Loss: 7.204 | Acc: 98.735
16 Loss: 6.408 | Acc: 98.816
17 Loss: 6.285 | Acc: 98.878
18 Loss: 4.394 | Acc: 99.235
19 Loss: 4.281 | Acc: 99.296
20 Loss: 2.875 | Acc: 99.531
21 Loss: 2.193 | Acc: 99.622
22 Loss: 1.903 | Acc: 99.745
23 Loss: 1.960 | Acc: 99.694
24 Loss: 1.884 | Acc: 99.724
25 Loss: 1.842 | Acc: 99.735
26 Loss: 1.755 | Acc: 99.694
27 Loss: 1.905 | Acc: 99.673
28 Loss: 1.843 | Acc: 99.704
29 Loss: 1.633 | Acc: 99.724
30 Loss: 1.138 | Acc: 99.847
31 Loss: 1.043 | Acc: 99.847
32 Loss: 0.992 | Acc: 99.857
33 Loss: 0.967 | Acc: 99.816
34 Loss: 0.690 | Acc: 99.939
35 Loss: 0.879 | Acc: 99.857
36 Loss: 0.821 | Acc: 99.878
37 Loss: 0.794 | Acc: 99.878
38 Loss: 0.570 | Acc: 99.908
39 Loss: 0.835 | Acc: 99.908
40 Loss: 0.639 | Acc: 99.918
41 Loss: 0.694 | Acc: 99.918
42 Loss: 0.639 | Acc: 99.908
43 Loss: 0.518 | Acc: 99.959
44 Loss: 0.629 | Acc: 99.929
45 Loss: 0.755 | Acc: 99.888
46 Loss: 0.766 | Acc: 99.867
47 Loss: 0.534 | Acc: 99.939
48 Loss: 0.464 | Acc: 99.949
49 Loss: 0.583 | Acc: 99.959
50 Loss: 0.526 | Acc: 99.908
51 Loss: 0.492 | Acc: 99.949
52 Loss: 0.465 | Acc: 99.949
53 Loss: 0.486 | Acc: 99.959
54 Loss: 0.571 | Acc: 99.929
55 Loss: 0.472 | Acc: 99.918
56 Loss: 0.364 | Acc: 99.969
57 Loss: 0.446 | Acc: 99.929
58 Loss: 0.575 | Acc: 99.918
59 Loss: 0.398 | Acc: 99.959
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([4900])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([100, 3, 32, 32])   rValDict[label].shape:  torch.Size([100])
# of Left images:  4900.0
# of Right images:  4900.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [4900, 0, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [0, 4900, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 4
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 6
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 4
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 6
nodeId:  12 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 12 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 4 ,  numClasses: 1 ,  numData: 4900
nodeId:  13 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 13 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 6 ,  numClasses: 1 ,  numData: 4900
Running nodeId:  7
0 Train Loss: 100.792 | Train Acc: 49.422 | Val Loss: 0.880 | Val Accuracy: 60.333
10 Train Loss: 64.540 | Train Acc: 71.973 | Val Loss: 0.690 | Val Accuracy: 69.333
20 Train Loss: 54.880 | Train Acc: 76.728 | Val Loss: 0.687 | Val Accuracy: 69.667
30 Train Loss: 48.206 | Train Acc: 80.293 | Val Loss: 0.731 | Val Accuracy: 72.333
40 Train Loss: 41.900 | Train Acc: 83.211 | Val Loss: 0.786 | Val Accuracy: 68.333
Epoch     6: reducing learning rate of group 0 to 2.0000e-04.
50 Train Loss: 37.625 | Train Acc: 85.190 | Val Loss: 0.826 | Val Accuracy: 70.667
60 Train Loss: 32.862 | Train Acc: 88.320 | Val Loss: 0.853 | Val Accuracy: 70.667
Epoch     8: reducing learning rate of group 0 to 4.0000e-05.
70 Train Loss: 32.167 | Train Acc: 88.388 | Val Loss: 0.844 | Val Accuracy: 70.667
80 Train Loss: 30.977 | Train Acc: 89.252 | Val Loss: 0.846 | Val Accuracy: 70.000
Epoch    10: reducing learning rate of group 0 to 8.0000e-06.
90 Train Loss: 30.744 | Train Acc: 89.354 | Val Loss: 0.863 | Val Accuracy: 70.000
CNN trained successfully...
image_next_flat.shape :  torch.Size([14700, 12544])
Kmeans trained successfully...
printing expected split from k means
{0: 1, 1: 0, 2: 1}
Printing final_dict items...
{1: 0, 0: 1, 2: 1}
Image Statistics before MLP : L R :  4900 9800
expectedMlpLabels.shape :  torch.Size([14700])
0 Loss: 82.058 | Acc: 64.884
1 Loss: 73.118 | Acc: 69.795
2 Loss: 69.693 | Acc: 71.767
3 Loss: 65.619 | Acc: 74.473
4 Loss: 62.496 | Acc: 75.336
5 Loss: 59.672 | Acc: 76.637
6 Loss: 54.459 | Acc: 79.390
7 Loss: 50.876 | Acc: 80.870
8 Loss: 48.352 | Acc: 82.267
9 Loss: 44.493 | Acc: 83.726
10 Loss: 35.056 | Acc: 87.699
11 Loss: 31.041 | Acc: 89.164
12 Loss: 28.754 | Acc: 90.068
13 Loss: 27.366 | Acc: 90.630
14 Loss: 24.759 | Acc: 91.877
15 Loss: 22.804 | Acc: 92.356
16 Loss: 21.349 | Acc: 92.801
17 Loss: 20.347 | Acc: 93.096
18 Loss: 18.879 | Acc: 93.712
19 Loss: 17.681 | Acc: 94.315
20 Loss: 14.000 | Acc: 95.616
21 Loss: 12.217 | Acc: 96.055
22 Loss: 11.994 | Acc: 96.260
23 Loss: 10.985 | Acc: 96.521
24 Loss: 10.548 | Acc: 96.836
25 Loss: 9.292 | Acc: 97.171
26 Loss: 9.246 | Acc: 97.103
27 Loss: 9.243 | Acc: 97.281
28 Loss: 8.418 | Acc: 97.575
29 Loss: 8.716 | Acc: 97.432
30 Loss: 7.178 | Acc: 97.808
31 Loss: 7.446 | Acc: 97.795
32 Loss: 5.993 | Acc: 98.288
33 Loss: 6.188 | Acc: 98.089
34 Loss: 6.187 | Acc: 98.219
35 Loss: 6.016 | Acc: 98.281
36 Loss: 5.693 | Acc: 98.493
37 Loss: 5.294 | Acc: 98.548
38 Loss: 5.456 | Acc: 98.486
39 Loss: 5.129 | Acc: 98.527
40 Loss: 5.004 | Acc: 98.658
41 Loss: 4.936 | Acc: 98.637
42 Loss: 4.316 | Acc: 98.788
43 Loss: 4.567 | Acc: 98.795
44 Loss: 4.442 | Acc: 98.781
45 Loss: 4.484 | Acc: 98.678
46 Loss: 4.329 | Acc: 98.726
47 Loss: 4.200 | Acc: 98.863
48 Loss: 3.991 | Acc: 98.870
49 Loss: 4.282 | Acc: 98.733
50 Loss: 3.887 | Acc: 98.932
51 Loss: 4.239 | Acc: 98.774
52 Loss: 4.259 | Acc: 98.945
53 Loss: 4.135 | Acc: 98.911
54 Loss: 3.811 | Acc: 98.884
55 Loss: 3.739 | Acc: 98.993
56 Loss: 4.097 | Acc: 98.849
57 Loss: 3.985 | Acc: 98.911
58 Loss: 3.742 | Acc: 99.014
59 Loss: 3.596 | Acc: 99.027
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([9800, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([9800])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([200, 3, 32, 32])   rValDict[label].shape:  torch.Size([200])
# of Left images:  4900.0
# of Right images:  9800.0
giniRightRatio:  0.5
giniLeftRatio:  0.0
impurityDrop:  0.25
giniGain:  0.41666666666666674
lclasses:  [0, 4900, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [4900, 0, 4900, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  2
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 5
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 5
nodeId:  14 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 14 ,  parentId: 7 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 5 ,  numClasses: 1 ,  numData: 4900
nodeId:  15 , imgTensorShape :  torch.Size([9800, 3, 32, 32])
nodeId: 15 ,  parentId: 7 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 9800
Running nodeId:  8
Running nodeId:  9
Running nodeId:  10
Running nodeId:  11
0 Train Loss: 66.928 | Train Acc: 61.163 | Val Loss: 0.599 | Val Accuracy: 72.500
10 Train Loss: 31.109 | Train Acc: 87.255 | Val Loss: 0.392 | Val Accuracy: 84.500
20 Train Loss: 23.796 | Train Acc: 90.520 | Val Loss: 0.400 | Val Accuracy: 81.500
Epoch     4: reducing learning rate of group 0 to 2.0000e-04.
30 Train Loss: 17.444 | Train Acc: 93.480 | Val Loss: 0.416 | Val Accuracy: 81.500
40 Train Loss: 13.653 | Train Acc: 95.806 | Val Loss: 0.408 | Val Accuracy: 84.000
Epoch     6: reducing learning rate of group 0 to 4.0000e-05.
50 Train Loss: 12.664 | Train Acc: 96.541 | Val Loss: 0.421 | Val Accuracy: 84.500
60 Train Loss: 11.987 | Train Acc: 96.755 | Val Loss: 0.422 | Val Accuracy: 85.000
70 Train Loss: 11.766 | Train Acc: 97.031 | Val Loss: 0.422 | Val Accuracy: 84.500
Epoch     9: reducing learning rate of group 0 to 8.0000e-06.
80 Train Loss: 11.659 | Train Acc: 96.990 | Val Loss: 0.425 | Val Accuracy: 84.500
90 Train Loss: 11.391 | Train Acc: 97.153 | Val Loss: 0.426 | Val Accuracy: 84.000
CNN trained successfully...
image_next_flat.shape :  torch.Size([9800, 12544])
Kmeans trained successfully...
printing expected split from k means
{1: 0, 0: 1}
Printing final_dict items...
{1: 0, 0: 1}
Image Statistics before MLP : L R :  4900 4900
expectedMlpLabels.shape :  torch.Size([9800])
0 Loss: 100.213 | Acc: 75.786
1 Loss: 72.445 | Acc: 84.469
2 Loss: 61.993 | Acc: 86.837
3 Loss: 53.631 | Acc: 88.929
4 Loss: 46.052 | Acc: 90.612
5 Loss: 40.137 | Acc: 91.878
6 Loss: 36.354 | Acc: 92.643
7 Loss: 29.650 | Acc: 93.969
8 Loss: 26.316 | Acc: 95.000
9 Loss: 22.135 | Acc: 95.765
10 Loss: 12.755 | Acc: 97.755
11 Loss: 8.522 | Acc: 98.561
12 Loss: 7.078 | Acc: 98.714
13 Loss: 7.326 | Acc: 98.622
14 Loss: 6.036 | Acc: 98.990
15 Loss: 6.735 | Acc: 98.806
16 Loss: 5.726 | Acc: 99.031
17 Loss: 5.380 | Acc: 99.051
18 Loss: 4.365 | Acc: 99.286
19 Loss: 4.239 | Acc: 99.255
20 Loss: 2.238 | Acc: 99.673
21 Loss: 2.691 | Acc: 99.551
22 Loss: 1.490 | Acc: 99.776
23 Loss: 1.577 | Acc: 99.745
24 Loss: 1.811 | Acc: 99.735
25 Loss: 1.486 | Acc: 99.735
26 Loss: 1.433 | Acc: 99.806
27 Loss: 1.656 | Acc: 99.765
28 Loss: 1.182 | Acc: 99.816
29 Loss: 1.441 | Acc: 99.714
30 Loss: 0.855 | Acc: 99.908
31 Loss: 0.874 | Acc: 99.888
32 Loss: 1.072 | Acc: 99.816
33 Loss: 0.936 | Acc: 99.867
34 Loss: 0.810 | Acc: 99.857
35 Loss: 0.654 | Acc: 99.918
36 Loss: 0.711 | Acc: 99.908
37 Loss: 0.688 | Acc: 99.878
38 Loss: 0.873 | Acc: 99.878
39 Loss: 0.712 | Acc: 99.908
40 Loss: 0.463 | Acc: 99.939
41 Loss: 0.410 | Acc: 99.949
42 Loss: 0.641 | Acc: 99.888
43 Loss: 0.588 | Acc: 99.908
44 Loss: 0.451 | Acc: 99.939
45 Loss: 0.516 | Acc: 99.918
46 Loss: 0.426 | Acc: 99.949
47 Loss: 0.326 | Acc: 99.959
48 Loss: 0.811 | Acc: 99.908
49 Loss: 0.421 | Acc: 99.949
50 Loss: 0.404 | Acc: 99.939
51 Loss: 0.537 | Acc: 99.939
52 Loss: 0.459 | Acc: 99.908
53 Loss: 0.407 | Acc: 99.929
54 Loss: 0.317 | Acc: 99.969
55 Loss: 0.337 | Acc: 99.949
56 Loss: 0.452 | Acc: 99.949
57 Loss: 0.276 | Acc: 99.969
58 Loss: 0.323 | Acc: 99.949
59 Loss: 0.274 | Acc: 99.959
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([4900])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([100, 3, 32, 32])   rValDict[label].shape:  torch.Size([100])
# of Left images:  4900.0
# of Right images:  4900.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [0, 4900, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [4900, 0, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 9
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 1
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 9
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 1
nodeId:  16 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 16 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 9 ,  numClasses: 1 ,  numData: 4900
nodeId:  17 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 17 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 1 ,  numClasses: 1 ,  numData: 4900
Running nodeId:  12
Running nodeId:  13
Running nodeId:  14
Running nodeId:  15
0 Train Loss: 56.569 | Train Acc: 70.500 | Val Loss: 0.492 | Val Accuracy: 78.000
10 Train Loss: 28.618 | Train Acc: 88.449 | Val Loss: 0.306 | Val Accuracy: 88.500
20 Train Loss: 21.316 | Train Acc: 91.745 | Val Loss: 0.359 | Val Accuracy: 87.000
Epoch     4: reducing learning rate of group 0 to 2.0000e-04.
30 Train Loss: 17.786 | Train Acc: 93.224 | Val Loss: 0.342 | Val Accuracy: 87.500
40 Train Loss: 14.384 | Train Acc: 95.357 | Val Loss: 0.373 | Val Accuracy: 88.500
Epoch     6: reducing learning rate of group 0 to 4.0000e-05.
50 Train Loss: 13.494 | Train Acc: 95.827 | Val Loss: 0.383 | Val Accuracy: 87.500
60 Train Loss: 12.902 | Train Acc: 95.898 | Val Loss: 0.382 | Val Accuracy: 87.500
Epoch     8: reducing learning rate of group 0 to 8.0000e-06.
70 Train Loss: 12.706 | Train Acc: 96.092 | Val Loss: 0.387 | Val Accuracy: 88.500
80 Train Loss: 12.569 | Train Acc: 96.163 | Val Loss: 0.384 | Val Accuracy: 88.000
Epoch    10: reducing learning rate of group 0 to 1.6000e-06.
90 Train Loss: 12.534 | Train Acc: 96.214 | Val Loss: 0.386 | Val Accuracy: 87.500
CNN trained successfully...
image_next_flat.shape :  torch.Size([9800, 12544])
Kmeans trained successfully...
printing expected split from k means
{0: 0, 1: 1}
Printing final_dict items...
{0: 0, 1: 1}
Image Statistics before MLP : L R :  4900 4900
expectedMlpLabels.shape :  torch.Size([9800])
0 Loss: 84.429 | Acc: 80.867
1 Loss: 64.164 | Acc: 86.398
2 Loss: 57.219 | Acc: 87.990
3 Loss: 51.156 | Acc: 89.071
4 Loss: 46.942 | Acc: 90.367
5 Loss: 42.267 | Acc: 91.296
6 Loss: 37.232 | Acc: 92.561
7 Loss: 33.266 | Acc: 93.388
8 Loss: 32.471 | Acc: 93.378
9 Loss: 26.785 | Acc: 94.949
10 Loss: 18.447 | Acc: 96.296
11 Loss: 14.902 | Acc: 97.041
12 Loss: 12.926 | Acc: 97.582
13 Loss: 10.430 | Acc: 97.939
14 Loss: 10.438 | Acc: 98.092
15 Loss: 9.350 | Acc: 98.133
16 Loss: 9.838 | Acc: 98.184
17 Loss: 7.392 | Acc: 98.582
18 Loss: 7.143 | Acc: 98.510
19 Loss: 6.656 | Acc: 98.816
20 Loss: 4.655 | Acc: 99.122
21 Loss: 3.828 | Acc: 99.337
22 Loss: 2.765 | Acc: 99.500
23 Loss: 2.981 | Acc: 99.459
24 Loss: 2.054 | Acc: 99.653
25 Loss: 2.176 | Acc: 99.612
26 Loss: 2.180 | Acc: 99.633
27 Loss: 1.953 | Acc: 99.714
28 Loss: 2.119 | Acc: 99.653
29 Loss: 2.308 | Acc: 99.653
30 Loss: 1.626 | Acc: 99.704
31 Loss: 1.331 | Acc: 99.847
32 Loss: 1.157 | Acc: 99.847
33 Loss: 1.155 | Acc: 99.847
34 Loss: 1.381 | Acc: 99.806
35 Loss: 0.839 | Acc: 99.898
36 Loss: 0.721 | Acc: 99.908
37 Loss: 0.828 | Acc: 99.867
38 Loss: 0.941 | Acc: 99.878
39 Loss: 0.806 | Acc: 99.888
40 Loss: 0.778 | Acc: 99.867
41 Loss: 0.717 | Acc: 99.908
42 Loss: 0.602 | Acc: 99.908
43 Loss: 0.962 | Acc: 99.867
44 Loss: 0.673 | Acc: 99.888
45 Loss: 0.668 | Acc: 99.918
46 Loss: 0.604 | Acc: 99.929
47 Loss: 0.667 | Acc: 99.908
48 Loss: 0.691 | Acc: 99.867
49 Loss: 0.448 | Acc: 99.959
50 Loss: 0.932 | Acc: 99.847
51 Loss: 0.709 | Acc: 99.878
52 Loss: 0.748 | Acc: 99.888
53 Loss: 0.646 | Acc: 99.949
54 Loss: 0.493 | Acc: 99.918
55 Loss: 0.524 | Acc: 99.949
56 Loss: 0.557 | Acc: 99.929
57 Loss: 0.431 | Acc: 99.969
58 Loss: 0.525 | Acc: 99.888
59 Loss: 0.473 | Acc: 99.939
MLP trained successfully...
lTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4900])
rTrainDict[data].shape:  torch.Size([4900, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([4900])
lValDict[data].shape:  torch.Size([100, 3, 32, 32])   lValDict[label].shape:  torch.Size([100])
rValDict[data].shape:  torch.Size([100, 3, 32, 32])   rValDict[label].shape:  torch.Size([100])
# of Left images:  4900.0
# of Right images:  4900.0
giniRightRatio:  0.0
giniLeftRatio:  0.0
impurityDrop:  0.0
giniGain:  0.5
lclasses:  [4900, 0, 0, 0, 0, 0, 0, 0, 0, 0]
rclasses:  [0, 4900, 0, 0, 0, 0, 0, 0, 0, 0]
noOfLeftClasses:  1
noOfRightClasses:  1
RETURNING FROM WORK...
CLASS THRESHOLD REACHED 1 IN LEFT 1 2 3
CLASS THRESHOLD REACHED 1 IN RIGHT 1 2 7
DOMINANCE THRESHOLD REACHED IN LEFT 1.0 0.95 3
DOMINANCE THRESHOLD REACHED IN RIGHT 1.0 0.95 7
nodeId:  18 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 18 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 3 ,  numClasses: 1 ,  numData: 4900
nodeId:  19 , imgTensorShape :  torch.Size([4900, 3, 32, 32])
nodeId: 19 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 7 ,  numClasses: 1 ,  numData: 4900
Running nodeId:  16
Running nodeId:  17
Running nodeId:  18
Running nodeId:  19
TESTING STARTS
nodeId:  1 , imgTensorShape :  torch.Size([10000, 3, 32, 32])
nodeId: 1 ,  parentId: 0 ,  level: 0 ,  lchildId: 2 ,  rchildId: 3 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 10 ,  numData: 10000
Node 1 Acc: 60.490
Split Acc: 87.320
lTrainDict[data].shape:  torch.Size([4990, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([4990])
rTrainDict[data].shape:  torch.Size([5010, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([5010])
# of Left images:  4990.0
# of Right images:  5010.0
giniRightRatio:  0.8411140991470153
giniLeftRatio:  0.8406411219232052
impurityDrop:  0.8406430100558351
giniGain:  0.05935698994416494
lclasses:  [923, 953, 616, 150, 156, 108, 108, 107, 946, 923]
rclasses:  [77, 47, 384, 850, 844, 892, 892, 893, 54, 77]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  2 , imgTensorShape :  torch.Size([4990, 3, 32, 32])
nodeId: 2 ,  parentId: 1 ,  level: 1 ,  lchildId: 4 ,  rchildId: 5 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 4990
nodeId:  3 , imgTensorShape :  torch.Size([5010, 3, 32, 32])
nodeId: 3 ,  parentId: 1 ,  level: 1 ,  lchildId: 6 ,  rchildId: 7 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 5 ,  numData: 5010
Nodes sizes =  5 5
Node 2 Acc: 64.649
Split Acc: 77.715
lTrainDict[data].shape:  torch.Size([2034, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([2034])
rTrainDict[data].shape:  torch.Size([2956, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([2956])
# of Left images:  2034.0
# of Right images:  2956.0
giniRightRatio:  0.7910982639378452
giniLeftRatio:  0.6703319865144075
impurityDrop:  0.707999952611975
giniGain:  0.13264116931123016
lclasses:  [796, 66, 88, 35, 51, 20, 18, 26, 839, 95]
rclasses:  [127, 887, 528, 115, 105, 88, 90, 81, 107, 828]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  4 , imgTensorShape :  torch.Size([2034, 3, 32, 32])
nodeId: 4 ,  parentId: 2 ,  level: 2 ,  lchildId: 8 ,  rchildId: 9 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 2034
nodeId:  5 , imgTensorShape :  torch.Size([2956, 3, 32, 32])
nodeId: 5 ,  parentId: 2 ,  level: 2 ,  lchildId: 10 ,  rchildId: 11 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 2956
Nodes sizes =  2 3
Node 3 Acc: 56.387
Split Acc: 74.411
lTrainDict[data].shape:  torch.Size([2037, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([2037])
rTrainDict[data].shape:  torch.Size([2973, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([2973])
# of Left images:  2037.0
# of Right images:  2973.0
giniRightRatio:  0.7863479013781279
giniLeftRatio:  0.7369679582606417
impurityDrop:  0.7525144186568633
giniGain:  0.08859968049015199
lclasses:  [48, 24, 187, 149, 633, 90, 784, 85, 16, 21]
rclasses:  [29, 23, 197, 701, 211, 802, 108, 808, 38, 56]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  6 , imgTensorShape :  torch.Size([2037, 3, 32, 32])
nodeId: 6 ,  parentId: 3 ,  level: 2 ,  lchildId: 12 ,  rchildId: 13 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 2037
nodeId:  7 , imgTensorShape :  torch.Size([2973, 3, 32, 32])
nodeId: 7 ,  parentId: 3 ,  level: 2 ,  lchildId: 14 ,  rchildId: 15 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 3 ,  numData: 2973
Nodes sizes =  2 3
Node 4 Acc: 68.633
Split Acc: 71.337
lTrainDict[data].shape:  torch.Size([1053, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([1053])
rTrainDict[data].shape:  torch.Size([981, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([981])
# of Left images:  1053.0
# of Right images:  981.0
giniRightRatio:  0.41885945087134663
giniLeftRatio:  0.5259481118930311
impurityDrop:  0.5338078301331548
giniGain:  0.1365241563812527
lclasses:  [711, 32, 70, 21, 27, 13, 8, 22, 99, 50]
rclasses:  [85, 34, 18, 14, 24, 7, 10, 4, 740, 45]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  8 , imgTensorShape :  torch.Size([1053, 3, 32, 32])
nodeId: 8 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 0 ,  numClasses: 1 ,  numData: 1053
nodeId:  9 , imgTensorShape :  torch.Size([981, 3, 32, 32])
nodeId: 9 ,  parentId: 4 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 8 ,  numClasses: 1 ,  numData: 981
Nodes sizes =  1 1
Node 5 Acc: 63.633
Split Acc: 73.309
lTrainDict[data].shape:  torch.Size([927, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([927])
rTrainDict[data].shape:  torch.Size([2029, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([2029])
# of Left images:  927.0
# of Right images:  2029.0
giniRightRatio:  0.6539616176578109
giniLeftRatio:  0.6881508712029967
impurityDrop:  0.6695818434027035
giniGain:  0.12151642053514167
lclasses:  [52, 18, 492, 74, 85, 68, 54, 42, 20, 22]
rclasses:  [75, 869, 36, 41, 20, 20, 36, 39, 87, 806]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  10 , imgTensorShape :  torch.Size([927, 3, 32, 32])
nodeId: 10 ,  parentId: 5 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 2 ,  numClasses: 1 ,  numData: 927
nodeId:  11 , imgTensorShape :  torch.Size([2029, 3, 32, 32])
nodeId: 11 ,  parentId: 5 ,  level: 3 ,  lchildId: 16 ,  rchildId: 17 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 2029
Nodes sizes =  1 2
Node 6 Acc: 61.905
Split Acc: 62.838
lTrainDict[data].shape:  torch.Size([970, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([970])
rTrainDict[data].shape:  torch.Size([1067, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([1067])
# of Left images:  970.0
# of Right images:  1067.0
giniRightRatio:  0.5147032601983859
giniLeftRatio:  0.6459517483260707
impurityDrop:  0.6340200675871902
giniGain:  0.10294789067345145
lclasses:  [26, 12, 115, 68, 551, 49, 55, 72, 10, 12]
rclasses:  [22, 12, 72, 81, 82, 41, 729, 13, 6, 9]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  12 , imgTensorShape :  torch.Size([970, 3, 32, 32])
nodeId: 12 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 4 ,  numClasses: 1 ,  numData: 970
nodeId:  13 , imgTensorShape :  torch.Size([1067, 3, 32, 32])
nodeId: 13 ,  parentId: 6 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 6 ,  numClasses: 1 ,  numData: 1067
Nodes sizes =  1 1
Node 7 Acc: 54.793
Split Acc: 60.175
lTrainDict[data].shape:  torch.Size([950, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([950])
rTrainDict[data].shape:  torch.Size([2023, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([2023])
# of Left images:  950.0
# of Right images:  2023.0
giniRightRatio:  0.7707737684937601
giniLeftRatio:  0.6308808864265928
impurityDrop:  0.7050801263959801
giniGain:  0.08126777498214788
lclasses:  [4, 4, 56, 186, 44, 536, 33, 70, 8, 9]
rclasses:  [25, 19, 141, 515, 167, 266, 75, 738, 30, 47]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  14 , imgTensorShape :  torch.Size([950, 3, 32, 32])
nodeId: 14 ,  parentId: 7 ,  level: 3 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 5 ,  numClasses: 1 ,  numData: 950
nodeId:  15 , imgTensorShape :  torch.Size([2023, 3, 32, 32])
nodeId: 15 ,  parentId: 7 ,  level: 3 ,  lchildId: 18 ,  rchildId: 19 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 2 ,  numData: 2023
Nodes sizes =  1 2
Node 8 Acc: 67.521
Node 9 Acc: 75.433
Node 10 Acc: 53.074
Node 11 Acc: 69.542
Split Acc: 71.217
lTrainDict[data].shape:  torch.Size([1012, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([1012])
rTrainDict[data].shape:  torch.Size([1017, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([1017])
# of Left images:  1012.0
# of Right images:  1017.0
giniRightRatio:  0.43970495673839705
giniLeftRatio:  0.5088854692308894
impurityDrop:  0.5085453487171604
giniGain:  0.14541626894065052
lclasses:  [43, 119, 24, 27, 9, 14, 17, 29, 35, 695]
rclasses:  [32, 750, 12, 14, 11, 6, 19, 10, 52, 111]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  16 , imgTensorShape :  torch.Size([1012, 3, 32, 32])
nodeId: 16 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 9 ,  numClasses: 1 ,  numData: 1012
nodeId:  17 , imgTensorShape :  torch.Size([1017, 3, 32, 32])
nodeId: 17 ,  parentId: 11 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 1 ,  numClasses: 1 ,  numData: 1017
Nodes sizes =  1 1
Node 12 Acc: 56.804
Node 13 Acc: 68.322
Node 14 Acc: 56.421
Node 15 Acc: 54.721
Split Acc: 55.858
lTrainDict[data].shape:  torch.Size([1023, 3, 32, 32])   lTrainDict[label].shape:  torch.Size([1023])
rTrainDict[data].shape:  torch.Size([1000, 3, 32, 32])   rTrainDict[label].shape:  torch.Size([1000])
# of Left images:  1023.0
# of Right images:  1000.0
giniRightRatio:  0.520588
giniLeftRatio:  0.7441876909287749
impurityDrop:  0.7493304838201367
giniGain:  0.02144328467362344
lclasses:  [16, 13, 102, 451, 85, 196, 59, 59, 21, 21]
rclasses:  [9, 6, 39, 64, 82, 70, 16, 679, 9, 26]
noOfLeftClasses:  10
noOfRightClasses:  10
RETURNING FROM WORK...
nodeId:  18 , imgTensorShape :  torch.Size([1023, 3, 32, 32])
nodeId: 18 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 3 ,  numClasses: 1 ,  numData: 1023
nodeId:  19 , imgTensorShape :  torch.Size([1000, 3, 32, 32])
nodeId: 19 ,  parentId: 15 ,  level: 4 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: 7 ,  numClasses: 1 ,  numData: 1000
Nodes sizes =  1 1
Node 16 Acc: 68.676
Node 17 Acc: 73.746
Node 18 Acc: 44.086
Node 19 Acc: 67.900
[[711  32  52  16  26   4  22   9  85  43]
 [ 32 750  18  13  12   4  12   6  34 119]
 [ 70  12 492 102 115  56  72  39  18  24]
 [ 21  14  74 451  68 186  81  64  14  27]
 [ 27  11  85  85 551  44  82  82  24   9]
 [ 13   6  68 196  49 536  41  70   7  14]
 [  8  19  54  59  55  33 729  16  10  17]
 [ 22  10  42  59  72  70  13 679   4  29]
 [ 99  52  20  21  10   8   6   9 740  35]
 [ 50 111  22  21  12   9   9  26  45 695]]

Acc: 63.340

                                                             1                                                                 
                   ┌─────────────────────────────────────────┴───────────────────────────┐                                     
                   2                                                                     3                                     
       ┌───────────┴─────────────┐                                         ┌─────────────┴─────────────┐                       
       4                         5                                         6                           7                       
 ┌─────┴─────┐            ┌──────┴─────────────┐                    ┌──────┴──────┐             ┌──────┴─────────────┐         
 8           9            10                   11                   12            13            14                   15        
                                        ┌──────┴──────┐                                                       ┌──────┴──────┐  
                                        16            17                                                      18            19 

                                                       -1                                                      
                   ┌───────────────────────────────────┴───────────────────────┐                               
                   -1                                                          -1                              
       ┌───────────┴───────────┐                                   ┌───────────┴───────────┐                   
       -1                      -1                                  -1                      -1                  
 ┌─────┴─────┐           ┌─────┴───────────┐                 ┌─────┴─────┐           ┌─────┴───────────┐       
 0           8           2                 -1                4           6           5                 -1      
                                     ┌─────┴─────┐                                               ┌─────┴─────┐ 
                                     9           1                                               3           7 

                                                                         49000                                                                         
                           ┌───────────────────────────────────────────────┴───────────────────────────────┐                                           
                         24500                                                                           24500                                         
           ┌───────────────┴───────────────┐                                               ┌───────────────┴───────────────┐                           
          9800                           14700                                            9800                           14700                         
   ┌───────┴───────┐               ┌───────┴───────────────┐                       ┌───────┴───────┐               ┌───────┴───────────────┐           
  4900            4900            4900                    9800                    4900            4900            4900                    9800         
                                                   ┌───────┴───────┐                                                               ┌───────┴───────┐   
                                                  4900            4900                                                            4900            4900 

                                                   {0: 4900, 1: 4900, 2: 4900, 3: 4900, 4: 4900, 5: 4900, 6: 4900, 7: 4900, 8: 4900, 9: 4900}                                                  
                                   ┌───────────────────────────────────────────────────────────┴───────────────────────────────────────┐                                                       
             {0: 4900, 1: 4900, 2: 4900, 8: 4900, 9: 4900}                                                       {3: 4900, 4: 4900, 5: 4900, 6: 4900, 7: 4900}                                 
               ┌───────────────────┴───────────────────┐                                                           ┌───────────────────┴───────────────────┐                                   
       {0: 4900, 8: 4900}                 {1: 4900, 2: 4900, 9: 4900}                                      {4: 4900, 6: 4900}                 {3: 4900, 5: 4900, 7: 4900}                      
     ┌─────────┴─────────┐                   ┌─────────┴───────────────────┐                             ┌─────────┴─────────┐                   ┌─────────┴───────────────────┐               
 {0: 4900}           {8: 4900}           {2: 4900}                 {1: 4900, 9: 4900}                {4: 4900}           {6: 4900}           {5: 4900}                 {3: 4900, 7: 4900}      
                                                                 ┌─────────┴─────────┐                                                                               ┌─────────┴─────────┐     
                                                             {9: 4900}           {1: 4900}                                                                       {3: 4900}           {7: 4900} 

                                                               87.32                                                                   
                       ┌─────────────────────────────────────────┴─────────────────────────────┐                                       
               77.71543086172345                                                       74.41117764471058                               
         ┌─────────────┴─────────────┐                                          ┌──────────────┴─────────────┐                         
 71.33726647000984            73.3085250338295                          62.837506136475206            60.1749075008409                 
  ┌──────┴──────┐             ┌──────┴─────────────┐                     ┌──────┴──────┐              ┌──────┴──────────────┐          
 0.0           0.0           0.0           71.21734844751109            0.0           0.0            0.0            55.857637172516064 
                                            ┌──────┴──────┐                                                          ┌──────┴──────┐   
                                           0.0           0.0                                                        0.0           0.0  

                                                         0.09999999999999987                                                         
                       ┌──────────────────────────────────────────┴───────────────────────────┐                                      
              0.24444444444444458                                                    0.24444444444444458                             
         ┌─────────────┴──────────────┐                                         ┌─────────────┴──────────────┐                       
        0.5                  0.41666666666666674                               0.5                  0.41666666666666674              
  ┌──────┴──────┐             ┌──────┴─────────────┐                     ┌──────┴──────┐             ┌──────┴─────────────┐          
 0.0           0.0           0.0                  0.5                   0.0           0.0           0.0                  0.5         
                                            ┌──────┴──────┐                                                        ┌──────┴──────┐   
                                           0.0           0.0                                                      0.0           0.0  

