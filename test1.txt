==> Preparing data..
Files already downloaded and verified
Files already downloaded and verified
len(trainInputDict["data"]):  49900 ,  len(valInputDict["data"]):  10 ,  len(testInputDict["data"]):  10000
nodeId:  1 , imgTensorShape :  torch.Size([10000, 3, 32, 32])
nodeId: 1 ,  parentId: 0 ,  level: 0 ,  lchildId: 2 ,  rchildId: 3 ,  isLeaf: False ,  leafClass: -1 ,  numClasses: 10
Node 1 Acc: 59.100
Split Acc: 77.510
# of Left images:  3587.0
# of Right images:  6413.0
giniRightRatio:  0.8828747664314036
giniLeftRatio:  0.8452610793133741
impurityDrop:  0.8618362048077686
giniGain:  0.03816379519223145
lclasses:  [804, 464, 245, 180, 134, 162, 65, 168, 802, 563]
rclasses:  [196, 536, 755, 820, 866, 838, 935, 832, 198, 437]
noOfLeftClasses:  10
noOfRightClasses:  10
lTrainDict[data].shape:  torch.Size([3587, 16, 28, 28])   lTrainDict[label].shape:  torch.Size([3587])
rTrainDict[data].shape:  torch.Size([6413, 16, 28, 28])   rTrainDict[label].shape:  torch.Size([6413])
RETURNING FROM WORK...
nodeId:  2 , imgTensorShape :  torch.Size([3587, 16, 28, 28])
nodeId: 2 ,  parentId: 1 ,  level: 1 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: -1 ,  numClasses: 9
nodeId:  3 , imgTensorShape :  torch.Size([6413, 16, 28, 28])
nodeId: 3 ,  parentId: 1 ,  level: 1 ,  lchildId: -1 ,  rchildId: -1 ,  isLeaf: True ,  leafClass: -1 ,  numClasses: 10
Nodes sizes =  9 10
Node 2 Acc: 51.129
Node 3 Acc: 55.684
[[514  40 101  30  42  14  14  30 164  51]
 [ 44 673   8  16   6   5  14  15  72 147]
 [ 91  13 387  78 132 102  96  59  20  22]
 [ 22  19  84 328  88 261  77  55  25  41]
 [ 44  10  95  72 510  70  58 109  17  15]
 [ 16   8  69 150  71 537  31  84  18  16]
 [ 15   9  59  81  52  50 684  17  12  21]
 [ 21   6  49  39  83  96  14 640   6  46]
 [140 109  25  20  26  11   5  23 591  50]
 [ 55 216  11  36  10  12  16  40  63 541]]

Acc: 54.050
